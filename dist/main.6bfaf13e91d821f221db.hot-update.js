self["webpackHotUpdatelets_delivery"]("main",{

/***/ "./node_modules/@chakra-ui/accordion/dist/chakra-ui-accordion.esm.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@chakra-ui/accordion/dist/chakra-ui-accordion.esm.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Accordion": () => (/* binding */ Accordion),
/* harmony export */   "AccordionButton": () => (/* binding */ AccordionButton),
/* harmony export */   "AccordionDescendantsProvider": () => (/* binding */ AccordionDescendantsProvider),
/* harmony export */   "AccordionIcon": () => (/* binding */ AccordionIcon),
/* harmony export */   "AccordionItem": () => (/* binding */ AccordionItem),
/* harmony export */   "AccordionPanel": () => (/* binding */ AccordionPanel),
/* harmony export */   "AccordionProvider": () => (/* binding */ AccordionProvider),
/* harmony export */   "useAccordion": () => (/* binding */ useAccordion),
/* harmony export */   "useAccordionContext": () => (/* binding */ useAccordionContext),
/* harmony export */   "useAccordionDescendant": () => (/* binding */ useAccordionDescendant),
/* harmony export */   "useAccordionDescendants": () => (/* binding */ useAccordionDescendants),
/* harmony export */   "useAccordionDescendantsContext": () => (/* binding */ useAccordionDescendantsContext),
/* harmony export */   "useAccordionItem": () => (/* binding */ useAccordionItem),
/* harmony export */   "useAccordionItemState": () => (/* binding */ useAccordionItemState)
/* harmony export */ });
/* harmony import */ var _chakra_ui_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/icon */ "./node_modules/@chakra-ui/icon/dist/chakra-ui-icon.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/transition */ "./node_modules/@chakra-ui/transition/dist/chakra-ui-transition.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_descendant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/descendant */ "./node_modules/@chakra-ui/descendant/dist/chakra-ui-descendant.esm.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");










function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded$1 = ["onChange", "defaultIndex", "index", "allowMultiple", "allowToggle"],
    _excluded2$1 = ["isDisabled", "isFocusable", "id"];
/* -------------------------------------------------------------------------------------------------
 * Create context to track descendants and their indices
 * -----------------------------------------------------------------------------------------------*/

var _createDescendantCont = (0,_chakra_ui_descendant__WEBPACK_IMPORTED_MODULE_1__.createDescendantContext)(),
    AccordionDescendantsProvider = _createDescendantCont[0],
    useAccordionDescendantsContext = _createDescendantCont[1],
    useAccordionDescendants = _createDescendantCont[2],
    useAccordionDescendant = _createDescendantCont[3];

/**
 * useAccordion hook provides all the state and focus management logic
 * for accordion items.
 */
function useAccordion(props) {
  var onChange = props.onChange,
      defaultIndex = props.defaultIndex,
      indexProp = props.index,
      allowMultiple = props.allowMultiple,
      allowToggle = props.allowToggle,
      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$1); // validate the props and `warn` if used incorrectly


  allowMultipleWarning(props);
  allowMultipleAndAllowToggleWarning(props);
  /**
   * Think of this as the register to each accordion item.
   * We used to manage focus between accordion item buttons.
   *
   * Every accordion item, registers their button refs in this context
   */

  var descendants = useAccordionDescendants();
  /**
   * This state is used to track the index focused accordion
   * button when click on the button, tab on the button, or
   * use the down/up arrow to navigate.
   */

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1),
      focusedIndex = _useState[0],
      setFocusedIndex = _useState[1];
  /**
   * Reset focused index when accordion unmounts
   * or descendants change
   */


  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useUnmountEffect)(function () {
    setFocusedIndex(-1);
  });
  /**
   * Hook that manages the controlled and un-controlled state
   * for the accordion.
   */

  var _useControllableState = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useControllableState)({
    value: indexProp,
    defaultValue: function defaultValue() {
      if (allowMultiple) return defaultIndex != null ? defaultIndex : [];
      return defaultIndex != null ? defaultIndex : -1;
    },
    onChange: onChange
  }),
      index = _useControllableState[0],
      setIndex = _useControllableState[1];
  /**
   * Gets the `isOpen` and `onChange` props for a child accordion item based on
   * the child's index.
   *
   * @param idx {number} The index of the child accordion item
   */


  var getAccordionItemProps = function getAccordionItemProps(idx) {
    var isOpen = false;

    if (idx !== null) {
      isOpen = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isArray)(index) ? index.includes(idx) : index === idx;
    }

    var onChange = function onChange(isOpen) {
      if (idx === null) return;

      if (allowMultiple && (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isArray)(index)) {
        var nextState = isOpen ? (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.addItem)(index, idx) : (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.removeItem)(index, idx);
        setIndex(nextState);
      } else if (isOpen) {
        setIndex(idx);
      } else if (allowToggle) {
        setIndex(-1);
      }
    };

    return {
      isOpen: isOpen,
      onChange: onChange
    };
  };

  return {
    index: index,
    setIndex: setIndex,
    htmlProps: htmlProps,
    getAccordionItemProps: getAccordionItemProps,
    focusedIndex: focusedIndex,
    setFocusedIndex: setFocusedIndex,
    descendants: descendants
  };
}

var _createContext$1 = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_4__.createContext)({
  name: "AccordionContext",
  errorMessage: "useAccordionContext: `context` is undefined. Seems you forgot to wrap the accordion components in `<Accordion />`"
}),
    AccordionProvider = _createContext$1[0],
    useAccordionContext = _createContext$1[1];

/**
 * useAccordionItem
 *
 * React hook that provides the open/close functionality
 * for an accordion item and its children
 */
function useAccordionItem(props) {
  var isDisabled = props.isDisabled,
      isFocusable = props.isFocusable,
      id = props.id,
      htmlProps = _objectWithoutPropertiesLoose(props, _excluded2$1);

  var _useAccordionContext = useAccordionContext(),
      getAccordionItemProps = _useAccordionContext.getAccordionItemProps,
      setFocusedIndex = _useAccordionContext.setFocusedIndex;

  var buttonRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  /**
   * Generate unique ids for all accordion item components (button and panel)
   */

  var _useIds = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useIds)(id, "accordion-button", "accordion-panel"),
      buttonId = _useIds[0],
      panelId = _useIds[1];

  focusableNotDisabledWarning(props);
  /**
   * Think of this as a way to register this accordion item
   * with its parent `useAccordion`
   */

  var _useAccordionDescenda = useAccordionDescendant({
    disabled: isDisabled && !isFocusable
  }),
      register = _useAccordionDescenda.register,
      index = _useAccordionDescenda.index,
      descendants = _useAccordionDescenda.descendants;

  var _getAccordionItemProp = getAccordionItemProps(index === -1 ? null : index),
      isOpen = _getAccordionItemProp.isOpen,
      onChange = _getAccordionItemProp.onChange;

  warnIfOpenAndDisabled({
    isOpen: isOpen,
    isDisabled: isDisabled
  });

  var onOpen = function onOpen() {
    onChange == null ? void 0 : onChange(true);
  };

  var onClose = function onClose() {
    onChange == null ? void 0 : onChange(false);
  };
  /**
   * Toggle the visibility of the accordion item
   */


  var onClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    onChange == null ? void 0 : onChange(!isOpen);
    setFocusedIndex(index);
  }, [index, setFocusedIndex, isOpen, onChange]);
  /**
   * Manage keyboard navigation between accordion items.
   */

  var onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    var eventKey = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.normalizeEventKey)(event);
    var keyMap = {
      ArrowDown: function ArrowDown() {
        var next = descendants.nextEnabled(index);
        if (next) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.focus)(next.node);
      },
      ArrowUp: function ArrowUp() {
        var prev = descendants.prevEnabled(index);
        if (prev) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.focus)(prev.node);
      },
      Home: function Home() {
        var first = descendants.firstEnabled();
        if (first) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.focus)(first.node);
      },
      End: function End() {
        var last = descendants.lastEnabled();
        if (last) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.focus)(last.node);
      }
    };
    var action = keyMap[eventKey];

    if (action) {
      event.preventDefault();
      action(event);
    }
  }, [descendants, index]);
  /**
   * Since each accordion item's button still remains tabbable, let's
   * update the focusedIndex when it receives focus
   */

  var onFocus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    setFocusedIndex(index);
  }, [setFocusedIndex, index]);
  var getButtonProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      type: "button",
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_4__.mergeRefs)(register, buttonRef, ref),
      id: buttonId,
      disabled: !!isDisabled,
      "aria-expanded": !!isOpen,
      "aria-controls": panelId,
      onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onClick, onClick),
      onFocus: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onFocus, onFocus),
      onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onKeyDown, onKeyDown)
    });
  }, [buttonId, isDisabled, isOpen, onClick, onFocus, onKeyDown, panelId, register]);
  var getPanelProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: ref,
      role: "region",
      id: panelId,
      "aria-labelledby": buttonId,
      hidden: !isOpen
    });
  }, [buttonId, isOpen, panelId]);
  return {
    isOpen: isOpen,
    isDisabled: isDisabled,
    isFocusable: isFocusable,
    onOpen: onOpen,
    onClose: onClose,
    getButtonProps: getButtonProps,
    getPanelProps: getPanelProps,
    htmlProps: htmlProps
  };
}

/* -------------------------------------------------------------------------------------------------
 * Validate accordion and accordion item props, and emit warnings.
 * -----------------------------------------------------------------------------------------------*/
function allowMultipleWarning(props) {
  var index = props.index || props.defaultIndex;
  var condition = !(0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(index) && !(0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isArray)(index) && props.allowMultiple;
  (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.warn)({
    condition: !!condition,
    message: "If 'allowMultiple' is passed, then 'index' or 'defaultIndex' must be an array. You passed: " + typeof index + ","
  });
}

function allowMultipleAndAllowToggleWarning(props) {
  (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.warn)({
    condition: !!(props.allowMultiple && props.allowToggle),
    message: "If 'allowMultiple' is passed, 'allowToggle' will be ignored. Either remove 'allowToggle' or 'allowMultiple' depending on whether you want multiple accordions visible or not"
  });
}

function focusableNotDisabledWarning(props) {
  (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.warn)({
    condition: !!(props.isFocusable && !props.isDisabled),
    message: "Using only 'isFocusable', this prop is reserved for situations where you pass 'isDisabled' but you still want the element to receive focus (A11y). Either remove it or pass 'isDisabled' as well.\n    "
  });
}

function warnIfOpenAndDisabled(props) {
  (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.warn)({
    condition: props.isOpen && !!props.isDisabled,
    message: "Cannot open a disabled accordion item"
  });
}

var _excluded = ["children", "reduceMotion"],
    _excluded2 = ["htmlProps", "descendants"],
    _excluded3 = ["htmlProps"];
/* -------------------------------------------------------------------------------------------------
 * Accordion - The wrapper that provides context for all accordion items
 * -----------------------------------------------------------------------------------------------*/

/**
 * The wrapper that provides context and focus management
 * for all accordion items.
 *
 * It wraps all accordion items in a `div` for better grouping.
 * @see Docs https://chakra-ui.com/accordion
 */
var Accordion = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function (_ref, ref) {
  var children = _ref.children,
      reduceMotion = _ref.reduceMotion,
      props = _objectWithoutPropertiesLoose(_ref, _excluded);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.useMultiStyleConfig)("Accordion", props);
  var ownProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.omitThemingProps)(props);

  var _useAccordion = useAccordion(ownProps),
      htmlProps = _useAccordion.htmlProps,
      descendants = _useAccordion.descendants,
      context = _objectWithoutPropertiesLoose(_useAccordion, _excluded2);

  var ctx = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return _extends({}, context, {
      reduceMotion: !!reduceMotion
    });
  }, [context, reduceMotion]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AccordionDescendantsProvider, {
    value: descendants
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AccordionProvider, {
    value: ctx
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.chakra.div, _extends({
    ref: ref
  }, htmlProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-accordion", props.className)
  }), children))));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  Accordion.displayName = "Accordion";
}
/* -------------------------------------------------------------------------------------------------
 * Accordion Item
 * -----------------------------------------------------------------------------------------------*/


var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_4__.createContext)({
  name: "AccordionItemContext",
  errorMessage: "useAccordionItemContext: `context` is undefined. Seems you forgot to wrap the accordion item parts in `<AccordionItem />` "
}),
    AccordionItemProvider = _createContext[0],
    useAccordionItemContext = _createContext[1];

/**
 * AccordionItem is a single accordion that provides the open-close
 * behavior when the accordion button is clicked.
 *
 * It also provides context for the accordion button and panel.
 */
var AccordionItem = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function (props, ref) {
  var children = props.children,
      className = props.className;

  var _useAccordionItem = useAccordionItem(props),
      htmlProps = _useAccordionItem.htmlProps,
      context = _objectWithoutPropertiesLoose(_useAccordionItem, _excluded3);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.useStyles)();

  var containerStyles = _extends({}, styles.container, {
    overflowAnchor: "none"
  });

  var ctx = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return context;
  }, [context]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AccordionItemProvider, {
    value: ctx
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.chakra.div, _extends({
    ref: ref
  }, htmlProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-accordion__item", className),
    __css: containerStyles
  }), (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.runIfFn)(children, {
    isExpanded: !!context.isOpen,
    isDisabled: !!context.isDisabled
  })));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  AccordionItem.displayName = "AccordionItem";
}
/**
 * React hook to get the state and actions of an accordion item
 */


function useAccordionItemState() {
  var _useAccordionItemCont = useAccordionItemContext(),
      isOpen = _useAccordionItemCont.isOpen,
      isDisabled = _useAccordionItemCont.isDisabled,
      onClose = _useAccordionItemCont.onClose,
      onOpen = _useAccordionItemCont.onOpen;

  return {
    isOpen: isOpen,
    onClose: onClose,
    isDisabled: isDisabled,
    onOpen: onOpen
  };
}
/* -------------------------------------------------------------------------------------------------
 * Accordion Item => Button
 * -----------------------------------------------------------------------------------------------*/

/**
 * AccordionButton is used expands and collapses an accordion item.
 * It must be a child of `AccordionItem`.
 *
 * Note 🚨: Each accordion button must be wrapped in an heading tag,
 * that is appropriate for the information architecture of the page.
 */
var AccordionButton = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function (props, ref) {
  var _useAccordionItemCont2 = useAccordionItemContext(),
      getButtonProps = _useAccordionItemCont2.getButtonProps;

  var buttonProps = getButtonProps(props, ref);
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.useStyles)();

  var buttonStyles = _extends({
    display: "flex",
    alignItems: "center",
    width: "100%",
    outline: 0
  }, styles.button);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.chakra.button, _extends({}, buttonProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-accordion__button", props.className),
    __css: buttonStyles
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  AccordionButton.displayName = "AccordionButton";
}
/* -------------------------------------------------------------------------------------------------
 * Accordion Item => Panel
 * -----------------------------------------------------------------------------------------------*/


/**
 * Accordion panel that holds the content for each accordion.
 * It shows and hides based on the state login from the `AccordionItem`.
 *
 * It uses the `Collapse` component to animate its height.
 */
var AccordionPanel = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function (props, ref) {
  var _useAccordionContext = useAccordionContext(),
      reduceMotion = _useAccordionContext.reduceMotion;

  var _useAccordionItemCont3 = useAccordionItemContext(),
      getPanelProps = _useAccordionItemCont3.getPanelProps,
      isOpen = _useAccordionItemCont3.isOpen; // remove `hidden` prop, 'coz we're using height animation


  var panelProps = getPanelProps(props, ref);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-accordion__panel", props.className);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.useStyles)();

  if (!reduceMotion) {
    delete panelProps.hidden;
  }

  var child = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.chakra.div, _extends({}, panelProps, {
    __css: styles.panel,
    className: _className
  }));

  if (!reduceMotion) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_transition__WEBPACK_IMPORTED_MODULE_6__.Collapse, {
      "in": isOpen
    }, child);
  }

  return child;
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  AccordionPanel.displayName = "AccordionPanel";
}
/* -------------------------------------------------------------------------------------------------
 * Accordion Item => Icon
 * -----------------------------------------------------------------------------------------------*/

/**
 * AccordionIcon that gives a visual cue of the open/close state of the accordion item.
 * It rotates `180deg` based on the open/close state.
 */


var AccordionIcon = function AccordionIcon(props) {
  var _useAccordionItemCont4 = useAccordionItemContext(),
      isOpen = _useAccordionItemCont4.isOpen,
      isDisabled = _useAccordionItemCont4.isDisabled;

  var _useAccordionContext2 = useAccordionContext(),
      reduceMotion = _useAccordionContext2.reduceMotion;

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-accordion__icon", props.className);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.useStyles)();

  var iconStyles = _extends({
    opacity: isDisabled ? 0.4 : 1,
    transform: isOpen ? "rotate(-180deg)" : undefined,
    transition: reduceMotion ? undefined : "transform 0.2s",
    transformOrigin: "center"
  }, styles.icon);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_7__.Icon, _extends({
    viewBox: "0 0 24 24",
    "aria-hidden": true,
    className: _className,
    __css: iconStyles
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
  }));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  AccordionIcon.displayName = "AccordionIcon";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/alert/dist/chakra-ui-alert.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@chakra-ui/alert/dist/chakra-ui-alert.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Alert": () => (/* binding */ Alert),
/* harmony export */   "AlertDescription": () => (/* binding */ AlertDescription),
/* harmony export */   "AlertIcon": () => (/* binding */ AlertIcon),
/* harmony export */   "AlertTitle": () => (/* binding */ AlertTitle)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/icon */ "./node_modules/@chakra-ui/icon/dist/chakra-ui-icon.esm.js");






function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var CheckIcon = function CheckIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_1__.Icon, _extends({
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
  }));
};
var InfoIcon = function InfoIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_1__.Icon, _extends({
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
  }));
};
var WarningIcon = function WarningIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_1__.Icon, _extends({
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"
  }));
};

var _excluded = ["status"];
var STATUSES = {
  info: {
    icon: InfoIcon,
    colorScheme: "blue"
  },
  warning: {
    icon: WarningIcon,
    colorScheme: "orange"
  },
  success: {
    icon: CheckIcon,
    colorScheme: "green"
  },
  error: {
    icon: WarningIcon,
    colorScheme: "red"
  }
};

var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__.createContext)({
  name: "AlertContext",
  errorMessage: "useAlertContext: `context` is undefined. Seems you forgot to wrap alert components in `<Alert />`"
}),
    AlertProvider = _createContext[0],
    useAlertContext = _createContext[1];

/**
 * Alert is used to communicate the state or status of a
 * page, feature or action
 */
var Alert = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  var _props$colorScheme;

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.omitThemingProps)(props),
      _omitThemingProps$sta = _omitThemingProps.status,
      status = _omitThemingProps$sta === void 0 ? "info" : _omitThemingProps$sta,
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);

  var colorScheme = (_props$colorScheme = props.colorScheme) != null ? _props$colorScheme : STATUSES[status].colorScheme;
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useMultiStyleConfig)("Alert", _extends({}, props, {
    colorScheme: colorScheme
  }));

  var alertStyles = _extends({
    width: "100%",
    display: "flex",
    alignItems: "center",
    position: "relative",
    overflow: "hidden"
  }, styles.container);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AlertProvider, {
    value: {
      status: status
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.div, _extends({
    role: "alert",
    ref: ref
  }, rest, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-alert", props.className),
    __css: alertStyles
  }))));
});
var AlertTitle = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.div, _extends({
    ref: ref
  }, props, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-alert__title", props.className),
    __css: styles.title
  }));
});
var AlertDescription = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();

  var descriptionStyles = _extends({
    display: "inline"
  }, styles.description);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.div, _extends({
    ref: ref
  }, props, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-alert__desc", props.className),
    __css: descriptionStyles
  }));
});
var AlertIcon = function AlertIcon(props) {
  var _useAlertContext = useAlertContext(),
      status = _useAlertContext.status;

  var BaseIcon = STATUSES[status].icon;
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.span, _extends({
    display: "inherit"
  }, props, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-alert__icon", props.className),
    __css: styles.icon
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(BaseIcon, {
    w: "100%",
    h: "100%"
  }));
};




/***/ }),

/***/ "./node_modules/@chakra-ui/anatomy/dist/chakra-ui-anatomy.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@chakra-ui/anatomy/dist/chakra-ui-anatomy.esm.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "accordionAnatomy": () => (/* binding */ accordionAnatomy),
/* harmony export */   "alertAnatomy": () => (/* binding */ alertAnatomy),
/* harmony export */   "avatarAnatomy": () => (/* binding */ avatarAnatomy),
/* harmony export */   "breadcrumbAnatomy": () => (/* binding */ breadcrumbAnatomy),
/* harmony export */   "buttonAnatomy": () => (/* binding */ buttonAnatomy),
/* harmony export */   "checkboxAnatomy": () => (/* binding */ checkboxAnatomy),
/* harmony export */   "circularProgressAnatomy": () => (/* binding */ circularProgressAnatomy),
/* harmony export */   "drawerAnatomy": () => (/* binding */ drawerAnatomy),
/* harmony export */   "editableAnatomy": () => (/* binding */ editableAnatomy),
/* harmony export */   "formAnatomy": () => (/* binding */ formAnatomy),
/* harmony export */   "formErrorAnatomy": () => (/* binding */ formErrorAnatomy),
/* harmony export */   "inputAnatomy": () => (/* binding */ inputAnatomy),
/* harmony export */   "listAnatomy": () => (/* binding */ listAnatomy),
/* harmony export */   "menuAnatomy": () => (/* binding */ menuAnatomy),
/* harmony export */   "modalAnatomy": () => (/* binding */ modalAnatomy),
/* harmony export */   "numberInputAnatomy": () => (/* binding */ numberInputAnatomy),
/* harmony export */   "pinInputAnatomy": () => (/* binding */ pinInputAnatomy),
/* harmony export */   "popoverAnatomy": () => (/* binding */ popoverAnatomy),
/* harmony export */   "progressAnatomy": () => (/* binding */ progressAnatomy),
/* harmony export */   "radioAnatomy": () => (/* binding */ radioAnatomy),
/* harmony export */   "selectAnatomy": () => (/* binding */ selectAnatomy),
/* harmony export */   "sliderAnatomy": () => (/* binding */ sliderAnatomy),
/* harmony export */   "statAnatomy": () => (/* binding */ statAnatomy),
/* harmony export */   "switchAnatomy": () => (/* binding */ switchAnatomy),
/* harmony export */   "tableAnatomy": () => (/* binding */ tableAnatomy),
/* harmony export */   "tabsAnatomy": () => (/* binding */ tabsAnatomy),
/* harmony export */   "tagAnatomy": () => (/* binding */ tagAnatomy)
/* harmony export */ });
/* harmony import */ var _chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chakra-ui/theme-tools */ "./node_modules/@chakra-ui/theme-tools/dist/chakra-ui-theme-tools.esm.js");


/**
 * **Accordion anatomy**
 * - Item: the accordion item contains the button and panel
 * - Button: the button is the trigger for the panel
 * - Panel: the panel is the content of the accordion item
 * - Icon: the expanded/collapsed icon
 */

var accordionAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("accordion").parts("container", "item", "button", "panel").extend("icon");
/**
 * **Alert anatomy**
 * - Title: the alert's title
 * - Description: the alert's description
 * - Icon: the alert's icon
 */

var alertAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("alert").parts("title", "description", "container").extend("icon");
/**
 * **Avatar anatomy**
 * - Container: the container for the avatar
 * - Label: the avatar initials text
 * - Excess Label: the label or text that represents excess avatar count.
 * Typically used in avatar groups.
 * - Group: the container for the avatar group
 */

var avatarAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("avatar").parts("label", "badge", "container").extend("excessLabel", "group");
/**
 * **Breadcrumb anatomy**
 * - Item: the container for a breadcrumb item
 * - Link: the element that represents the breadcrumb link
 * - Container: the container for the breadcrumb items
 * - Separator: the separator between breadcrumb items
 */

var breadcrumbAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("breadcrumb").parts("link", "item", "container").extend("separator");
var buttonAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("button").parts();
var checkboxAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("checkbox").parts("control", "icon", "container").extend("label");
var circularProgressAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("progress").parts("track", "filledTrack").extend("label");
var drawerAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("drawer").parts("overlay", "dialogContainer", "dialog").extend("header", "closeButton", "body", "footer");
var editableAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("editable").parts("preview", "input");
var formAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("form").parts("container", "requiredIndicator", "helperText");
var formErrorAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("formError").parts("text", "icon");
var inputAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("input").parts("addon", "field", "element");
var listAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("list").parts("container", "item", "icon");
var menuAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("menu").parts("button", "list", "item").extend("groupTitle", "command", "divider");
var modalAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("modal").parts("overlay", "dialogContainer", "dialog").extend("header", "closeButton", "body", "footer");
var numberInputAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("numberinput").parts("root", "field", "stepperGroup", "stepper");
var pinInputAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("pininput").parts("field");
var popoverAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("popover").parts("content", "header", "body", "footer").extend("popper", "arrow", "closeButton");
var progressAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("progress").parts("label", "filledTrack", "track");
var radioAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("radio").parts("container", "control", "label");
var selectAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("select").parts("field", "icon");
var sliderAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("slider").parts("container", "track", "thumb", "filledTrack");
var statAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("stat").parts("container", "label", "helpText", "number", "icon");
var switchAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("switch").parts("container", "track", "thumb");
var tableAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("table").parts("table", "thead", "tbody", "tr", "th", "td", "tfoot", "caption");
var tabsAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("tabs").parts("root", "tab", "tablist", "tabpanel", "tabpanels", "indicator");
/**
 * **Tag anatomy**
 * - Container: the container for the tag
 * - Label: the text content of the tag
 * - closeButton: the close button for the tag
 */

var tagAnatomy = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_0__.anatomy)("tag").parts("container", "label", "closeButton");




/***/ }),

/***/ "./node_modules/@chakra-ui/avatar/dist/chakra-ui-avatar.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@chakra-ui/avatar/dist/chakra-ui-avatar.esm.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Avatar": () => (/* binding */ Avatar),
/* harmony export */   "AvatarBadge": () => (/* binding */ AvatarBadge),
/* harmony export */   "AvatarGroup": () => (/* binding */ AvatarGroup),
/* harmony export */   "baseStyle": () => (/* binding */ baseStyle)
/* harmony export */ });
/* harmony import */ var _chakra_ui_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/image */ "./node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");






function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var _excluded$1 = ["name", "getInitials"],
    _excluded2 = ["src", "name", "showBorder", "borderRadius", "onError", "getInitials", "icon", "iconLabel", "loading", "children", "borderColor", "ignoreFallback"];

/**
 * AvatarBadge used to show extra badge to the top-right
 * or bottom-right corner of an avatar.
 */
var AvatarBadge = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();

  var badgeStyles = _extends({
    position: "absolute",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    insetEnd: "0",
    bottom: "0"
  }, styles.badge);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.div, _extends({
    ref: ref
  }, props, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-avatar__badge", props.className),
    __css: badgeStyles
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  AvatarBadge.displayName = "AvatarBadge";
}

function initials(name) {
  var _name$split = name.split(" "),
      firstName = _name$split[0],
      lastName = _name$split[1];

  return firstName && lastName ? "" + firstName.charAt(0) + lastName.charAt(0) : firstName.charAt(0);
}

/**
 * The avatar name container
 */
var AvatarName = function AvatarName(props) {
  var name = props.name,
      getInitials = props.getInitials,
      rest = _objectWithoutPropertiesLoose(props, _excluded$1);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.div, _extends({
    role: "img",
    "aria-label": name
  }, rest, {
    __css: styles.label
  }), name ? getInitials == null ? void 0 : getInitials(name) : null);
};
/**
 * Fallback avatar react component.
 * This should be a generic svg used to represent an avatar
 */


var DefaultIcon = function DefaultIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.svg, _extends({
    viewBox: "0 0 128 128",
    color: "#fff",
    width: "100%",
    height: "100%",
    className: "chakra-avatar__svg"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24"
  }));
};

var baseStyle = {
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  textAlign: "center",
  textTransform: "uppercase",
  fontWeight: "medium",
  position: "relative",
  flexShrink: 0
};

/**
 * Avatar component that renders an user avatar with
 * support for fallback avatar and name-only avatars
 */
var Avatar = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useMultiStyleConfig)("Avatar", props);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.omitThemingProps)(props),
      src = _omitThemingProps.src,
      name = _omitThemingProps.name,
      showBorder = _omitThemingProps.showBorder,
      _omitThemingProps$bor = _omitThemingProps.borderRadius,
      borderRadius = _omitThemingProps$bor === void 0 ? "full" : _omitThemingProps$bor,
      onError = _omitThemingProps.onError,
      _omitThemingProps$get = _omitThemingProps.getInitials,
      getInitials = _omitThemingProps$get === void 0 ? initials : _omitThemingProps$get,
      _omitThemingProps$ico = _omitThemingProps.icon,
      icon = _omitThemingProps$ico === void 0 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultIcon, null) : _omitThemingProps$ico,
      _omitThemingProps$ico2 = _omitThemingProps.iconLabel,
      iconLabel = _omitThemingProps$ico2 === void 0 ? " avatar" : _omitThemingProps$ico2,
      loading = _omitThemingProps.loading,
      children = _omitThemingProps.children,
      borderColor = _omitThemingProps.borderColor,
      ignoreFallback = _omitThemingProps.ignoreFallback,
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);

  var avatarStyles = _extends({
    borderRadius: borderRadius,
    borderWidth: showBorder ? "2px" : undefined
  }, baseStyle, styles.container);

  if (borderColor) {
    avatarStyles.borderColor = borderColor;
  }

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.span, _extends({
    ref: ref
  }, rest, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-avatar", props.className),
    __css: avatarStyles
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AvatarImage, {
    src: src,
    loading: loading,
    onError: onError,
    getInitials: getInitials,
    name: name,
    borderRadius: borderRadius,
    icon: icon,
    iconLabel: iconLabel,
    ignoreFallback: ignoreFallback
  }), children));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Avatar.displayName = "Avatar";
}

var AvatarImage = function AvatarImage(props) {
  var src = props.src,
      onError = props.onError,
      getInitials = props.getInitials,
      name = props.name,
      borderRadius = props.borderRadius,
      loading = props.loading,
      iconLabel = props.iconLabel,
      _props$icon = props.icon,
      icon = _props$icon === void 0 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultIcon, null) : _props$icon,
      ignoreFallback = props.ignoreFallback;
  /**
   * use the image hook to only show the image when it has loaded
   */

  var status = (0,_chakra_ui_image__WEBPACK_IMPORTED_MODULE_3__.useImage)({
    src: src,
    onError: onError,
    ignoreFallback: ignoreFallback
  });
  var hasLoaded = status === "loaded";
  /**
   * Fallback avatar applies under 2 conditions:
   * - If `src` was passed and the image has not loaded or failed to load
   * - If `src` wasn't passed
   *
   * In this case, we'll show either the name avatar or default avatar
   */

  var showFallback = !src || !hasLoaded;

  if (showFallback) {
    return name ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AvatarName, {
      className: "chakra-avatar__initials",
      getInitials: getInitials,
      name: name
    }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(icon, {
      role: "img",
      "aria-label": iconLabel
    });
  }
  /**
   * If `src` was passed and the image has loaded, we'll show it
   */


  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.img, {
    src: src,
    alt: name,
    className: "chakra-avatar__img",
    loading: loading,
    __css: {
      width: "100%",
      height: "100%",
      objectFit: "cover",
      borderRadius: borderRadius
    }
  });
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  AvatarImage.displayName = "AvatarImage";
}

var _excluded = ["children", "borderColor", "max", "spacing", "borderRadius"];

/**
 * AvatarGroup displays a number of avatars grouped together in a stack.
 */
var AvatarGroup = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useMultiStyleConfig)("Avatar", props);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.omitThemingProps)(props),
      children = _omitThemingProps.children,
      borderColor = _omitThemingProps.borderColor,
      max = _omitThemingProps.max,
      _omitThemingProps$spa = _omitThemingProps.spacing,
      spacing = _omitThemingProps$spa === void 0 ? "-0.75rem" : _omitThemingProps$spa,
      _omitThemingProps$bor = _omitThemingProps.borderRadius,
      borderRadius = _omitThemingProps$bor === void 0 ? "full" : _omitThemingProps$bor,
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);

  var validChildren = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_4__.getValidChildren)(children);
  /**
   * get the avatars within the max
   */

  var childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;
  /**
   * get the remaining avatar count
   */

  var excess = max != null && validChildren.length - max;
  /**
   * Reversing the children is a great way to avoid using zIndex
   * to overlap the avatars
   */

  var reversedChildren = childrenWithinMax.reverse();
  var clones = reversedChildren.map(function (child, index) {
    var _child$props$borderCo;

    var isFirstAvatar = index === 0;
    var childProps = {
      marginEnd: isFirstAvatar ? 0 : spacing,
      size: props.size,
      borderColor: (_child$props$borderCo = child.props.borderColor) != null ? _child$props$borderCo : borderColor,
      showBorder: true
    };
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.filterUndefined)(childProps));
  });
  var groupStyles = {
    display: "flex",
    alignItems: "center",
    justifyContent: "flex-end",
    flexDirection: "row-reverse"
  };

  var excessStyles = _extends({
    borderRadius: borderRadius,
    marginStart: spacing
  }, baseStyle, styles.excessLabel);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.div, _extends({
    ref: ref,
    role: "group",
    __css: groupStyles
  }, rest, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-avatar__group", props.className)
  }), excess > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.span, {
    className: "chakra-avatar__excess",
    __css: excessStyles
  }, "+" + excess), clones);
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  AvatarGroup.displayName = "AvatarGroup";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/breadcrumb/dist/chakra-ui-breadcrumb.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@chakra-ui/breadcrumb/dist/chakra-ui-breadcrumb.esm.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Breadcrumb": () => (/* binding */ Breadcrumb),
/* harmony export */   "BreadcrumbItem": () => (/* binding */ BreadcrumbItem),
/* harmony export */   "BreadcrumbLink": () => (/* binding */ BreadcrumbLink),
/* harmony export */   "BreadcrumbSeparator": () => (/* binding */ BreadcrumbSeparator)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");





function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["spacing"],
    _excluded2 = ["isCurrentPage", "as", "className", "href"],
    _excluded3 = ["isCurrentPage", "separator", "isLastChild", "spacing", "children", "className"],
    _excluded4 = ["children", "spacing", "separator", "className"];

/**
 * React component that separates each breadcrumb link
 */
var BreadcrumbSeparator = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var spacing = props.spacing,
      rest = _objectWithoutPropertiesLoose(props, _excluded);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();

  var separatorStyles = _extends({
    mx: spacing
  }, styles.separator);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.span, _extends({
    ref: ref,
    role: "presentation"
  }, rest, {
    __css: separatorStyles
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  BreadcrumbSeparator.displayName = "BreadcrumbSeparator";
}

/**
 * Breadcrumb link.
 *
 * It renders a `span` when it matches the current link. Otherwise,
 * it renders an anchor tag.
 */
var BreadcrumbLink = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var isCurrentPage = props.isCurrentPage,
      as = props.as,
      className = props.className,
      href = props.href,
      rest = _objectWithoutPropertiesLoose(props, _excluded2);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();

  var sharedProps = _extends({
    ref: ref,
    as: as,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-breadcrumb__link", className)
  }, rest);

  if (isCurrentPage) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.span, _extends({
      "aria-current": "page",
      __css: styles.link
    }, sharedProps));
  }

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.a, _extends({
    __css: styles.link,
    href: href
  }, sharedProps));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  BreadcrumbLink.displayName = "BreadcrumbLink";
}

/**
 * BreadcrumbItem is used to group a breadcrumb link.
 * It renders a `li` element to denote it belongs to an order list of links.
 *
 * @see Docs https://chakra-ui.com/breadcrumb
 */
var BreadcrumbItem = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var isCurrentPage = props.isCurrentPage,
      separator = props.separator,
      isLastChild = props.isLastChild,
      spacing = props.spacing,
      children = props.children,
      className = props.className,
      rest = _objectWithoutPropertiesLoose(props, _excluded3);

  var validChildren = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.getValidChildren)(children);
  var clones = validChildren.map(function (child) {
    if (child.type === BreadcrumbLink) {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
        isCurrentPage: isCurrentPage
      });
    }

    if (child.type === BreadcrumbSeparator) {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
        spacing: spacing,
        children: child.props.children || separator
      });
    }

    return child;
  });
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();

  var itemStyles = _extends({
    display: "inline-flex",
    alignItems: "center"
  }, styles.item);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-breadcrumb__list-item", className);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.li, _extends({
    ref: ref,
    className: _className
  }, rest, {
    __css: itemStyles
  }), clones, !isLastChild && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(BreadcrumbSeparator, {
    spacing: spacing
  }, separator));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  BreadcrumbItem.displayName = "BreadcrumbItem";
}

/**
 * Breadcrumb is used to render a breadcrumb navigation landmark.
 * It renders a `nav` element with `aria-label` set to `Breadcrumb`
 *
 * @see Docs https://chakra-ui.com/breadcrumb
 */
var Breadcrumb = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useMultiStyleConfig)("Breadcrumb", props);
  var ownProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.omitThemingProps)(props);

  var children = ownProps.children,
      _ownProps$spacing = ownProps.spacing,
      spacing = _ownProps$spacing === void 0 ? "0.5rem" : _ownProps$spacing,
      _ownProps$separator = ownProps.separator,
      separator = _ownProps$separator === void 0 ? "/" : _ownProps$separator,
      className = ownProps.className,
      rest = _objectWithoutPropertiesLoose(ownProps, _excluded4);

  var validChildren = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.getValidChildren)(children);
  var count = validChildren.length;
  var clones = validChildren.map(function (child, index) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
      separator: separator,
      spacing: spacing,
      isLastChild: count === index + 1
    });
  });

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-breadcrumb", className);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.nav, _extends({
    ref: ref,
    "aria-label": "breadcrumb",
    className: _className,
    __css: styles.container
  }, rest), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.ol, {
    className: "chakra-breadcrumb__list"
  }, clones)));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Breadcrumb.displayName = "Breadcrumb";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Checkbox": () => (/* binding */ Checkbox),
/* harmony export */   "CheckboxGroup": () => (/* binding */ CheckboxGroup),
/* harmony export */   "useCheckbox": () => (/* binding */ useCheckbox),
/* harmony export */   "useCheckboxGroup": () => (/* binding */ useCheckboxGroup),
/* harmony export */   "useCheckboxGroupContext": () => (/* binding */ useCheckboxGroupContext)
/* harmony export */ });
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs");
/* harmony import */ var _chakra_ui_visually_hidden__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/visually-hidden */ "./node_modules/@chakra-ui/visually-hidden/dist/chakra-ui-visually-hidden.esm.js");









function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/**
 * React hook that provides all the state management logic
 * for a group of checkboxes.
 *
 * It is consumed by the `CheckboxGroup` component
 */
function useCheckboxGroup(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      defaultValue = _props.defaultValue,
      valueProp = _props.value,
      onChange = _props.onChange,
      isDisabled = _props.isDisabled,
      isNative = _props.isNative;
  var onChangeProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChange);

  var _useControllableState = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useControllableState)({
    value: valueProp,
    defaultValue: defaultValue || [],
    onChange: onChangeProp
  }),
      value = _useControllableState[0],
      setValue = _useControllableState[1];

  var handleChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (eventOrValue) {
    if (!value) return;
    var isChecked = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.isInputEvent)(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);
    var selectedValue = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.isInputEvent)(eventOrValue) ? eventOrValue.target.value : eventOrValue;
    var nextValue = isChecked ? (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.addItem)(value, selectedValue) : (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.removeItem)(value, selectedValue);
    setValue(nextValue);
  }, [setValue, value]);
  var getCheckboxProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props) {
    var _extends2;

    if (props === void 0) {
      props = {};
    }

    var checkedKey = isNative ? "checked" : "isChecked";
    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.includes(props.value), _extends2.onChange = handleChange, _extends2));
  }, [handleChange, isNative, value]);
  return {
    value: value,
    isDisabled: isDisabled,
    onChange: handleChange,
    setValue: setValue,
    getCheckboxProps: getCheckboxProps
  };
}

var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.createContext)({
  name: "CheckboxGroupContext",
  strict: false
}),
    CheckboxGroupProvider = _createContext[0],
    useCheckboxGroupContext = _createContext[1];
/**
 * Used for multiple checkboxes which are bound in one group,
 * and it indicates whether one or more options are selected.
 *
 * @see Docs https://chakra-ui.com/checkbox
 */

var CheckboxGroup = function CheckboxGroup(props) {
  var colorScheme = props.colorScheme,
      size = props.size,
      variant = props.variant,
      children = props.children,
      isDisabled = props.isDisabled;

  var _useCheckboxGroup = useCheckboxGroup(props),
      value = _useCheckboxGroup.value,
      onChange = _useCheckboxGroup.onChange;

  var group = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return {
      size: size,
      onChange: onChange,
      colorScheme: colorScheme,
      value: value,
      variant: variant,
      isDisabled: isDisabled
    };
  }, [size, onChange, colorScheme, value, variant, isDisabled]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(CheckboxGroupProvider, {
    value: group
  }, children);
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  CheckboxGroup.displayName = "CheckboxGroup";
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded$2 = ["isIndeterminate", "isChecked"];

var MotionSvg = "custom" in framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion ? framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.custom(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.chakra.svg) : (0,framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion)(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.chakra.svg);

var CheckIcon = function CheckIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MotionSvg, _extends({
    width: "1.2em",
    viewBox: "0 0 12 10",
    variants: {
      unchecked: {
        opacity: 0,
        strokeDashoffset: 16
      },
      checked: {
        opacity: 1,
        strokeDashoffset: 0,
        transition: {
          duration: 0.2
        }
      }
    },
    style: {
      fill: "none",
      strokeWidth: 2,
      stroke: "currentColor",
      strokeDasharray: 16
    }
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polyline", {
    points: "1.5 6 4.5 9 10.5 1"
  }));
};

var IndeterminateIcon = function IndeterminateIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MotionSvg, _extends({
    width: "1.2em",
    viewBox: "0 0 24 24",
    variants: {
      unchecked: {
        scaleX: 0.65,
        opacity: 0
      },
      checked: {
        scaleX: 1,
        opacity: 1,
        transition: {
          scaleX: {
            duration: 0
          },
          opacity: {
            duration: 0.02
          }
        }
      }
    },
    style: {
      stroke: "currentColor",
      strokeWidth: 4
    }
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("line", {
    x1: "21",
    x2: "3",
    y1: "12",
    y2: "12"
  }));
};

var CheckboxTransition = function CheckboxTransition(_ref) {
  var open = _ref.open,
      children = _ref.children;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_6__.AnimatePresence, {
    initial: false
  }, open && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, {
    variants: {
      unchecked: {
        scale: 0.5
      },
      checked: {
        scale: 1
      }
    },
    initial: "unchecked",
    animate: "checked",
    exit: "unchecked",
    style: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      height: "100%"
    }
  }, children));
};

/**
 * CheckboxIcon is used to visually indicate the checked or indeterminate
 * state of a checkbox.
 *
 * @todo allow users pass their own icon svgs
 */
var CheckboxIcon = function CheckboxIcon(props) {
  var isIndeterminate = props.isIndeterminate,
      isChecked = props.isChecked,
      rest = _objectWithoutPropertiesLoose(props, _excluded$2);

  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(CheckboxTransition, {
    open: isChecked || isIndeterminate
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconEl, rest));
};

var _excluded$1 = ["defaultIsChecked", "defaultChecked", "isChecked", "isFocusable", "isDisabled", "isReadOnly", "isRequired", "onChange", "isIndeterminate", "isInvalid", "name", "value", "id", "onBlur", "onFocus", "tabIndex", "aria-label", "aria-labelledby", "aria-invalid", "aria-describedby"];

/**
 * useCheckbox that provides all the state and focus management logic
 * for a checkbox. It is consumed by the `Checkbox` component
 *
 * @see Docs https://chakra-ui.com/checkbox#hooks
 */
function useCheckbox(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      defaultIsChecked = _props.defaultIsChecked,
      _props$defaultChecked = _props.defaultChecked,
      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,
      checkedProp = _props.isChecked,
      isFocusable = _props.isFocusable,
      isDisabled = _props.isDisabled,
      isReadOnly = _props.isReadOnly,
      isRequired = _props.isRequired,
      onChange = _props.onChange,
      isIndeterminate = _props.isIndeterminate,
      isInvalid = _props.isInvalid,
      name = _props.name,
      value = _props.value,
      id = _props.id,
      onBlur = _props.onBlur,
      onFocus = _props.onFocus,
      _props$tabIndex = _props.tabIndex,
      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,
      ariaLabel = _props["aria-label"],
      ariaLabelledBy = _props["aria-labelledby"],
      ariaInvalid = _props["aria-invalid"],
      ariaDescribedBy = _props["aria-describedby"],
      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);

  var onChangeProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChange);
  var onBlurProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onBlur);
  var onFocusProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onFocus);

  var _useBoolean = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useBoolean)(),
      isFocused = _useBoolean[0],
      setFocused = _useBoolean[1];

  var _useBoolean2 = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useBoolean)(),
      isHovered = _useBoolean2[0],
      setHovered = _useBoolean2[1];

  var _useBoolean3 = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useBoolean)(),
      isActive = _useBoolean3[0],
      setActive = _useBoolean3[1];

  var inputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true),
      rootIsLabelElement = _useState[0],
      setRootIsLabelElement = _useState[1];

  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!!defaultChecked),
      checkedState = _useState2[0],
      setCheckedState = _useState2[1];

  var _useControllableProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useControllableProp)(checkedProp, checkedState),
      isControlled = _useControllableProp[0],
      isChecked = _useControllableProp[1];

  (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.warn)({
    condition: !!defaultIsChecked,
    message: 'The "defaultIsChecked" prop has been deprecated and will be removed in a future version. ' + 'Please use the "defaultChecked" prop instead, which mirrors default React checkbox behavior.'
  });
  var handleChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    if (isReadOnly || isDisabled) {
      event.preventDefault();
      return;
    }

    if (!isControlled) {
      if (isChecked) {
        setCheckedState(event.target.checked);
      } else {
        setCheckedState(isIndeterminate ? true : event.target.checked);
      }
    }

    onChangeProp == null ? void 0 : onChangeProp(event);
  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useSafeLayoutEffect)(function () {
    if (inputRef.current) {
      inputRef.current.indeterminate = Boolean(isIndeterminate);
    }
  }, [isIndeterminate]);
  var trulyDisabled = isDisabled && !isFocusable;
  var onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    if (event.key === " ") {
      setActive.on();
    }
  }, [setActive]);
  var onKeyUp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    if (event.key === " ") {
      setActive.off();
    }
  }, [setActive]);
  /**
   * Sync state with uncontrolled form libraries like `react-hook-form`.
   *
   * These libraries set the checked value for input fields
   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.
   *
   * This means the `isChecked` state will get out of sync with `ref.current.checked`,
   * even though the input validation with work, the UI will not be up to date.
   *
   * Let's correct that by checking and syncing the state accordingly.
   */

  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useSafeLayoutEffect)(function () {
    if (!inputRef.current) return;
    var notInSync = inputRef.current.checked !== isChecked;

    if (notInSync) {
      setCheckedState(inputRef.current.checked);
    }
  }, [inputRef.current]);
  var getCheckboxProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, forwardedRef) {
    if (props === void 0) {
      props = {};
    }

    if (forwardedRef === void 0) {
      forwardedRef = null;
    }

    var onPressDown = function onPressDown(event) {
      // On mousedown, the input blurs and returns focus to the `body`,
      // we need to prevent this. Native checkboxes keeps focus on `input`
      event.preventDefault();
      setActive.on();
    };

    return _extends({}, props, {
      ref: forwardedRef,
      "data-active": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isActive),
      "data-hover": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isHovered),
      "data-checked": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isChecked),
      "data-focus": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isFocused),
      "data-indeterminate": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isIndeterminate),
      "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDisabled),
      "data-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isInvalid),
      "data-readonly": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isReadOnly),
      "aria-hidden": true,
      onMouseDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onMouseDown, onPressDown),
      onMouseUp: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onMouseUp, setActive.off),
      onMouseEnter: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onMouseEnter, setHovered.on),
      onMouseLeave: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onMouseLeave, setHovered.off)
    });
  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);
  var getRootProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, forwardedRef) {
    if (props === void 0) {
      props = {};
    }

    if (forwardedRef === void 0) {
      forwardedRef = null;
    }

    return _extends({}, htmlProps, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(forwardedRef, function (node) {
        if (!node) return;
        setRootIsLabelElement(node.tagName === "LABEL");
      }),
      onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onClick, function () {
        /**
         * Accessibility:
         *
         * Ideally, `getRootProps` should be spread unto a `label` element.
         *
         * If the element was changed using the `as` prop or changing
         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger
         * click on the input when the element is clicked.
         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480
         */
        if (!rootIsLabelElement) {
          var _inputRef$current;

          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();
          (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.focus)(inputRef.current, {
            nextTick: true
          });
        }
      }),
      "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDisabled),
      "data-checked": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isChecked),
      "data-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isInvalid)
    });
  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);
  var getInputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, forwardedRef) {
    if (props === void 0) {
      props = {};
    }

    if (forwardedRef === void 0) {
      forwardedRef = null;
    }

    return _extends({}, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(inputRef, forwardedRef),
      type: "checkbox",
      name: name,
      value: value,
      id: id,
      tabIndex: tabIndex,
      onChange: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onChange, handleChange),
      onBlur: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onBlur, onBlurProp, setFocused.off),
      onFocus: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onFocus, onFocusProp, setFocused.on),
      onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onKeyDown, onKeyDown),
      onKeyUp: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onKeyUp, onKeyUp),
      required: isRequired,
      checked: isChecked,
      disabled: trulyDisabled,
      readOnly: isReadOnly,
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabelledBy,
      "aria-invalid": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,
      "aria-describedby": ariaDescribedBy,
      "aria-disabled": isDisabled,
      style: _chakra_ui_visually_hidden__WEBPACK_IMPORTED_MODULE_7__.visuallyHiddenStyle
    });
  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);
  var getLabelProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, forwardedRef) {
    if (props === void 0) {
      props = {};
    }

    if (forwardedRef === void 0) {
      forwardedRef = null;
    }

    return _extends({}, props, {
      ref: forwardedRef,
      onMouseDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onMouseDown, stopEvent),
      onTouchStart: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onTouchStart, stopEvent),
      "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDisabled),
      "data-checked": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isChecked),
      "data-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isInvalid)
    });
  }, [isChecked, isDisabled, isInvalid]);
  return {
    state: {
      isInvalid: isInvalid,
      isFocused: isFocused,
      isChecked: isChecked,
      isActive: isActive,
      isHovered: isHovered,
      isIndeterminate: isIndeterminate,
      isDisabled: isDisabled,
      isReadOnly: isReadOnly,
      isRequired: isRequired
    },
    getRootProps: getRootProps,
    getCheckboxProps: getCheckboxProps,
    getInputProps: getInputProps,
    getLabelProps: getLabelProps,
    htmlProps: htmlProps
  };
}
/**
 * Prevent `onBlur` being fired when the checkbox label is touched
 */

function stopEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}

var _excluded = ["spacing", "className", "children", "iconColor", "iconSize", "icon", "isChecked", "isDisabled", "onChange"];
var CheckboxControl = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.chakra)("span", {
  baseStyle: {
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    verticalAlign: "top",
    userSelect: "none",
    flexShrink: 0
  }
});
var Label = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.chakra)("label", {
  baseStyle: {
    cursor: "pointer",
    display: "inline-flex",
    alignItems: "center",
    verticalAlign: "top",
    position: "relative",
    _disabled: {
      cursor: "not-allowed"
    }
  }
});

/**
 * Checkbox
 *
 * React component used in forms when a user needs to select
 * multiple values from several options.
 *
 * @see Docs https://chakra-ui.com/checkbox
 */
var Checkbox = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function (props, ref) {
  var group = useCheckboxGroupContext();

  var mergedProps = _extends({}, group, props);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.useMultiStyleConfig)("Checkbox", mergedProps);
  var ownProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.omitThemingProps)(props);

  var _ownProps$spacing = ownProps.spacing,
      spacing = _ownProps$spacing === void 0 ? "0.5rem" : _ownProps$spacing,
      className = ownProps.className,
      children = ownProps.children,
      iconColor = ownProps.iconColor,
      iconSize = ownProps.iconSize,
      _ownProps$icon = ownProps.icon,
      icon = _ownProps$icon === void 0 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(CheckboxIcon, null) : _ownProps$icon,
      isCheckedProp = ownProps.isChecked,
      _ownProps$isDisabled = ownProps.isDisabled,
      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,
      onChangeProp = ownProps.onChange,
      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);

  var isChecked = isCheckedProp;

  if (group != null && group.value && ownProps.value) {
    isChecked = group.value.includes(ownProps.value);
  }

  var onChange = onChangeProp;

  if (group != null && group.onChange && ownProps.value) {
    onChange = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAll)(group.onChange, onChangeProp);
  }

  var _useCheckbox = useCheckbox(_extends({}, rest, {
    isDisabled: isDisabled,
    isChecked: isChecked,
    onChange: onChange
  })),
      state = _useCheckbox.state,
      getInputProps = _useCheckbox.getInputProps,
      getCheckboxProps = _useCheckbox.getCheckboxProps,
      getLabelProps = _useCheckbox.getLabelProps,
      getRootProps = _useCheckbox.getRootProps;

  var iconStyles = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return _extends({
      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,
      transform: state.isChecked || state.isIndeterminate ? "scale(1)" : "scale(0.95)",
      fontSize: iconSize,
      color: iconColor
    }, styles.icon);
  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);
  var clonedIcon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(icon, {
    __css: iconStyles,
    isIndeterminate: state.isIndeterminate,
    isChecked: state.isChecked
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Label, _extends({
    __css: styles.container,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-checkbox", className)
  }, getRootProps()), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("input", _extends({
    className: "chakra-checkbox__input"
  }, getInputProps({}, ref))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(CheckboxControl, _extends({
    __css: styles.control,
    className: "chakra-checkbox__control"
  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.chakra.span, _extends({
    className: "chakra-checkbox__label"
  }, getLabelProps(), {
    __css: _extends({
      marginStart: spacing
    }, styles.label)
  }), children));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Checkbox.displayName = "Checkbox";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/clickable/dist/chakra-ui-clickable.esm.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@chakra-ui/clickable/dist/chakra-ui-clickable.esm.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useClickable": () => (/* binding */ useClickable)
/* harmony export */ });
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");




function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function useEventListeners() {
  var listeners = react__WEBPACK_IMPORTED_MODULE_0__.useRef(new Map());
  var currentListeners = listeners.current;
  var add = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (el, type, listener, options) {
    listeners.current.set(listener, {
      type: type,
      el: el,
      options: options
    });
    el.addEventListener(type, listener, options);
  }, []);
  var remove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (el, type, listener, options) {
    el.removeEventListener(type, listener, options);
    listeners.current["delete"](listener);
  }, []);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    return function () {
      currentListeners.forEach(function (value, key) {
        remove(value.el, value.type, key, value.options);
      });
    };
  }, [remove, currentListeners]);
  return {
    add: add,
    remove: remove
  };
}

var _excluded = ["ref", "isDisabled", "isFocusable", "clickOnEnter", "clickOnSpace", "onMouseDown", "onMouseUp", "onClick", "onKeyDown", "onKeyUp", "tabIndex", "onMouseOver", "onMouseLeave"];

function isValidElement(event) {
  var element = event.target;
  var tagName = element.tagName,
      isContentEditable = element.isContentEditable;
  return tagName !== "INPUT" && tagName !== "TEXTAREA" && isContentEditable !== true;
}
/**
 * useClickable implements all the interactions of a native `button`
 * component with support for making it focusable even if it is disabled.
 *
 * It can be used with both native button elements or other elements (like `div`).
 */


function useClickable(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      htmlRef = _props.ref,
      isDisabled = _props.isDisabled,
      isFocusable = _props.isFocusable,
      _props$clickOnEnter = _props.clickOnEnter,
      clickOnEnter = _props$clickOnEnter === void 0 ? true : _props$clickOnEnter,
      _props$clickOnSpace = _props.clickOnSpace,
      clickOnSpace = _props$clickOnSpace === void 0 ? true : _props$clickOnSpace,
      onMouseDown = _props.onMouseDown,
      onMouseUp = _props.onMouseUp,
      onClick = _props.onClick,
      onKeyDown = _props.onKeyDown,
      onKeyUp = _props.onKeyUp,
      tabIndexProp = _props.tabIndex,
      onMouseOver = _props.onMouseOver,
      onMouseLeave = _props.onMouseLeave,
      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded);
  /**
   * We'll use this to track if the element is a button element
   */


  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(true),
      isButton = _React$useState[0],
      setIsButton = _React$useState[1];
  /**
   * For custom button implementation, we'll use this to track when
   * we mouse down on the button, to enable use style its ":active" style
   */


  var _React$useState2 = react__WEBPACK_IMPORTED_MODULE_0__.useState(false),
      isPressed = _React$useState2[0],
      setIsPressed = _React$useState2[1];

  var listeners = useEventListeners();
  /**
   * The ref callback that fires as soon as the dom node is ready
   */

  var refCallback = function refCallback(node) {
    if (!node) return;

    if (node.tagName !== "BUTTON") {
      setIsButton(false);
    }
  };

  var tabIndex = isButton ? tabIndexProp : tabIndexProp || 0;
  var trulyDisabled = isDisabled && !isFocusable;
  var handleClick = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    if (isDisabled) {
      event.stopPropagation();
      event.preventDefault();
      return;
    }

    var self = event.currentTarget;
    self.focus();
    onClick == null ? void 0 : onClick(event);
  }, [isDisabled, onClick]);
  var onDocumentKeyUp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (e) {
    if (isPressed && isValidElement(e)) {
      e.preventDefault();
      e.stopPropagation();
      setIsPressed(false); // eslint-disable-next-line @typescript-eslint/no-unused-vars

      listeners.remove(document, "keyup", onDocumentKeyUp, false);
    }
  }, [isPressed, listeners]);
  var handleKeyDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    onKeyDown == null ? void 0 : onKeyDown(event);

    if (isDisabled || event.defaultPrevented || event.metaKey) {
      return;
    }

    if (!isValidElement(event.nativeEvent) || isButton) return;
    var shouldClickOnEnter = clickOnEnter && event.key === "Enter";
    var shouldClickOnSpace = clickOnSpace && event.key === " ";

    if (shouldClickOnSpace) {
      event.preventDefault();
      setIsPressed(true);
    }

    if (shouldClickOnEnter) {
      event.preventDefault();
      var self = event.currentTarget;
      self.click();
    }

    listeners.add(document, "keyup", onDocumentKeyUp, false);
  }, [isDisabled, isButton, onKeyDown, clickOnEnter, clickOnSpace, listeners, onDocumentKeyUp]);
  var handleKeyUp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    onKeyUp == null ? void 0 : onKeyUp(event);
    if (isDisabled || event.defaultPrevented || event.metaKey) return;
    if (!isValidElement(event.nativeEvent) || isButton) return;
    var shouldClickOnSpace = clickOnSpace && event.key === " ";

    if (shouldClickOnSpace) {
      event.preventDefault();
      setIsPressed(false);
      var self = event.currentTarget;
      self.click();
    }
  }, [clickOnSpace, isButton, isDisabled, onKeyUp]);
  var onDocumentMouseUp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    if (event.button !== 0) return;
    setIsPressed(false);
    listeners.remove(document, "mouseup", onDocumentMouseUp, false);
  }, [listeners]);
  var handleMouseDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    if ((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.isRightClick)(event)) return;

    if (isDisabled) {
      event.stopPropagation();
      event.preventDefault();
      return;
    }

    if (!isButton) {
      setIsPressed(true);
    }

    var target = event.currentTarget;
    target.focus({
      preventScroll: true
    });
    listeners.add(document, "mouseup", onDocumentMouseUp, false);
    onMouseDown == null ? void 0 : onMouseDown(event);
  }, [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp]);
  var handleMouseUp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    if ((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.isRightClick)(event)) return;

    if (!isButton) {
      setIsPressed(false);
    }

    onMouseUp == null ? void 0 : onMouseUp(event);
  }, [onMouseUp, isButton]);
  var handleMouseOver = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    if (isDisabled) {
      event.preventDefault();
      return;
    }

    onMouseOver == null ? void 0 : onMouseOver(event);
  }, [isDisabled, onMouseOver]);
  var handleMouseLeave = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    if (isPressed) {
      event.preventDefault();
      setIsPressed(false);
    }

    onMouseLeave == null ? void 0 : onMouseLeave(event);
  }, [isPressed, onMouseLeave]);
  var ref = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__.mergeRefs)(htmlRef, refCallback);

  if (isButton) {
    return _extends({}, htmlProps, {
      ref: ref,
      type: "button",
      "aria-disabled": trulyDisabled ? undefined : isDisabled,
      disabled: trulyDisabled,
      onClick: handleClick,
      onMouseDown: onMouseDown,
      onMouseUp: onMouseUp,
      onKeyUp: onKeyUp,
      onKeyDown: onKeyDown,
      onMouseOver: onMouseOver,
      onMouseLeave: onMouseLeave
    });
  }

  return _extends({}, htmlProps, {
    ref: ref,
    role: "button",
    "data-active": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isPressed),
    "aria-disabled": isDisabled ? "true" : undefined,
    tabIndex: trulyDisabled ? undefined : tabIndex,
    onClick: handleClick,
    onMouseDown: handleMouseDown,
    onMouseUp: handleMouseUp,
    onKeyUp: handleKeyUp,
    onKeyDown: handleKeyDown,
    onMouseOver: handleMouseOver,
    onMouseLeave: handleMouseLeave
  });
}




/***/ }),

/***/ "./node_modules/@chakra-ui/close-button/dist/chakra-ui-close-button.esm.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@chakra-ui/close-button/dist/chakra-ui-close-button.esm.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CloseButton": () => (/* binding */ CloseButton)
/* harmony export */ });
/* harmony import */ var _chakra_ui_icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/icon */ "./node_modules/@chakra-ui/icon/dist/chakra-ui-icon.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");





function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var _excluded = ["children", "isDisabled", "__css"];

var CloseIcon = function CloseIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_1__.Icon, _extends({
    focusable: "false",
    "aria-hidden": true
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
  }));
};

/**
 * A button with a close icon.
 *
 * It is used to handle the close functionality in feedback and overlay components
 * like Alerts, Toasts, Drawers and Modals.
 */
var CloseButton = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__.useStyleConfig)("CloseButton", props);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__.omitThemingProps)(props),
      children = _omitThemingProps.children,
      isDisabled = _omitThemingProps.isDisabled,
      __css = _omitThemingProps.__css,
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);

  var baseStyle = {
    outline: 0,
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    flexShrink: 0
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__.chakra.button, _extends({
    type: "button",
    "aria-label": "Close",
    ref: ref,
    disabled: isDisabled,
    __css: _extends({}, baseStyle, styles, __css)
  }, rest), children || /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(CloseIcon, {
    width: "1em",
    height: "1em"
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  CloseButton.displayName = "CloseButton";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/control-box/dist/chakra-ui-control-box.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@chakra-ui/control-box/dist/chakra-ui-control-box.esm.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ControlBox": () => (/* binding */ ControlBox)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");




function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["type", "_hover", "_invalid", "_disabled", "_focus", "_checked", "_child", "_checkedAndChild", "_checkedAndDisabled", "_checkedAndFocus", "_checkedAndHover", "children"];
var ControlBox = function ControlBox(props) {
  var _extends2, _ref;

  var _props$type = props.type,
      type = _props$type === void 0 ? "checkbox" : _props$type,
      _hover = props._hover,
      _invalid = props._invalid,
      _disabled = props._disabled,
      _focus = props._focus,
      _checked = props._checked,
      _props$_child = props._child,
      _child = _props$_child === void 0 ? {
    opacity: 0
  } : _props$_child,
      _props$_checkedAndChi = props._checkedAndChild,
      _checkedAndChild = _props$_checkedAndChi === void 0 ? {
    opacity: 1
  } : _props$_checkedAndChi,
      _checkedAndDisabled = props._checkedAndDisabled,
      _checkedAndFocus = props._checkedAndFocus,
      _checkedAndHover = props._checkedAndHover,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, _excluded);

  var checkedAndDisabled = "input[type=" + type + "]:checked:disabled + &";
  var checkedAndHover = "input[type=" + type + "]:checked:hover:not(:disabled) + &";
  var checkedAndFocus = "input[type=" + type + "]:checked:focus + &";
  var disabled = "input[type=" + type + "]:disabled + &";
  var focus = "input[type=" + type + "]:focus + &";
  var hover = "input[type=" + type + "]:hover:not(:disabled):not(:checked) + &";
  var checked = "input[type=" + type + "]:checked + &, input[type=" + type + "][aria-checked=mixed] + &";
  var invalid = "input[type=" + type + "][aria-invalid=true] + &";
  var child = "& > *";
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.div, _extends({}, rest, {
    "aria-hidden": true,
    __css: (_ref = {
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      transitionProperty: "common",
      transitionDuration: "fast",
      flexShrink: 0
    }, _ref[focus] = _focus, _ref[hover] = _hover, _ref[disabled] = _disabled, _ref[invalid] = _invalid, _ref[checkedAndDisabled] = _checkedAndDisabled, _ref[checkedAndFocus] = _checkedAndFocus, _ref[checkedAndHover] = _checkedAndHover, _ref[child] = _child, _ref[checked] = _extends({}, _checked, (_extends2 = {}, _extends2[child] = _checkedAndChild, _extends2)), _ref)
  }), children);
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  ControlBox.displayName = "ControlBox";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/counter/dist/chakra-ui-counter.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@chakra-ui/counter/dist/chakra-ui-counter.esm.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useCounter": () => (/* binding */ useCounter)
/* harmony export */ });
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");




function useCounter(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      onChange = _props.onChange,
      precisionProp = _props.precision,
      defaultValue = _props.defaultValue,
      valueProp = _props.value,
      _props$step = _props.step,
      stepProp = _props$step === void 0 ? 1 : _props$step,
      _props$min = _props.min,
      min = _props$min === void 0 ? _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.minSafeInteger : _props$min,
      _props$max = _props.max,
      max = _props$max === void 0 ? _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.maxSafeInteger : _props$max,
      _props$keepWithinRang = _props.keepWithinRange,
      keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang;
  var onChangeProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef)(onChange);

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function () {
    var _cast;

    if (defaultValue == null) return "";
    return (_cast = cast(defaultValue, stepProp, precisionProp)) != null ? _cast : "";
  }),
      valueState = _useState[0],
      setValue = _useState[1];
  /**
   * Because the component that consumes this hook can be controlled or uncontrolled
   * we'll keep track of that
   */


  var _useControllableProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useControllableProp)(valueProp, valueState),
      isControlled = _useControllableProp[0],
      value = _useControllableProp[1];

  var decimalPlaces = getDecimalPlaces(parse(value), stepProp);
  var precision = precisionProp != null ? precisionProp : decimalPlaces;
  var update = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (next) {
    if (next === value) return;

    if (!isControlled) {
      setValue(next.toString());
    }

    onChangeProp == null ? void 0 : onChangeProp(next.toString(), parse(next));
  }, [onChangeProp, isControlled, value]); // Function to clamp the value and round it to the precision

  var clamp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (value) {
    var nextValue = value;

    if (keepWithinRange) {
      nextValue = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.clampValue)(nextValue, min, max);
    }

    return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.toPrecision)(nextValue, precision);
  }, [precision, keepWithinRange, max, min]);
  var increment = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (step) {
    if (step === void 0) {
      step = stepProp;
    }

    var next;
    /**
     * Let's follow the native browser behavior for
     * scenarios where the input starts empty ("")
     */

    if (value === "") {
      /**
       * If `min` is set, native input, starts at the `min`.
       * Else, it starts at `step`
       */
      next = parse(step);
    } else {
      next = parse(value) + step;
    }

    next = clamp(next);
    update(next);
  }, [clamp, stepProp, update, value]);
  var decrement = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (step) {
    if (step === void 0) {
      step = stepProp;
    }

    var next; // Same thing here. We'll follow native implementation

    if (value === "") {
      next = parse(-step);
    } else {
      next = parse(value) - step;
    }

    next = clamp(next);
    update(next);
  }, [clamp, stepProp, update, value]);
  var reset = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    var next;

    if (defaultValue == null) {
      next = "";
    } else {
      var _cast2;

      next = (_cast2 = cast(defaultValue, stepProp, precisionProp)) != null ? _cast2 : min;
    }

    update(next);
  }, [defaultValue, precisionProp, stepProp, update, min]);
  var castValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (value) {
    var _cast3;

    var nextValue = (_cast3 = cast(value, stepProp, precision)) != null ? _cast3 : min;
    update(nextValue);
  }, [precision, stepProp, update, min]);
  var valueAsNumber = parse(value);
  /**
   * Common range checks
   */

  var isOutOfRange = valueAsNumber > max || valueAsNumber < min;
  var isAtMax = valueAsNumber === max;
  var isAtMin = valueAsNumber === min;
  return {
    isOutOfRange: isOutOfRange,
    isAtMax: isAtMax,
    isAtMin: isAtMin,
    precision: precision,
    value: value,
    valueAsNumber: valueAsNumber,
    update: update,
    reset: reset,
    increment: increment,
    decrement: decrement,
    clamp: clamp,
    cast: castValue,
    setValue: setValue
  };
}

function parse(value) {
  return parseFloat(value.toString().replace(/[^\w.-]+/g, ""));
}

function getDecimalPlaces(value, step) {
  return Math.max((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.countDecimalPlaces)(step), (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.countDecimalPlaces)(value));
}

function cast(value, step, precision) {
  var parsedValue = parse(value);
  if (Number.isNaN(parsedValue)) return undefined;
  var decimalPlaces = getDecimalPlaces(parsedValue, step);
  return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.toPrecision)(parsedValue, precision != null ? precision : decimalPlaces);
}




/***/ }),

/***/ "./node_modules/@chakra-ui/css-reset/dist/chakra-ui-css-reset.esm.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@chakra-ui/css-reset/dist/chakra-ui-css-reset.esm.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CSSReset": () => (/* binding */ CSSReset),
/* harmony export */   "default": () => (/* binding */ CSSReset$1)
/* harmony export */ });
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");



var CSSReset = function CSSReset() {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_emotion_react__WEBPACK_IMPORTED_MODULE_1__.Global, {
    styles: "\n      html {\n        line-height: 1.5;\n        -webkit-text-size-adjust: 100%;\n        font-family: system-ui, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        text-rendering: optimizeLegibility;\n        -moz-osx-font-smoothing: grayscale;\n        touch-action: manipulation;\n      }\n\n      body {\n        position: relative;\n        min-height: 100%;\n        font-feature-settings: 'kern';\n      }\n\n      *,\n      *::before,\n      *::after {\n        border-width: 0;\n        border-style: solid;\n        box-sizing: border-box;\n      }\n\n      main {\n        display: block;\n      }\n\n      hr {\n        border-top-width: 1px;\n        box-sizing: content-box;\n        height: 0;\n        overflow: visible;\n      }\n\n      pre,\n      code,\n      kbd,\n      samp {\n        font-family: SFMono-Regular,  Menlo, Monaco, Consolas, monospace;\n        font-size: 1em;\n      }\n\n      a {\n        background-color: transparent;\n        color: inherit;\n        text-decoration: inherit;\n      }\n\n      abbr[title] {\n        border-bottom: none;\n        text-decoration: underline;\n        -webkit-text-decoration: underline dotted;\n        text-decoration: underline dotted;\n      }\n\n      b,\n      strong {\n        font-weight: bold;\n      }\n\n      small {\n        font-size: 80%;\n      }\n\n      sub,\n      sup {\n        font-size: 75%;\n        line-height: 0;\n        position: relative;\n        vertical-align: baseline;\n      }\n\n      sub {\n        bottom: -0.25em;\n      }\n\n      sup {\n        top: -0.5em;\n      }\n\n      img {\n        border-style: none;\n      }\n\n      button,\n      input,\n      optgroup,\n      select,\n      textarea {\n        font-family: inherit;\n        font-size: 100%;\n        line-height: 1.15;\n        margin: 0;\n      }\n\n      button,\n      input {\n        overflow: visible;\n      }\n\n      button,\n      select {\n        text-transform: none;\n      }\n\n      button::-moz-focus-inner,\n      [type=\"button\"]::-moz-focus-inner,\n      [type=\"reset\"]::-moz-focus-inner,\n      [type=\"submit\"]::-moz-focus-inner {\n        border-style: none;\n        padding: 0;\n      }\n\n      fieldset {\n        padding: 0.35em 0.75em 0.625em;\n      }\n\n      legend {\n        box-sizing: border-box;\n        color: inherit;\n        display: table;\n        max-width: 100%;\n        padding: 0;\n        white-space: normal;\n      }\n\n      progress {\n        vertical-align: baseline;\n      }\n\n      textarea {\n        overflow: auto;\n      }\n\n      [type=\"checkbox\"],\n      [type=\"radio\"] {\n        box-sizing: border-box;\n        padding: 0;\n      }\n\n      [type=\"number\"]::-webkit-inner-spin-button,\n      [type=\"number\"]::-webkit-outer-spin-button {\n        -webkit-appearance: none !important;\n      }\n\n      input[type=\"number\"] {\n        -moz-appearance: textfield;\n      }\n\n      [type=\"search\"] {\n        -webkit-appearance: textfield;\n        outline-offset: -2px;\n      }\n\n      [type=\"search\"]::-webkit-search-decoration {\n        -webkit-appearance: none !important;\n      }\n\n      ::-webkit-file-upload-button {\n        -webkit-appearance: button;\n        font: inherit;\n      }\n\n      details {\n        display: block;\n      }\n\n      summary {\n        display: list-item;\n      }\n\n      template {\n        display: none;\n      }\n\n      [hidden] {\n        display: none !important;\n      }\n\n      body,\n      blockquote,\n      dl,\n      dd,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      hr,\n      figure,\n      p,\n      pre {\n        margin: 0;\n      }\n\n      button {\n        background: transparent;\n        padding: 0;\n      }\n\n      fieldset {\n        margin: 0;\n        padding: 0;\n      }\n\n      ol,\n      ul {\n        margin: 0;\n        padding: 0;\n      }\n\n      textarea {\n        resize: vertical;\n      }\n\n      button,\n      [role=\"button\"] {\n        cursor: pointer;\n      }\n\n      button::-moz-focus-inner {\n        border: 0 !important;\n      }\n\n      table {\n        border-collapse: collapse;\n      }\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        font-size: inherit;\n        font-weight: inherit;\n      }\n\n      button,\n      input,\n      optgroup,\n      select,\n      textarea {\n        padding: 0;\n        line-height: inherit;\n        color: inherit;\n      }\n\n      img,\n      svg,\n      video,\n      canvas,\n      audio,\n      iframe,\n      embed,\n      object {\n        display: block;\n      }\n\n      img,\n      video {\n        max-width: 100%;\n        height: auto;\n      }\n\n      [data-js-focus-visible] :focus:not([data-focus-visible-added]) {\n        outline: none;\n        box-shadow: none;\n      }\n\n      select::-ms-expand {\n        display: none;\n      }\n    "
  });
};
var CSSReset$1 = CSSReset;




/***/ }),

/***/ "./node_modules/@chakra-ui/descendant/dist/chakra-ui-descendant.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@chakra-ui/descendant/dist/chakra-ui-descendant.esm.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDescendantContext": () => (/* binding */ createDescendantContext),
/* harmony export */   "default": () => (/* binding */ createDescendantContext)
/* harmony export */ });
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");



function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/**
 * Sort an array of DOM nodes according to the HTML tree order
 * @see http://www.w3.org/TR/html5/infrastructure.html#tree-order
 */

function sortNodes(nodes) {
  return nodes.sort(function (a, b) {
    var compare = a.compareDocumentPosition(b);

    if (compare & Node.DOCUMENT_POSITION_FOLLOWING || compare & Node.DOCUMENT_POSITION_CONTAINED_BY) {
      // a < b
      return -1;
    }

    if (compare & Node.DOCUMENT_POSITION_PRECEDING || compare & Node.DOCUMENT_POSITION_CONTAINS) {
      // a > b
      return 1;
    }

    if (compare & Node.DOCUMENT_POSITION_DISCONNECTED || compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC) {
      throw Error("Cannot sort the given nodes.");
    } else {
      return 0;
    }
  });
}
var isElement = function isElement(el) {
  return typeof el == "object" && "nodeType" in el && el.nodeType === Node.ELEMENT_NODE;
};
function getNextIndex(current, max, loop) {
  var next = current + 1;
  if (loop && next >= max) next = 0;
  return next;
}
function getPrevIndex(current, max, loop) {
  var next = current - 1;
  if (loop && next < 0) next = max;
  return next;
}
var useSafeLayoutEffect = typeof window !== "undefined" ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;
var cast = function cast(value) {
  return value;
};

/**
 * @internal
 *
 * Class to manage descendants and their relative indices in the DOM.
 * It uses `node.compareDocumentPosition(...)` under the hood
 */
var DescendantsManager = function DescendantsManager() {
  var _this = this;

  this.descendants = new Map();

  this.register = function (nodeOrOptions) {
    if (nodeOrOptions == null) return;

    if (isElement(nodeOrOptions)) {
      return _this.registerNode(nodeOrOptions);
    }

    return function (node) {
      _this.registerNode(node, nodeOrOptions);
    };
  };

  this.unregister = function (node) {
    _this.descendants["delete"](node);

    var sorted = sortNodes(Array.from(_this.descendants.keys()));

    _this.assignIndex(sorted);
  };

  this.destroy = function () {
    _this.descendants.clear();
  };

  this.assignIndex = function (descendants) {
    _this.descendants.forEach(function (descendant) {
      var index = descendants.indexOf(descendant.node);
      descendant.index = index;
      descendant.node.dataset.index = descendant.index.toString();
    });
  };

  this.count = function () {
    return _this.descendants.size;
  };

  this.enabledCount = function () {
    return _this.enabledValues().length;
  };

  this.values = function () {
    var values = Array.from(_this.descendants.values());
    return values.sort(function (a, b) {
      return a.index - b.index;
    });
  };

  this.enabledValues = function () {
    return _this.values().filter(function (descendant) {
      return !descendant.disabled;
    });
  };

  this.item = function (index) {
    if (_this.count() === 0) return undefined;
    return _this.values()[index];
  };

  this.enabledItem = function (index) {
    if (_this.enabledCount() === 0) return undefined;
    return _this.enabledValues()[index];
  };

  this.first = function () {
    return _this.item(0);
  };

  this.firstEnabled = function () {
    return _this.enabledItem(0);
  };

  this.last = function () {
    return _this.item(_this.descendants.size - 1);
  };

  this.lastEnabled = function () {
    var lastIndex = _this.enabledValues().length - 1;
    return _this.enabledItem(lastIndex);
  };

  this.indexOf = function (node) {
    var _this$descendants$get, _this$descendants$get2;

    if (!node) return -1;
    return (_this$descendants$get = (_this$descendants$get2 = _this.descendants.get(node)) == null ? void 0 : _this$descendants$get2.index) != null ? _this$descendants$get : -1;
  };

  this.enabledIndexOf = function (node) {
    if (node == null) return -1;
    return _this.enabledValues().findIndex(function (i) {
      return i.node.isSameNode(node);
    });
  };

  this.next = function (index, loop) {
    if (loop === void 0) {
      loop = true;
    }

    var next = getNextIndex(index, _this.count(), loop);
    return _this.item(next);
  };

  this.nextEnabled = function (index, loop) {
    if (loop === void 0) {
      loop = true;
    }

    var item = _this.item(index);

    if (!item) return;

    var enabledIndex = _this.enabledIndexOf(item.node);

    var nextEnabledIndex = getNextIndex(enabledIndex, _this.enabledCount(), loop);
    return _this.enabledItem(nextEnabledIndex);
  };

  this.prev = function (index, loop) {
    if (loop === void 0) {
      loop = true;
    }

    var prev = getPrevIndex(index, _this.count() - 1, loop);
    return _this.item(prev);
  };

  this.prevEnabled = function (index, loop) {
    if (loop === void 0) {
      loop = true;
    }

    var item = _this.item(index);

    if (!item) return;

    var enabledIndex = _this.enabledIndexOf(item.node);

    var prevEnabledIndex = getPrevIndex(enabledIndex, _this.enabledCount() - 1, loop);
    return _this.enabledItem(prevEnabledIndex);
  };

  this.registerNode = function (node, options) {
    if (!node || _this.descendants.has(node)) return;
    var keys = Array.from(_this.descendants.keys()).concat(node);
    var sorted = sortNodes(keys);

    if (options != null && options.disabled) {
      options.disabled = !!options.disabled;
    }

    var descendant = _extends({
      node: node,
      index: -1
    }, options);

    _this.descendants.set(node, descendant);

    _this.assignIndex(sorted);
  };
};

/**
 * @internal
 * React hook that initializes the DescendantsManager
 */

function useDescendants() {
  var descendants = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new DescendantsManager());
  useSafeLayoutEffect(function () {
    return function () {
      return descendants.current.destroy();
    };
  });
  return descendants.current;
}

/* -------------------------------------------------------------------------------------------------
 * Descendants context to be used in component-land.
  - Mount the `DescendantsContextProvider` at the root of the component
  - Call `useDescendantsContext` anywhere you need access to the descendants information

  NB:  I recommend using `createDescendantContext` below
 * -----------------------------------------------------------------------------------------------*/
var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_1__.createContext)({
  name: "DescendantsProvider",
  errorMessage: "useDescendantsContext must be used within DescendantsProvider"
}),
    DescendantsContextProvider = _createContext[0],
    useDescendantsContext = _createContext[1];
/**
 * @internal
 * This hook provides information a descendant such as:
 * - Its index compared to other descendants
 * - ref callback to register the descendant
 * - Its enabled index compared to other enabled descendants
 */


function useDescendant(options) {
  var descendants = useDescendantsContext();

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1),
      index = _useState[0],
      setIndex = _useState[1];

  var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  useSafeLayoutEffect(function () {
    return function () {
      if (!ref.current) return;
      descendants.unregister(ref.current);
    };
  }, []);
  useSafeLayoutEffect(function () {
    if (!ref.current) return;
    var dataIndex = Number(ref.current.dataset.index);

    if (index != dataIndex && !Number.isNaN(dataIndex)) {
      setIndex(dataIndex);
    }
  });
  var refCallback = options ? cast(descendants.register(options)) : cast(descendants.register);
  return {
    descendants: descendants,
    index: index,
    enabledIndex: descendants.enabledIndexOf(ref.current),
    register: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_1__.mergeRefs)(refCallback, ref)
  };
}
/* -------------------------------------------------------------------------------------------------
 * Function that provides strongly typed versions of the context provider and hooks above.
   To be used in component-land
 * -----------------------------------------------------------------------------------------------*/


function createDescendantContext() {
  var ContextProvider = cast(DescendantsContextProvider);

  var _useDescendantsContext = function _useDescendantsContext() {
    return cast(useDescendantsContext());
  };

  var _useDescendant = function _useDescendant(options) {
    return useDescendant(options);
  };

  var _useDescendants = function _useDescendants() {
    return useDescendants();
  };

  return [// context provider
  ContextProvider, // call this when you need to read from context
  _useDescendantsContext, // descendants state information, to be called and passed to `ContextProvider`
  _useDescendants, // descendant index information
  _useDescendant];
}




/***/ }),

/***/ "./node_modules/@chakra-ui/editable/dist/chakra-ui-editable.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@chakra-ui/editable/dist/chakra-ui-editable.esm.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Editable": () => (/* binding */ Editable),
/* harmony export */   "EditableInput": () => (/* binding */ EditableInput),
/* harmony export */   "EditablePreview": () => (/* binding */ EditablePreview),
/* harmony export */   "useEditable": () => (/* binding */ useEditable),
/* harmony export */   "useEditableControls": () => (/* binding */ useEditableControls),
/* harmony export */   "useEditableState": () => (/* binding */ useEditableState)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");







function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded$1 = ["onChange", "onCancel", "onSubmit", "value", "isDisabled", "defaultValue", "startWithEditView", "isPreviewFocusable", "submitOnBlur", "selectAllOnFocus", "placeholder", "onEdit"];

/**
 * React hook for managing the inline renaming of some text.
 *
 * @see Docs https://chakra-ui.com/editable
 */
function useEditable(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      onChangeProp = _props.onChange,
      onCancelProp = _props.onCancel,
      onSubmitProp = _props.onSubmit,
      valueProp = _props.value,
      isDisabled = _props.isDisabled,
      defaultValue = _props.defaultValue,
      startWithEditView = _props.startWithEditView,
      _props$isPreviewFocus = _props.isPreviewFocusable,
      isPreviewFocusable = _props$isPreviewFocus === void 0 ? true : _props$isPreviewFocus,
      _props$submitOnBlur = _props.submitOnBlur,
      submitOnBlur = _props$submitOnBlur === void 0 ? true : _props$submitOnBlur,
      _props$selectAllOnFoc = _props.selectAllOnFocus,
      selectAllOnFocus = _props$selectAllOnFoc === void 0 ? true : _props$selectAllOnFoc,
      placeholder = _props.placeholder,
      onEditProp = _props.onEdit,
      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);

  var defaultIsEditing = Boolean(startWithEditView && !isDisabled);

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultIsEditing),
      isEditing = _useState[0],
      setIsEditing = _useState[1];

  var _useControllableState = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useControllableState)({
    defaultValue: defaultValue || "",
    value: valueProp,
    onChange: onChangeProp
  }),
      value = _useControllableState[0],
      setValue = _useControllableState[1];
  /**
   * Keep track of the previous value, so if users
   * presses `cancel`, we can revert to it.
   */


  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value),
      prevValue = _useState2[0],
      setPrevValue = _useState2[1];
  /**
   * Ref to help focus the input in edit mode
   */


  var inputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var previewRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var editButtonRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var cancelButtonRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var submitButtonRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useFocusOnPointerDown)({
    ref: inputRef,
    enabled: isEditing,
    elements: [cancelButtonRef, submitButtonRef]
  });
  var isInteractive = !isEditing || !isDisabled;
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useUpdateEffect)(function () {
    if (!isEditing) {
      (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.focus)(editButtonRef.current);
      return;
    }

    (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.focus)(inputRef.current, {
      selectTextIfInput: selectAllOnFocus
    });
    onEditProp == null ? void 0 : onEditProp();
  }, [isEditing, onEditProp, selectAllOnFocus]);
  var onEdit = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    if (isInteractive) {
      setIsEditing(true);
    }
  }, [isInteractive]);
  var onCancel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    setIsEditing(false);
    setValue(prevValue);
    onCancelProp == null ? void 0 : onCancelProp(prevValue);
  }, [onCancelProp, setValue, prevValue]);
  var onSubmit = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    setIsEditing(false);
    setPrevValue(value);
    onSubmitProp == null ? void 0 : onSubmitProp(value);
  }, [value, onSubmitProp]);
  var onChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    setValue(event.target.value);
  }, [setValue]);
  var onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    var eventKey = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeEventKey)(event);
    var keyMap = {
      Escape: onCancel,
      Enter: function Enter(event) {
        if (!event.shiftKey && !event.metaKey) {
          onSubmit();
        }
      }
    };
    var action = keyMap[eventKey];

    if (action) {
      event.preventDefault();
      action(event);
    }
  }, [onCancel, onSubmit]);
  var isValueEmpty = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(value);
  var onBlur = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    var relatedTarget = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.getRelatedTarget)(event);
    var targetIsCancel = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.contains)(cancelButtonRef.current, relatedTarget);
    var targetIsSubmit = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.contains)(submitButtonRef.current, relatedTarget);
    var isValidBlur = !targetIsCancel && !targetIsSubmit;

    if (isValidBlur && submitOnBlur) {
      onSubmit();
    }
  }, [submitOnBlur, onSubmit]);
  var getPreviewProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    var tabIndex = isInteractive && isPreviewFocusable ? 0 : undefined;
    return _extends({}, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(ref, previewRef),
      children: isValueEmpty ? placeholder : value,
      hidden: isEditing,
      "aria-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(isDisabled),
      tabIndex: tabIndex,
      onFocus: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onFocus, onEdit)
    });
  }, [isDisabled, isEditing, isInteractive, isPreviewFocusable, isValueEmpty, onEdit, placeholder, value]);
  var getInputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      hidden: !isEditing,
      placeholder: placeholder,
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(ref, inputRef),
      disabled: isDisabled,
      "aria-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(isDisabled),
      value: value,
      onBlur: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onBlur, onBlur),
      onChange: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onChange, onChange),
      onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onKeyDown, onKeyDown)
    });
  }, [isDisabled, isEditing, onBlur, onChange, onKeyDown, placeholder, value]);
  var getEditButtonProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({
      "aria-label": "Edit"
    }, props, {
      type: "button",
      onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onClick, onEdit),
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(ref, editButtonRef)
    });
  }, [onEdit]);
  var getSubmitButtonProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      "aria-label": "Submit",
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(submitButtonRef, ref),
      type: "button",
      onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onClick, onSubmit)
    });
  }, [onSubmit]);
  var getCancelButtonProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({
      "aria-label": "Cancel",
      id: "cancel"
    }, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(cancelButtonRef, ref),
      type: "button",
      onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onClick, onCancel)
    });
  }, [onCancel]);
  return {
    isEditing: isEditing,
    isDisabled: isDisabled,
    isValueEmpty: isValueEmpty,
    value: value,
    onEdit: onEdit,
    onCancel: onCancel,
    onSubmit: onSubmit,
    getPreviewProps: getPreviewProps,
    getInputProps: getInputProps,
    getEditButtonProps: getEditButtonProps,
    getSubmitButtonProps: getSubmitButtonProps,
    getCancelButtonProps: getCancelButtonProps,
    htmlProps: htmlProps
  };
}

var _excluded = ["htmlProps"];

var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.createContext)({
  name: "EditableContext",
  errorMessage: "useEditableContext: context is undefined. Seems you forgot to wrap the editable components in `<Editable />`"
}),
    EditableProvider = _createContext[0],
    useEditableContext = _createContext[1];

/**
 * Editable
 *
 * The wrapper that provides context and logic for all editable
 * components. It renders a `div`
 */
var Editable = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useMultiStyleConfig)("Editable", props);
  var ownProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.omitThemingProps)(props);

  var _useEditable = useEditable(ownProps),
      htmlProps = _useEditable.htmlProps,
      context = _objectWithoutPropertiesLoose(_useEditable, _excluded);

  var isEditing = context.isEditing,
      onSubmit = context.onSubmit,
      onCancel = context.onCancel,
      onEdit = context.onEdit;

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-editable", props.className);

  var children = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.runIfFn)(props.children, {
    isEditing: isEditing,
    onSubmit: onSubmit,
    onCancel: onCancel,
    onEdit: onEdit
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(EditableProvider, {
    value: context
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({
    ref: ref
  }, htmlProps, {
    className: _className
  }), children)));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Editable.displayName = "Editable";
}

var commonStyles = {
  fontSize: "inherit",
  fontWeight: "inherit",
  textAlign: "inherit",
  bg: "transparent"
};

/**
 * EditablePreview
 *
 * The `span` used to display the final value, in the `preview` mode
 */
var EditablePreview = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _useEditableContext = useEditableContext(),
      getPreviewProps = _useEditableContext.getPreviewProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  var previewProps = getPreviewProps(props, ref);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-editable__preview", props.className);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.span, _extends({}, previewProps, {
    __css: _extends({
      cursor: "text",
      display: "inline-block"
    }, commonStyles, styles.preview),
    className: _className
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  EditablePreview.displayName = "EditablePreview";
}

/**
 * EditableInput
 *
 * The input used in the `edit` mode
 */
var EditableInput = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _useEditableContext2 = useEditableContext(),
      getInputProps = _useEditableContext2.getInputProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  var inputProps = getInputProps(props, ref);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-editable__input", props.className);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.input, _extends({}, inputProps, {
    __css: _extends({
      outline: 0
    }, commonStyles, styles.input),
    className: _className
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  EditableInput.displayName = "EditableInput";
}
/**
 * React hook use to gain access to the editable state and actions.
 */


function useEditableState() {
  var _useEditableContext3 = useEditableContext(),
      isEditing = _useEditableContext3.isEditing,
      onSubmit = _useEditableContext3.onSubmit,
      onCancel = _useEditableContext3.onCancel,
      onEdit = _useEditableContext3.onEdit,
      isDisabled = _useEditableContext3.isDisabled;

  return {
    isEditing: isEditing,
    onSubmit: onSubmit,
    onCancel: onCancel,
    onEdit: onEdit,
    isDisabled: isDisabled
  };
}
/**
 * React hook use to create controls for the editable component
 */

function useEditableControls() {
  var _useEditableContext4 = useEditableContext(),
      isEditing = _useEditableContext4.isEditing,
      getEditButtonProps = _useEditableContext4.getEditButtonProps,
      getCancelButtonProps = _useEditableContext4.getCancelButtonProps,
      getSubmitButtonProps = _useEditableContext4.getSubmitButtonProps;

  return {
    isEditing: isEditing,
    getEditButtonProps: getEditButtonProps,
    getCancelButtonProps: getCancelButtonProps,
    getSubmitButtonProps: getSubmitButtonProps
  };
}




/***/ }),

/***/ "./node_modules/@chakra-ui/focus-lock/dist/chakra-ui-focus-lock.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@chakra-ui/focus-lock/dist/chakra-ui-focus-lock.esm.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FocusLock": () => (/* binding */ FocusLock),
/* harmony export */   "default": () => (/* binding */ FocusLock)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_focus_lock__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-focus-lock */ "./node_modules/react-focus-lock/dist/es2015/index.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");




var FocusLock = function FocusLock(props) {
  var initialFocusRef = props.initialFocusRef,
      finalFocusRef = props.finalFocusRef,
      contentRef = props.contentRef,
      restoreFocus = props.restoreFocus,
      children = props.children,
      isDisabled = props.isDisabled,
      autoFocus = props.autoFocus,
      persistentFocus = props.persistentFocus,
      lockFocusAcrossFrames = props.lockFocusAcrossFrames;
  var onActivation = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    if (initialFocusRef != null && initialFocusRef.current) {
      initialFocusRef.current.focus();
    } else if (contentRef != null && contentRef.current) {
      var focusables = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.getAllFocusable)(contentRef.current);

      if (focusables.length === 0) {
        (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.focus)(contentRef.current, {
          nextTick: true
        });
      }
    }
  }, [initialFocusRef, contentRef]);
  var onDeactivation = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    var _finalFocusRef$curren;

    finalFocusRef == null ? void 0 : (_finalFocusRef$curren = finalFocusRef.current) == null ? void 0 : _finalFocusRef$curren.focus();
  }, [finalFocusRef]);
  var returnFocus = restoreFocus && !finalFocusRef;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_focus_lock__WEBPACK_IMPORTED_MODULE_2__["default"], {
    crossFrame: lockFocusAcrossFrames,
    persistentFocus: persistentFocus,
    autoFocus: autoFocus,
    disabled: isDisabled,
    onActivation: onActivation,
    onDeactivation: onDeactivation,
    returnFocus: returnFocus
  }, children);
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.__DEV__) {
  FocusLock.displayName = "FocusLock";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Hide": () => (/* binding */ Hide),
/* harmony export */   "Show": () => (/* binding */ Show),
/* harmony export */   "useBreakpoint": () => (/* binding */ useBreakpoint),
/* harmony export */   "useBreakpointValue": () => (/* binding */ useBreakpointValue),
/* harmony export */   "useColorModePreference": () => (/* binding */ useColorModePreference),
/* harmony export */   "useMediaQuery": () => (/* binding */ useMediaQuery),
/* harmony export */   "usePrefersReducedMotion": () => (/* binding */ usePrefersReducedMotion),
/* harmony export */   "useQuery": () => (/* binding */ useQuery)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_react_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react-env */ "./node_modules/@chakra-ui/react-env/dist/chakra-ui-react-env.esm.js");






var useSafeLayoutEffect = _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.isBrowser ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;
/**
 * React hook that tracks state of a CSS media query
 *
 * @param query the media query to match
 */

function useMediaQuery(query) {
  var env = (0,_chakra_ui_react_env__WEBPACK_IMPORTED_MODULE_2__.useEnvironment)();
  var queries = Array.isArray(query) ? query : [query];
  var isSupported = _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.isBrowser && "matchMedia" in env.window;

  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(queries.map(function (query) {
    return isSupported ? !!env.window.matchMedia(query).matches : false;
  })),
      matches = _React$useState[0],
      setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners
  // to unload and then load each time the dependency changes. This causes
  // Media Query Events to be missed. The event listeners should only be unloaded
  // when the component unloads.


  useSafeLayoutEffect(function () {
    if (!isSupported) return undefined;
    var mediaQueryList = queries.map(function (query) {
      return env.window.matchMedia(query);
    });
    var listenerList = mediaQueryList.map(function (_, index) {
      var listener = function listener(mqlEvent) {
        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {
          return mediaQuery.media === mqlEvent.media;
        }); // As the event listener is on the media query list, any time the
        // listener is called, we know there is a change. There's no need
        // to compare the previous matches with current. Using
        // setMatches(matches => {...}) provides access to the current matches
        // state.  Trying to access matches outside the setMatches function
        // would provide data from the the time of instantiation (stale).

        setMatches(function (matches) {
          var currentMatches = matches.map(function (x) {
            return x;
          });
          currentMatches[queryIndex] = mqlEvent.matches;
          return currentMatches;
        });
      }; // Listening to the 'change' event on the Media Query List Object
      // is more performant as the callback is only invoked when a specified
      // media query is matched. Using addEventListener on the window object
      // to listen for the resize event will call the callback on every
      // viewport resize.


      mediaQueryList[index].addEventListener("change", listener);
      return listener;
    });
    return function () {
      mediaQueryList.forEach(function (_, index) {
        mediaQueryList[index].removeEventListener("change", listenerList[index]);
      });
    };
  }, []);
  return matches;
}

/**
 * Visibility
 *
 * React component to control the visibility of its
 * children based on the current breakpoint
 */
var Visibility = function Visibility(props) {
  var breakpoint = props.breakpoint,
      hide = props.hide,
      children = props.children;

  var _useMediaQuery = useMediaQuery(breakpoint),
      show = _useMediaQuery[0];

  var isVisible = hide ? !show : show;
  var rendered = isVisible ? children : null;
  return rendered;
};

var Hide = function Hide(props) {
  var children = props.children;
  var query = useQuery(props);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Visibility, {
    breakpoint: query,
    hide: true
  }, children);
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.__DEV__) {
  Hide.displayName = "Hide";
}

var Show = function Show(props) {
  var children = props.children;
  var query = useQuery(props);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Visibility, {
    breakpoint: query
  }, children);
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.__DEV__) {
  Show.displayName = "Show";
}

var getBreakpoint = function getBreakpoint(theme, value) {
  return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.memoizedGet)(theme, "breakpoints." + value, value);
};

function useQuery(props) {
  var _props$breakpoint = props.breakpoint,
      breakpoint = _props$breakpoint === void 0 ? "" : _props$breakpoint,
      below = props.below,
      above = props.above;
  var theme = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  var bpBelow = getBreakpoint(theme, below);
  var bpAbove = getBreakpoint(theme, above);
  var query = breakpoint;

  if (bpBelow) {
    query = "(max-width: " + bpBelow + ")";
  } else if (bpAbove) {
    query = "(min-width: " + bpAbove + ")";
  }

  return query;
}

/**
 * React hook used to get the user's animation preference.
 */

function usePrefersReducedMotion() {
  var _useMediaQuery = useMediaQuery("(prefers-reduced-motion: reduce)"),
      prefersReducedMotion = _useMediaQuery[0];

  return prefersReducedMotion;
}
/**
 * React hook for getting the user's color mode preference.
 */

function useColorModePreference() {
  var _useMediaQuery2 = useMediaQuery(["(prefers-color-scheme: light)", "(prefers-color-scheme: dark)"]),
      isLight = _useMediaQuery2[0],
      isDark = _useMediaQuery2[1];

  if (isLight) return "light";
  if (isDark) return "dark";
  return undefined;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function createMediaQueries(breakpoints) {
  return Object.entries(breakpoints) // sort css units in ascending order to ensure media queries are generated
  // in the correct order and reference to each other correctly aswell
  .sort(function (a, b) {
    return Number.parseInt(a[1], 10) > Number.parseInt(b[1], 10) ? 1 : -1;
  }).map(function (_ref, index, arr) {
    var breakpoint = _ref[0],
        minWidth = _ref[1];
    // given a following breakpoint
    var next = arr[index + 1]; // this breakpoint must end prior the threshold of the next

    var maxWidth = next ? next[1] : undefined;
    var query = createMediaQueryString(minWidth, maxWidth);
    return {
      minWidth: minWidth,
      maxWidth: maxWidth,
      breakpoint: breakpoint,
      query: query
    };
  });
}
/**
 * Create a media query string from the breakpoints,
 * using a combination of `min-width` and `max-width`.
 */

function createMediaQueryString(minWidth, maxWidth) {
  var hasMinWidth = parseInt(minWidth, 10) >= 0;

  if (!hasMinWidth && !maxWidth) {
    return "";
  }

  var query = "(min-width: " + toMediaString(minWidth) + ")";

  if (!maxWidth) {
    return query;
  }

  if (query) {
    query += " and ";
  }

  query += "(max-width: " + toMediaString(subtract(maxWidth)) + ")";
  return query;
}

var measurementRegex = /([0-9]+\.?[0-9]*)/;

var calculateMeasurement = function calculateMeasurement(value, modifier) {
  if (typeof value === "number") {
    return "" + (value + modifier);
  }

  return value.replace(measurementRegex, function (match) {
    return "" + (parseFloat(match) + modifier);
  });
};
/**
 * 0.01 and 0.1 are too small of a difference for `px` breakpoint values
 *
 * @see https://github.com/chakra-ui/chakra-ui/issues/2188#issuecomment-712774785
 */


function subtract(value) {
  return calculateMeasurement(value, value.endsWith("px") ? -1 : -0.01);
}
/**
 * Convert media query value to string
 */


function toMediaString(value) {
  return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(value) ? value + "px" : value;
}

var _excluded = ["query"],
    _excluded2 = ["query"];

/**
 * React hook used to get the current responsive media breakpoint.
 *
 * @param defaultBreakpoint default breakpoint name
 * (in non-window environments like SSR)
 *
 * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)
 * to get the default breakpoint value from the user-agent
 */
function useBreakpoint(defaultBreakpoint) {
  var _useTheme = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useTheme)(),
      breakpoints = _useTheme.breakpoints;

  var env = (0,_chakra_ui_react_env__WEBPACK_IMPORTED_MODULE_2__.useEnvironment)();
  var mediaQueries = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return createMediaQueries(_extends({
      base: "0px"
    }, breakpoints));
  }, [breakpoints]);

  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(function () {
    if (!defaultBreakpoint) {
      return undefined;
    }

    var mediaQuery = mediaQueries.find(function (_ref) {
      var breakpoint = _ref.breakpoint;
      return breakpoint === defaultBreakpoint;
    });

    if (mediaQuery) {
      mediaQuery.query;
          var breakpoint = _objectWithoutPropertiesLoose(mediaQuery, _excluded);

      return breakpoint;
    }

    return undefined;
  }),
      currentBreakpoint = _React$useState[0],
      setCurrentBreakpoint = _React$useState[1];

  var current = currentBreakpoint == null ? void 0 : currentBreakpoint.breakpoint;
  var update = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (query, breakpoint) {
    if (query.matches && current !== breakpoint.breakpoint) {
      setCurrentBreakpoint(breakpoint);
    }
  }, [current]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    var listeners = new Set();
    mediaQueries.forEach(function (_ref2) {
      var query = _ref2.query,
          breakpoint = _objectWithoutPropertiesLoose(_ref2, _excluded2);

      var mediaQuery = env.window.matchMedia(query); // trigger an initial update to determine media query

      update(mediaQuery, breakpoint);

      var handleChange = function handleChange() {
        update(mediaQuery, breakpoint);
      }; // add media query-listener


      mediaQuery.addListener(handleChange); // push the media query list handleChange
      // so we can use it to remove Listener

      listeners.add({
        mediaQuery: mediaQuery,
        handleChange: handleChange
      });
      return function () {
        // clean up 1
        mediaQuery.removeListener(handleChange);
      };
    });
    return function () {
      // clean up 2: for safety
      listeners.forEach(function (_ref3) {
        var mediaQuery = _ref3.mediaQuery,
            handleChange = _ref3.handleChange;
        mediaQuery.removeListener(handleChange);
      });
      listeners.clear();
    };
  }, [mediaQueries, breakpoints, update, env.window]);
  return current;
}

function getClosestValue(values, breakpoint, breakpoints$1) {
  if (breakpoints$1 === void 0) {
    breakpoints$1 = _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.breakpoints;
  }

  var index = Object.keys(values).indexOf(breakpoint);

  if (index !== -1) {
    return values[breakpoint];
  }

  var stopIndex = breakpoints$1.indexOf(breakpoint);

  while (stopIndex >= 0) {
    var key = breakpoints$1[stopIndex];

    if (values[key] != null) {
      index = stopIndex;
      break;
    }

    stopIndex -= 1;
  }

  if (index !== -1) {
    var _key = breakpoints$1[index];
    return values[_key];
  }

  return undefined;
}

/**
 * React hook for getting the value for the current breakpoint from the
 * provided responsive values object.
 *
 * @param values
 * @param defaultBreakpoint default breakpoint name
 * (in non-window environments like SSR)
 *
 * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)
 * to get the default breakpoint value from the user-agent
 *
 * @example
 * const width = useBreakpointValue({ base: '150px', md: '250px' })
 */

function useBreakpointValue(values, defaultBreakpoint) {
  var breakpoint = useBreakpoint(defaultBreakpoint);
  var theme = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  if (!breakpoint) return undefined;
  /**
   * Get the non-number breakpoint keys from the provided breakpoints
   */

  var breakpoints = Object.keys(theme.breakpoints);
  var obj = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.isArray)(values) ? (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.fromEntries)(Object.entries((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.arrayToObjectNotation)(values, breakpoints)).map(function (_ref) {
    var key = _ref[0],
        value = _ref[1];
    return [key, value];
  })) : values;
  return getClosestValue(obj, breakpoint, breakpoints);
}




/***/ }),

/***/ "./node_modules/@chakra-ui/menu/dist/chakra-ui-menu.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@chakra-ui/menu/dist/chakra-ui-menu.esm.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Menu": () => (/* binding */ Menu),
/* harmony export */   "MenuButton": () => (/* binding */ MenuButton),
/* harmony export */   "MenuCommand": () => (/* binding */ MenuCommand),
/* harmony export */   "MenuDescendantsProvider": () => (/* binding */ MenuDescendantsProvider),
/* harmony export */   "MenuDivider": () => (/* binding */ MenuDivider),
/* harmony export */   "MenuGroup": () => (/* binding */ MenuGroup),
/* harmony export */   "MenuIcon": () => (/* binding */ MenuIcon),
/* harmony export */   "MenuItem": () => (/* binding */ MenuItem),
/* harmony export */   "MenuItemOption": () => (/* binding */ MenuItemOption),
/* harmony export */   "MenuList": () => (/* binding */ MenuList),
/* harmony export */   "MenuOptionGroup": () => (/* binding */ MenuOptionGroup),
/* harmony export */   "MenuProvider": () => (/* binding */ MenuProvider),
/* harmony export */   "useMenu": () => (/* binding */ useMenu),
/* harmony export */   "useMenuButton": () => (/* binding */ useMenuButton),
/* harmony export */   "useMenuContext": () => (/* binding */ useMenuContext),
/* harmony export */   "useMenuDescendant": () => (/* binding */ useMenuDescendant),
/* harmony export */   "useMenuDescendants": () => (/* binding */ useMenuDescendants),
/* harmony export */   "useMenuDescendantsContext": () => (/* binding */ useMenuDescendantsContext),
/* harmony export */   "useMenuItem": () => (/* binding */ useMenuItem),
/* harmony export */   "useMenuList": () => (/* binding */ useMenuList),
/* harmony export */   "useMenuOption": () => (/* binding */ useMenuOption),
/* harmony export */   "useMenuOptionGroup": () => (/* binding */ useMenuOptionGroup),
/* harmony export */   "useMenuPositioner": () => (/* binding */ useMenuPositioner),
/* harmony export */   "useMenuState": () => (/* binding */ useMenuState)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_clickable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/clickable */ "./node_modules/@chakra-ui/clickable/dist/chakra-ui-clickable.esm.js");
/* harmony import */ var _chakra_ui_descendant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/descendant */ "./node_modules/@chakra-ui/descendant/dist/chakra-ui-descendant.esm.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");
/* harmony import */ var _chakra_ui_popper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/popper */ "./node_modules/@chakra-ui/popper/dist/chakra-ui-popper.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");










function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded$1 = ["id", "closeOnSelect", "closeOnBlur", "autoSelect", "isLazy", "isOpen", "defaultIsOpen", "onClose", "onOpen", "placement", "lazyBehavior", "direction", "computePositionOnMount"],
    _excluded2$1 = ["onMouseEnter", "onMouseMove", "onMouseLeave", "onClick", "isDisabled", "isFocusable", "closeOnSelect"],
    _excluded3$1 = ["type", "isChecked"],
    _excluded4$1 = ["children", "type", "value", "defaultValue", "onChange"];
/* -------------------------------------------------------------------------------------------------
 * Create context to track descendants and their indices
 * -----------------------------------------------------------------------------------------------*/

var _createDescendantCont = (0,_chakra_ui_descendant__WEBPACK_IMPORTED_MODULE_1__.createDescendantContext)(),
    MenuDescendantsProvider = _createDescendantCont[0],
    useMenuDescendantsContext = _createDescendantCont[1],
    useMenuDescendants = _createDescendantCont[2],
    useMenuDescendant = _createDescendantCont[3];

var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__.createContext)({
  strict: false,
  name: "MenuContext"
}),
    MenuProvider = _createContext[0],
    useMenuContext = _createContext[1];

/**
 * React Hook to manage a menu
 *
 * It provides the logic and will be used with react context
 * to propagate its return value to all children
 */
function useMenu(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      id = _props.id,
      _props$closeOnSelect = _props.closeOnSelect,
      closeOnSelect = _props$closeOnSelect === void 0 ? true : _props$closeOnSelect,
      _props$closeOnBlur = _props.closeOnBlur,
      closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur,
      _props$autoSelect = _props.autoSelect,
      autoSelect = _props$autoSelect === void 0 ? true : _props$autoSelect,
      isLazy = _props.isLazy,
      isOpenProp = _props.isOpen,
      defaultIsOpen = _props.defaultIsOpen,
      onCloseProp = _props.onClose,
      onOpenProp = _props.onOpen,
      _props$placement = _props.placement,
      placement = _props$placement === void 0 ? "bottom-start" : _props$placement,
      _props$lazyBehavior = _props.lazyBehavior,
      lazyBehavior = _props$lazyBehavior === void 0 ? "unmount" : _props$lazyBehavior,
      direction = _props.direction,
      _props$computePositio = _props.computePositionOnMount,
      computePositionOnMount = _props$computePositio === void 0 ? false : _props$computePositio,
      popperProps = _objectWithoutPropertiesLoose(_props, _excluded$1);
  /**
   * Prepare the reference to the menu and disclosure
   */


  var menuRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  var buttonRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  /**
   * Context to register all menu item nodes
   */

  var descendants = useMenuDescendants();
  var focusMenu = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.focus)(menuRef.current, {
      nextTick: true,
      selectTextIfInput: false
    });
  }, []);
  var focusFirstItem = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    var id = setTimeout(function () {
      var first = descendants.firstEnabled();
      if (first) setFocusedIndex(first.index);
    });
    timeoutIds.current.add(id);
  }, [descendants]);
  var focusLastItem = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    var id = setTimeout(function () {
      var last = descendants.lastEnabled();
      if (last) setFocusedIndex(last.index);
    });
    timeoutIds.current.add(id);
  }, [descendants]);
  var onOpenInternal = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    onOpenProp == null ? void 0 : onOpenProp();

    if (autoSelect) {
      focusFirstItem();
    } else {
      focusMenu();
    }
  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp]);

  var _useDisclosure = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useDisclosure)({
    isOpen: isOpenProp,
    defaultIsOpen: defaultIsOpen,
    onClose: onCloseProp,
    onOpen: onOpenInternal
  }),
      isOpen = _useDisclosure.isOpen,
      onOpen = _useDisclosure.onOpen,
      onClose = _useDisclosure.onClose,
      onToggle = _useDisclosure.onToggle;

  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useOutsideClick)({
    enabled: isOpen && closeOnBlur,
    ref: menuRef,
    handler: function handler(event) {
      var _buttonRef$current;

      if (!((_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target))) {
        onClose();
      }
    }
  });
  /**
   * Add some popper.js for dynamic positioning
   */

  var popper = (0,_chakra_ui_popper__WEBPACK_IMPORTED_MODULE_5__.usePopper)(_extends({}, popperProps, {
    enabled: isOpen || computePositionOnMount,
    placement: placement,
    direction: direction
  }));

  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(-1),
      focusedIndex = _React$useState[0],
      setFocusedIndex = _React$useState[1];
  /**
   * Focus the button when we close the menu
   */


  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useUpdateEffect)(function () {
    if (!isOpen) {
      setFocusedIndex(-1);
    }
  }, [isOpen]);
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useFocusOnHide)(menuRef, {
    focusRef: buttonRef,
    visible: isOpen,
    shouldFocus: true
  });
  /**
   * Generate unique ids for menu's list and button
   */

  var _useIds = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useIds)(id, "menu-button", "menu-list"),
      buttonId = _useIds[0],
      menuId = _useIds[1];

  var openAndFocusMenu = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    onOpen();
    focusMenu();
  }, [onOpen, focusMenu]);
  var timeoutIds = react__WEBPACK_IMPORTED_MODULE_0__.useRef(new Set([]));
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useUnmountEffect)(function () {
    timeoutIds.current.forEach(function (id) {
      return clearTimeout(id);
    });
    timeoutIds.current.clear();
  });
  var openAndFocusFirstItem = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    onOpen();
    focusFirstItem();
  }, [focusFirstItem, onOpen]);
  var openAndFocusLastItem = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    onOpen();
    focusLastItem();
  }, [onOpen, focusLastItem]);
  var refocus = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    var _menuRef$current, _descendants$item;

    var doc = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.getOwnerDocument)(menuRef.current);
    var hasFocusWithin = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(doc.activeElement);
    var shouldRefocus = isOpen && !hasFocusWithin;
    if (!shouldRefocus) return;
    var node = (_descendants$item = descendants.item(focusedIndex)) == null ? void 0 : _descendants$item.node;

    if (node) {
      (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.focus)(node, {
        selectTextIfInput: false,
        preventScroll: false
      });
    }
  }, [isOpen, focusedIndex, descendants]);
  return {
    openAndFocusMenu: openAndFocusMenu,
    openAndFocusFirstItem: openAndFocusFirstItem,
    openAndFocusLastItem: openAndFocusLastItem,
    onTransitionEnd: refocus,
    descendants: descendants,
    popper: popper,
    buttonId: buttonId,
    menuId: menuId,
    forceUpdate: popper.forceUpdate,
    orientation: "vertical",
    isOpen: isOpen,
    onToggle: onToggle,
    onOpen: onOpen,
    onClose: onClose,
    menuRef: menuRef,
    buttonRef: buttonRef,
    focusedIndex: focusedIndex,
    closeOnSelect: closeOnSelect,
    closeOnBlur: closeOnBlur,
    autoSelect: autoSelect,
    setFocusedIndex: setFocusedIndex,
    isLazy: isLazy,
    lazyBehavior: lazyBehavior
  };
}

/**
 * React Hook to manage a menu button.
 *
 * The assumption here is that the `useMenu` hook is used
 * in a component higher up the tree, and its return value
 * is passed as `context` to this hook.
 */
function useMenuButton(props, externalRef) {
  if (props === void 0) {
    props = {};
  }

  if (externalRef === void 0) {
    externalRef = null;
  }

  var menu = useMenuContext();
  var onToggle = menu.onToggle,
      popper = menu.popper,
      openAndFocusFirstItem = menu.openAndFocusFirstItem,
      openAndFocusLastItem = menu.openAndFocusLastItem;
  var onKeyDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    var eventKey = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.normalizeEventKey)(event);
    var keyMap = {
      Enter: openAndFocusFirstItem,
      ArrowDown: openAndFocusFirstItem,
      ArrowUp: openAndFocusLastItem
    };
    var action = keyMap[eventKey];

    if (action) {
      event.preventDefault();
      event.stopPropagation();
      action(event);
    }
  }, [openAndFocusFirstItem, openAndFocusLastItem]);
  return _extends({}, props, {
    ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__.mergeRefs)(menu.buttonRef, externalRef, popper.referenceRef),
    id: menu.buttonId,
    "data-active": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(menu.isOpen),
    "aria-expanded": menu.isOpen,
    "aria-haspopup": "menu",
    "aria-controls": menu.menuId,
    onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onClick, onToggle),
    onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onKeyDown, onKeyDown)
  });
}

function isTargetMenuItem(target) {
  var _target$getAttribute;

  // this will catch `menuitem`, `menuitemradio`, `menuitemcheckbox`
  return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isHTMLElement)(target) && !!((_target$getAttribute = target.getAttribute("role")) != null && _target$getAttribute.startsWith("menuitem"));
}
/* -------------------------------------------------------------------------------------------------
 * useMenuList
 * -----------------------------------------------------------------------------------------------*/


/**
 * React Hook to manage a menu list.
 *
 * The assumption here is that the `useMenu` hook is used
 * in a component higher up the tree, and its return value
 * is passed as `context` to this hook.
 */
function useMenuList(props, ref) {
  if (props === void 0) {
    props = {};
  }

  if (ref === void 0) {
    ref = null;
  }

  var menu = useMenuContext();

  if (!menu) {
    throw new Error("useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>");
  }

  var focusedIndex = menu.focusedIndex,
      setFocusedIndex = menu.setFocusedIndex,
      menuRef = menu.menuRef,
      isOpen = menu.isOpen,
      onClose = menu.onClose,
      menuId = menu.menuId,
      isLazy = menu.isLazy,
      lazyBehavior = menu.lazyBehavior;
  var descendants = useMenuDescendantsContext();
  /**
   * Hook that creates a keydown event handler that listens
   * to printable keyboard character press
   */

  var createTypeaheadHandler = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useShortcut)({
    preventDefault: function preventDefault(event) {
      return event.key !== " " && isTargetMenuItem(event.target);
    }
  });
  var onKeyDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    var eventKey = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.normalizeEventKey)(event);
    var keyMap = {
      Tab: function Tab(event) {
        return event.preventDefault();
      },
      Escape: onClose,
      ArrowDown: function ArrowDown() {
        var next = descendants.nextEnabled(focusedIndex);
        if (next) setFocusedIndex(next.index);
      },
      ArrowUp: function ArrowUp() {
        var prev = descendants.prevEnabled(focusedIndex);
        if (prev) setFocusedIndex(prev.index);
      }
    };
    var fn = keyMap[eventKey];

    if (fn) {
      event.preventDefault();
      fn(event);
      return;
    }
    /**
     * Typeahead: Based on current character pressed,
     * find the next item to be selected
     */


    var onTypeahead = createTypeaheadHandler(function (character) {
      var nextItem = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.getNextItemFromSearch)(descendants.values(), character, function (item) {
        var _item$node$textConten, _item$node;

        return (_item$node$textConten = item == null ? void 0 : (_item$node = item.node) == null ? void 0 : _item$node.textContent) != null ? _item$node$textConten : "";
      }, descendants.item(focusedIndex));

      if (nextItem) {
        var index = descendants.indexOf(nextItem.node);
        setFocusedIndex(index);
      }
    });

    if (isTargetMenuItem(event.target)) {
      onTypeahead(event);
    }
  }, [descendants, focusedIndex, createTypeaheadHandler, onClose, setFocusedIndex]);
  var hasBeenOpened = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);

  if (isOpen) {
    hasBeenOpened.current = true;
  }

  var shouldRenderChildren = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.determineLazyBehavior)({
    hasBeenSelected: hasBeenOpened.current,
    isLazy: isLazy,
    lazyBehavior: lazyBehavior,
    isSelected: isOpen
  });
  return _extends({}, props, {
    ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__.mergeRefs)(menuRef, ref),
    children: shouldRenderChildren ? props.children : null,
    tabIndex: -1,
    role: "menu",
    id: menuId,
    style: _extends({}, props.style, {
      transformOrigin: "var(--popper-transform-origin)"
    }),
    "aria-orientation": "vertical",
    onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onKeyDown, onKeyDown)
  });
}
/* -------------------------------------------------------------------------------------------------
 * useMenuPosition: Composes usePopper to position the menu
 * -----------------------------------------------------------------------------------------------*/

function useMenuPositioner(props) {
  if (props === void 0) {
    props = {};
  }

  var _useMenuContext = useMenuContext(),
      popper = _useMenuContext.popper,
      isOpen = _useMenuContext.isOpen;

  return popper.getPopperProps(_extends({}, props, {
    style: _extends({
      visibility: isOpen ? "visible" : "hidden"
    }, props.style)
  }));
}
/* -------------------------------------------------------------------------------------------------
 * useMenuItem: Hook for each menu item within the menu list.
   We also use it in `useMenuItemOption`
 * -----------------------------------------------------------------------------------------------*/

function useMenuItem(props, externalRef) {
  if (props === void 0) {
    props = {};
  }

  if (externalRef === void 0) {
    externalRef = null;
  }

  var _props2 = props,
      onMouseEnterProp = _props2.onMouseEnter,
      onMouseMoveProp = _props2.onMouseMove,
      onMouseLeaveProp = _props2.onMouseLeave,
      onClickProp = _props2.onClick,
      isDisabled = _props2.isDisabled,
      isFocusable = _props2.isFocusable,
      closeOnSelect = _props2.closeOnSelect,
      htmlProps = _objectWithoutPropertiesLoose(_props2, _excluded2$1);

  var menu = useMenuContext();
  var setFocusedIndex = menu.setFocusedIndex,
      focusedIndex = menu.focusedIndex,
      menuCloseOnSelect = menu.closeOnSelect,
      onClose = menu.onClose,
      menuRef = menu.menuRef,
      isOpen = menu.isOpen,
      menuId = menu.menuId;
  var ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  var id = menuId + "-menuitem-" + (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useId)();
  /**
   * Register the menuitem's node into the domContext
   */

  var _useMenuDescendant = useMenuDescendant({
    disabled: isDisabled && !isFocusable
  }),
      index = _useMenuDescendant.index,
      register = _useMenuDescendant.register;

  var onMouseEnter = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);
    if (isDisabled) return;
    setFocusedIndex(index);
  }, [setFocusedIndex, index, isDisabled, onMouseEnterProp]);
  var onMouseMove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);

    if (ref.current && !(0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isActiveElement)(ref.current)) {
      onMouseEnter(event);
    }
  }, [onMouseEnter, onMouseMoveProp]);
  var onMouseLeave = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);
    if (isDisabled) return;
    setFocusedIndex(-1);
  }, [setFocusedIndex, isDisabled, onMouseLeaveProp]);
  var onClick = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    onClickProp == null ? void 0 : onClickProp(event);
    if (!isTargetMenuItem(event.currentTarget)) return;
    /**
     * Close menu and parent menus, allowing the MenuItem
     * to override its parent menu's `closeOnSelect` prop.
     */

    if (closeOnSelect != null ? closeOnSelect : menuCloseOnSelect) {
      onClose();
    }
  }, [onClose, onClickProp, menuCloseOnSelect, closeOnSelect]);
  var isFocused = index === focusedIndex;
  var trulyDisabled = isDisabled && !isFocusable;
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useUpdateEffect)(function () {
    if (!isOpen) return;

    if (isFocused && !trulyDisabled && ref.current) {
      (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.focus)(ref.current, {
        nextTick: true,
        selectTextIfInput: false,
        preventScroll: false
      });
    } else if (menuRef.current && !(0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isActiveElement)(menuRef.current)) {
      (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.focus)(menuRef.current, {
        preventScroll: false
      });
    }
  }, [isFocused, trulyDisabled, menuRef, isOpen]);
  var clickableProps = (0,_chakra_ui_clickable__WEBPACK_IMPORTED_MODULE_6__.useClickable)({
    onClick: onClick,
    onMouseEnter: onMouseEnter,
    onMouseMove: onMouseMove,
    onMouseLeave: onMouseLeave,
    ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__.mergeRefs)(register, ref, externalRef),
    isDisabled: isDisabled,
    isFocusable: isFocusable
  });
  return _extends({}, htmlProps, clickableProps, {
    id: id,
    role: "menuitem",
    tabIndex: isFocused ? 0 : -1
  });
}
/* -------------------------------------------------------------------------------------------------
 * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item
 * -----------------------------------------------------------------------------------------------*/

function useMenuOption(props, ref) {
  if (props === void 0) {
    props = {};
  }

  if (ref === void 0) {
    ref = null;
  }

  var _props3 = props,
      _props3$type = _props3.type,
      type = _props3$type === void 0 ? "radio" : _props3$type,
      isChecked = _props3.isChecked,
      rest = _objectWithoutPropertiesLoose(_props3, _excluded3$1);

  var ownProps = useMenuItem(rest, ref);
  return _extends({}, ownProps, {
    role: "menuitem" + type,
    "aria-checked": isChecked
  });
}
/* -------------------------------------------------------------------------------------------------
 * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option
 * -----------------------------------------------------------------------------------------------*/

function useMenuOptionGroup(props) {
  if (props === void 0) {
    props = {};
  }

  var _props4 = props,
      children = _props4.children,
      _props4$type = _props4.type,
      type = _props4$type === void 0 ? "radio" : _props4$type,
      valueProp = _props4.value,
      defaultValue = _props4.defaultValue,
      onChangeProp = _props4.onChange,
      htmlProps = _objectWithoutPropertiesLoose(_props4, _excluded4$1);

  var isRadio = type === "radio";
  var fallback = isRadio ? "" : [];

  var _useControllableState = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useControllableState)({
    defaultValue: defaultValue != null ? defaultValue : fallback,
    value: valueProp,
    onChange: onChangeProp
  }),
      value = _useControllableState[0],
      setValue = _useControllableState[1];

  var onChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (selectedValue) {
    if (type === "radio" && (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isString)(value)) {
      setValue(selectedValue);
    }

    if (type === "checkbox" && (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isArray)(value)) {
      var nextValue = value.includes(selectedValue) ? (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.removeItem)(value, selectedValue) : (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.addItem)(value, selectedValue);
      setValue(nextValue);
    }
  }, [value, setValue, type]);
  var validChildren = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__.getValidChildren)(children);
  var clones = validChildren.map(function (child) {
    /**
     * We've added an internal `id` to each `MenuItemOption`,
     * let's use that for type-checking.
     *
     * We can't rely on displayName or the element's type since
     * they can be changed by the user.
     */
    if (child.type.id !== "MenuItemOption") return child;

    var onClick = function onClick(event) {
      onChange(child.props.value);
      child.props.onClick == null ? void 0 : child.props.onClick(event);
    };

    var isChecked = type === "radio" ? child.props.value === value : value.includes(child.props.value);
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
      type: type,
      onClick: onClick,
      isChecked: isChecked
    });
  });
  return _extends({}, htmlProps, {
    children: clones
  });
}
function useMenuState() {
  var _useMenuContext2 = useMenuContext(),
      isOpen = _useMenuContext2.isOpen,
      onClose = _useMenuContext2.onClose;

  return {
    isOpen: isOpen,
    onClose: onClose
  };
}

var _excluded = ["descendants"],
    _excluded2 = ["children", "as"],
    _excluded3 = ["rootProps"],
    _excluded4 = ["type"],
    _excluded5 = ["icon", "iconSpacing", "command", "commandSpacing", "children"],
    _excluded6 = ["icon", "iconSpacing"],
    _excluded7 = ["className", "title"],
    _excluded8 = ["title", "children", "className"],
    _excluded9 = ["className", "children"],
    _excluded10 = ["className"];

/**
 * Menu provides context, state, and focus management
 * to its sub-components. It doesn't render any DOM node.
 */
var Menu = function Menu(props) {
  var children = props.children;
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.useMultiStyleConfig)("Menu", props);
  var ownProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.omitThemingProps)(props);

  var _useTheme = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.useTheme)(),
      direction = _useTheme.direction;

  var _useMenu = useMenu(_extends({}, ownProps, {
    direction: direction
  })),
      descendants = _useMenu.descendants,
      ctx = _objectWithoutPropertiesLoose(_useMenu, _excluded);

  var context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return ctx;
  }, [ctx]);
  var isOpen = context.isOpen,
      onClose = context.onClose,
      forceUpdate = context.forceUpdate;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MenuDescendantsProvider, {
    value: descendants
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MenuProvider, {
    value: context
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.StylesProvider, {
    value: styles
  }, (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.runIfFn)(children, {
    isOpen: isOpen,
    onClose: onClose,
    forceUpdate: forceUpdate
  }))));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  Menu.displayName = "Menu";
}

var StyledMenuButton = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.chakra.button, _extends({
    ref: ref
  }, props, {
    __css: _extends({
      display: "inline-flex",
      appearance: "none",
      alignItems: "center",
      outline: 0
    }, styles.button)
  }));
});
/**
 * The trigger for the menu list. Must be a direct child of `Menu`.
 */

var MenuButton = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.forwardRef)(function (props, ref) {
  props.children;
      var As = props.as,
      rest = _objectWithoutPropertiesLoose(props, _excluded2);

  var buttonProps = useMenuButton(rest, ref);
  var Element = As || StyledMenuButton;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Element, _extends({}, buttonProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-menu__menu-button", props.className)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.chakra.span, {
    __css: {
      pointerEvents: "none",
      flex: "1 1 auto",
      minW: 0
    }
  }, props.children));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  MenuButton.displayName = "MenuButton";
}

var motionVariants = {
  enter: {
    visibility: "visible",
    opacity: 1,
    scale: 1,
    transition: {
      duration: 0.2,
      ease: [0.4, 0, 0.2, 1]
    }
  },
  exit: {
    transitionEnd: {
      visibility: "hidden"
    },
    opacity: 0,
    scale: 0.8,
    transition: {
      duration: 0.1,
      easings: "easeOut"
    }
  }
}; // @future: only call `motion(chakra.div)` when we drop framer-motion v3 support

var MotionDiv = "custom" in framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion ? framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.custom(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.chakra.div) : (0,framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion)(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.chakra.div);
var MenuList = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.forwardRef)(function (props, ref) {
  var _props$zIndex, _styles$list;

  var rootProps = props.rootProps,
      rest = _objectWithoutPropertiesLoose(props, _excluded3);

  var _useMenuContext = useMenuContext(),
      isOpen = _useMenuContext.isOpen,
      onTransitionEnd = _useMenuContext.onTransitionEnd;

  var menulistProps = useMenuList(rest, ref);
  var positionerProps = useMenuPositioner(rootProps);
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.chakra.div, _extends({}, positionerProps, {
    __css: {
      zIndex: (_props$zIndex = props.zIndex) != null ? _props$zIndex : (_styles$list = styles.list) == null ? void 0 : _styles$list.zIndex
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MotionDiv, _extends({}, menulistProps, {
    /**
     * We could call this on either `onAnimationComplete` or `onUpdate`.
     * It seems the re-focusing works better with the `onUpdate`
     */
    onUpdate: onTransitionEnd,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-menu__menu-list", menulistProps.className),
    variants: motionVariants,
    initial: false,
    animate: isOpen ? "enter" : "exit",
    __css: _extends({
      outline: 0
    }, styles.list)
  })));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  MenuList.displayName = "MenuList";
}

var StyledMenuItem = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.forwardRef)(function (props, ref) {
  var type = props.type,
      rest = _objectWithoutPropertiesLoose(props, _excluded4);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.useStyles)();
  /**
   * Given another component, use its type if present
   * Else, use no type to avoid invalid html, e.g. <a type="button" />
   * Else, fall back to "button"
   */

  var btnType = rest.as ? type != null ? type : undefined : "button";

  var buttonStyles = _extends({
    textDecoration: "none",
    color: "inherit",
    userSelect: "none",
    display: "flex",
    width: "100%",
    alignItems: "center",
    textAlign: "start",
    flex: "0 0 auto",
    outline: 0
  }, styles.item);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.chakra.button, _extends({
    ref: ref,
    type: btnType
  }, rest, {
    __css: buttonStyles
  }));
});
var MenuItem = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.forwardRef)(function (props, ref) {
  var icon = props.icon,
      _props$iconSpacing = props.iconSpacing,
      iconSpacing = _props$iconSpacing === void 0 ? "0.75rem" : _props$iconSpacing,
      command = props.command,
      _props$commandSpacing = props.commandSpacing,
      commandSpacing = _props$commandSpacing === void 0 ? "0.75rem" : _props$commandSpacing,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, _excluded5);

  var menuitemProps = useMenuItem(rest, ref);
  var shouldWrap = icon || command;

  var _children = shouldWrap ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    style: {
      pointerEvents: "none",
      flex: 1
    }
  }, children) : children;

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledMenuItem, _extends({}, menuitemProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-menu__menuitem", menuitemProps.className)
  }), icon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MenuIcon, {
    fontSize: "0.8em",
    marginEnd: iconSpacing
  }, icon), _children, command && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MenuCommand, {
    marginStart: commandSpacing
  }, command));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  MenuItem.displayName = "MenuItem";
}

var CheckIcon = function CheckIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    viewBox: "0 0 14 14",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    fill: "currentColor",
    points: "5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039"
  }));
};

var MenuItemOption = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.forwardRef)(function (props, ref) {
  var icon = props.icon,
      _props$iconSpacing2 = props.iconSpacing,
      iconSpacing = _props$iconSpacing2 === void 0 ? "0.75rem" : _props$iconSpacing2,
      rest = _objectWithoutPropertiesLoose(props, _excluded6);

  var optionProps = useMenuOption(rest, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledMenuItem, _extends({}, optionProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-menu__menuitem-option", rest.className)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MenuIcon, {
    fontSize: "0.8em",
    marginEnd: iconSpacing,
    opacity: props.isChecked ? 1 : 0
  }, icon || /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(CheckIcon, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    style: {
      flex: 1
    }
  }, optionProps.children));
});
MenuItemOption.id = "MenuItemOption";

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  MenuItemOption.displayName = "MenuItemOption";
}

var MenuOptionGroup = function MenuOptionGroup(props) {
  var className = props.className,
      title = props.title,
      rest = _objectWithoutPropertiesLoose(props, _excluded7);

  var ownProps = useMenuOptionGroup(rest);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MenuGroup, _extends({
    title: title,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-menu__option-group", className)
  }, ownProps));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  MenuOptionGroup.displayName = "MenuOptionGroup";
}

var MenuGroup = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.forwardRef)(function (props, ref) {
  var title = props.title,
      children = props.children,
      className = props.className,
      rest = _objectWithoutPropertiesLoose(props, _excluded8);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-menu__group__title", className);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    ref: ref,
    className: "chakra-menu__group",
    role: "group"
  }, title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.chakra.p, _extends({
    className: _className
  }, rest, {
    __css: styles.groupTitle
  }), title), children);
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  MenuGroup.displayName = "MenuGroup";
}

var MenuCommand = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.chakra.span, _extends({
    ref: ref
  }, props, {
    __css: styles.command,
    className: "chakra-menu__command"
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  MenuCommand.displayName = "MenuCommand";
}

var MenuIcon = function MenuIcon(props) {
  var className = props.className,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, _excluded9);

  var child = react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children);
  var clone = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
    focusable: "false",
    "aria-hidden": true,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-menu__icon", child.props.className)
  }) : null;

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-menu__icon-wrapper", className);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.chakra.span, _extends({
    className: _className
  }, rest, {
    __css: {
      flexShrink: 0
    }
  }), clone);
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  MenuIcon.displayName = "MenuIcon";
}

var MenuDivider = function MenuDivider(props) {
  var className = props.className,
      rest = _objectWithoutPropertiesLoose(props, _excluded10);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.chakra.hr, _extends({
    role: "separator",
    "aria-orientation": "horizontal",
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-menu__divider", className)
  }, rest, {
    __css: styles.divider
  }));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  MenuDivider.displayName = "MenuDivider";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/modal/dist/chakra-ui-modal.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@chakra-ui/modal/dist/chakra-ui-modal.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlertDialog": () => (/* binding */ AlertDialog),
/* harmony export */   "AlertDialogBody": () => (/* binding */ ModalBody),
/* harmony export */   "AlertDialogCloseButton": () => (/* binding */ ModalCloseButton),
/* harmony export */   "AlertDialogContent": () => (/* binding */ AlertDialogContent),
/* harmony export */   "AlertDialogFooter": () => (/* binding */ ModalFooter),
/* harmony export */   "AlertDialogHeader": () => (/* binding */ ModalHeader),
/* harmony export */   "AlertDialogOverlay": () => (/* binding */ ModalOverlay),
/* harmony export */   "Drawer": () => (/* binding */ Drawer),
/* harmony export */   "DrawerBody": () => (/* binding */ ModalBody),
/* harmony export */   "DrawerCloseButton": () => (/* binding */ ModalCloseButton),
/* harmony export */   "DrawerContent": () => (/* binding */ DrawerContent),
/* harmony export */   "DrawerFooter": () => (/* binding */ ModalFooter),
/* harmony export */   "DrawerHeader": () => (/* binding */ ModalHeader),
/* harmony export */   "DrawerOverlay": () => (/* binding */ ModalOverlay),
/* harmony export */   "Modal": () => (/* binding */ Modal),
/* harmony export */   "ModalBody": () => (/* binding */ ModalBody),
/* harmony export */   "ModalCloseButton": () => (/* binding */ ModalCloseButton),
/* harmony export */   "ModalContent": () => (/* binding */ ModalContent),
/* harmony export */   "ModalContextProvider": () => (/* binding */ ModalContextProvider),
/* harmony export */   "ModalFocusScope": () => (/* binding */ ModalFocusScope),
/* harmony export */   "ModalFooter": () => (/* binding */ ModalFooter),
/* harmony export */   "ModalHeader": () => (/* binding */ ModalHeader),
/* harmony export */   "ModalOverlay": () => (/* binding */ ModalOverlay),
/* harmony export */   "useAriaHidden": () => (/* binding */ useAriaHidden),
/* harmony export */   "useModal": () => (/* binding */ useModal),
/* harmony export */   "useModalContext": () => (/* binding */ useModalContext)
/* harmony export */ });
/* harmony import */ var _chakra_ui_close_button__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @chakra-ui/close-button */ "./node_modules/@chakra-ui/close-button/dist/chakra-ui-close-button.esm.js");
/* harmony import */ var _chakra_ui_focus_lock__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @chakra-ui/focus-lock */ "./node_modules/@chakra-ui/focus-lock/dist/chakra-ui-focus-lock.esm.js");
/* harmony import */ var _chakra_ui_portal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @chakra-ui/portal */ "./node_modules/@chakra-ui/portal/dist/chakra-ui-portal.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/transition */ "./node_modules/@chakra-ui/transition/dist/chakra-ui-transition.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_remove_scroll__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react-remove-scroll */ "./node_modules/react-remove-scroll/dist/es2015/Combination.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");
/* harmony import */ var aria_hidden__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aria-hidden */ "./node_modules/aria-hidden/dist/es2015/index.js");














function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var _excluded$3 = ["preset"];
var transitions = {
  slideInBottom: _extends({}, _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_2__.slideFadeConfig, {
    custom: {
      offsetY: 16,
      reverse: true
    }
  }),
  slideInRight: _extends({}, _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_2__.slideFadeConfig, {
    custom: {
      offsetX: 16,
      reverse: true
    }
  }),
  scale: _extends({}, _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_2__.scaleFadeConfig, {
    custom: {
      initialScale: 0.95,
      reverse: true
    }
  }),
  none: {}
};
var Motion = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra)(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.section);
var ModalTransition = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) {
  var preset = props.preset,
      rest = _objectWithoutPropertiesLoose(props, _excluded$3);

  var motionProps = transitions[preset];
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Motion, _extends({
    ref: ref
  }, motionProps, rest));
});

/**
 * Proper state management for nested modals.
 * Simplified, but inspired by material-ui's ModalManager class.
 */

var ModalManager = /*#__PURE__*/function () {
  function ModalManager() {
    this.modals = void 0;
    this.modals = [];
  }

  var _proto = ModalManager.prototype;

  _proto.add = function add(modal) {
    this.modals.push(modal);
  };

  _proto.remove = function remove(modal) {
    this.modals = this.modals.filter(function (_modal) {
      return _modal !== modal;
    });
  };

  _proto.isTopModal = function isTopModal(modal) {
    var topmostModal = this.modals[this.modals.length - 1];
    return topmostModal === modal;
  };

  return ModalManager;
}();

var manager = new ModalManager();
function useModalManager(ref, isOpen) {
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    if (isOpen) {
      manager.add(ref);
    }

    return function () {
      manager.remove(ref);
    };
  }, [isOpen, ref]);
}

/**
 * Modal hook that manages all the logic for the modal dialog widget
 * and returns prop getters, state and actions.
 *
 * @param props
 */
function useModal(props) {
  var isOpen = props.isOpen,
      onClose = props.onClose,
      id = props.id,
      _props$closeOnOverlay = props.closeOnOverlayClick,
      closeOnOverlayClick = _props$closeOnOverlay === void 0 ? true : _props$closeOnOverlay,
      _props$closeOnEsc = props.closeOnEsc,
      closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc,
      _props$useInert = props.useInert,
      useInert = _props$useInert === void 0 ? true : _props$useInert,
      onOverlayClickProp = props.onOverlayClick,
      onEsc = props.onEsc;
  var dialogRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var overlayRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);

  var _useIds = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_5__.useIds)(id, "chakra-modal", "chakra-modal--header", "chakra-modal--body"),
      dialogId = _useIds[0],
      headerId = _useIds[1],
      bodyId = _useIds[2];
  /**
   * Hook used to polyfill `aria-modal` for older browsers.
   * It uses `aria-hidden` to all other nodes.
   *
   * @see https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/
   */


  useAriaHidden(dialogRef, isOpen && useInert);
  /**
   * Hook use to manage multiple or nested modals
   */

  useModalManager(dialogRef, isOpen);
  var mouseDownTarget = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var onMouseDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    mouseDownTarget.current = event.target;
  }, []);
  var onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    if (event.key === "Escape") {
      event.stopPropagation();

      if (closeOnEsc) {
        onClose == null ? void 0 : onClose();
      }

      onEsc == null ? void 0 : onEsc();
    }
  }, [closeOnEsc, onClose, onEsc]);

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
      headerMounted = _useState[0],
      setHeaderMounted = _useState[1];

  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
      bodyMounted = _useState2[0],
      setBodyMounted = _useState2[1];

  var getDialogProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({
      role: "dialog"
    }, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.mergeRefs)(ref, dialogRef),
      id: dialogId,
      tabIndex: -1,
      "aria-modal": true,
      "aria-labelledby": headerMounted ? headerId : undefined,
      "aria-describedby": bodyMounted ? bodyId : undefined,
      onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onClick, function (event) {
        return event.stopPropagation();
      })
    });
  }, [bodyId, bodyMounted, dialogId, headerId, headerMounted]);
  var onOverlayClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    event.stopPropagation();
    /**
     * Make sure the event starts and ends on the same DOM element.
     *
     * This is used to prevent the modal from closing when you
     * start dragging from the content, and release drag outside the content.
     *
     * We prevent this because it is technically not a considered "click outside"
     */

    if (mouseDownTarget.current !== event.target) return;
    /**
     * When you click on the overlay, we want to remove only the topmost modal
     */

    if (!manager.isTopModal(dialogRef)) return;

    if (closeOnOverlayClick) {
      onClose == null ? void 0 : onClose();
    }

    onOverlayClickProp == null ? void 0 : onOverlayClickProp();
  }, [onClose, closeOnOverlayClick, onOverlayClickProp]);
  var getDialogContainerProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.mergeRefs)(ref, overlayRef),
      onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onClick, onOverlayClick),
      onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onKeyDown, onKeyDown),
      onMouseDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onMouseDown, onMouseDown)
    });
  }, [onKeyDown, onMouseDown, onOverlayClick]);
  return {
    isOpen: isOpen,
    onClose: onClose,
    headerId: headerId,
    bodyId: bodyId,
    setBodyMounted: setBodyMounted,
    setHeaderMounted: setHeaderMounted,
    dialogRef: dialogRef,
    overlayRef: overlayRef,
    getDialogProps: getDialogProps,
    getDialogContainerProps: getDialogContainerProps
  };
}

/**
 * Modal hook to polyfill `aria-modal`.
 *
 * It applies `aria-hidden` to elements behind the modal
 * to indicate that they're `inert`.
 *
 * @param ref React ref of the node
 * @param shouldHide whether `aria-hidden` should be applied
 */
function useAriaHidden(ref, shouldHide) {
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    if (!ref.current) return undefined;
    var undo = null;

    if (shouldHide && ref.current) {
      undo = (0,aria_hidden__WEBPACK_IMPORTED_MODULE_1__.hideOthers)(ref.current);
    }

    return function () {
      if (shouldHide) {
        undo == null ? void 0 : undo();
      }
    };
  }, [shouldHide, ref]);
}

var _excluded$2 = ["className", "children", "containerProps"],
    _excluded2$1 = ["className", "transition"],
    _excluded3 = ["className"],
    _excluded4 = ["className"],
    _excluded5 = ["className"],
    _excluded6 = ["onClick", "className"];

var _createContext$1 = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.createContext)({
  strict: true,
  name: "ModalContext",
  errorMessage: "useModalContext: `context` is undefined. Seems you forgot to wrap modal components in `<Modal />`"
}),
    ModalContextProvider = _createContext$1[0],
    useModalContext = _createContext$1[1];
/**
 * Modal provides context, theming, and accessibility properties
 * to all other modal components.
 *
 * It doesn't render any DOM node.
 */

var Modal = function Modal(props) {
  var portalProps = props.portalProps,
      children = props.children,
      autoFocus = props.autoFocus,
      trapFocus = props.trapFocus,
      initialFocusRef = props.initialFocusRef,
      finalFocusRef = props.finalFocusRef,
      returnFocusOnClose = props.returnFocusOnClose,
      blockScrollOnMount = props.blockScrollOnMount,
      allowPinchZoom = props.allowPinchZoom,
      preserveScrollBarGap = props.preserveScrollBarGap,
      motionPreset = props.motionPreset,
      lockFocusAcrossFrames = props.lockFocusAcrossFrames;
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useMultiStyleConfig)("Modal", props);
  var modal = useModal(props);

  var context = _extends({}, modal, {
    autoFocus: autoFocus,
    trapFocus: trapFocus,
    initialFocusRef: initialFocusRef,
    finalFocusRef: finalFocusRef,
    returnFocusOnClose: returnFocusOnClose,
    blockScrollOnMount: blockScrollOnMount,
    allowPinchZoom: allowPinchZoom,
    preserveScrollBarGap: preserveScrollBarGap,
    motionPreset: motionPreset,
    lockFocusAcrossFrames: lockFocusAcrossFrames
  });

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ModalContextProvider, {
    value: context
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_8__.AnimatePresence, null, context.isOpen && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_portal__WEBPACK_IMPORTED_MODULE_9__.Portal, portalProps, children))));
};
Modal.defaultProps = {
  lockFocusAcrossFrames: true,
  returnFocusOnClose: true,
  scrollBehavior: "outside",
  trapFocus: true,
  autoFocus: true,
  blockScrollOnMount: true,
  allowPinchZoom: false,
  motionPreset: "scale"
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  Modal.displayName = "Modal";
}

var MotionDiv = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra)(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div);
/**
 * ModalContent is used to group modal's content. It has all the
 * necessary `aria-*` properties to indicate that it is a modal
 */

var ModalContent = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  var className = props.className,
      children = props.children,
      rootProps = props.containerProps,
      rest = _objectWithoutPropertiesLoose(props, _excluded$2);

  var _useModalContext = useModalContext(),
      getDialogProps = _useModalContext.getDialogProps,
      getDialogContainerProps = _useModalContext.getDialogContainerProps;

  var dialogProps = getDialogProps(rest, ref);
  var containerProps = getDialogContainerProps(rootProps);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-modal__content", className);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();

  var dialogStyles = _extends({
    display: "flex",
    flexDirection: "column",
    position: "relative",
    width: "100%",
    outline: 0
  }, styles.dialog);

  var dialogContainerStyles = _extends({
    display: "flex",
    width: "100vw",
    height: "100vh",
    "@supports(height: -webkit-fill-available)": {
      height: "-webkit-fill-available"
    },
    position: "fixed",
    left: 0,
    top: 0
  }, styles.dialogContainer);

  var _useModalContext2 = useModalContext(),
      motionPreset = _useModalContext2.motionPreset;

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ModalFocusScope, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.div, _extends({}, containerProps, {
    className: "chakra-modal__content-container" // tabindex="-1" means that the element is not reachable via sequential keyboard navigation, @see #4686
    ,
    tabIndex: -1,
    __css: dialogContainerStyles
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ModalTransition, _extends({
    preset: motionPreset,
    className: _className
  }, dialogProps, {
    __css: dialogStyles
  }), children)));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  ModalContent.displayName = "ModalContent";
}

function ModalFocusScope(props) {
  var _useModalContext3 = useModalContext(),
      autoFocus = _useModalContext3.autoFocus,
      trapFocus = _useModalContext3.trapFocus,
      dialogRef = _useModalContext3.dialogRef,
      initialFocusRef = _useModalContext3.initialFocusRef,
      blockScrollOnMount = _useModalContext3.blockScrollOnMount,
      allowPinchZoom = _useModalContext3.allowPinchZoom,
      finalFocusRef = _useModalContext3.finalFocusRef,
      returnFocusOnClose = _useModalContext3.returnFocusOnClose,
      preserveScrollBarGap = _useModalContext3.preserveScrollBarGap,
      lockFocusAcrossFrames = _useModalContext3.lockFocusAcrossFrames;

  var _usePresence = (0,framer_motion__WEBPACK_IMPORTED_MODULE_10__.usePresence)(),
      isPresent = _usePresence[0],
      safeToRemove = _usePresence[1];

  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    if (!isPresent && safeToRemove) {
      setTimeout(safeToRemove);
    }
  }, [isPresent, safeToRemove]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_focus_lock__WEBPACK_IMPORTED_MODULE_11__.FocusLock, {
    autoFocus: autoFocus,
    isDisabled: !trapFocus,
    initialFocusRef: initialFocusRef,
    finalFocusRef: finalFocusRef,
    restoreFocus: returnFocusOnClose,
    contentRef: dialogRef,
    lockFocusAcrossFrames: lockFocusAcrossFrames
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_remove_scroll__WEBPACK_IMPORTED_MODULE_12__["default"], {
    removeScrollBar: !preserveScrollBarGap,
    allowPinchZoom: allowPinchZoom,
    enabled: blockScrollOnMount,
    forwardProps: true
  }, props.children));
}

/**
 * ModalOverlay renders a backdrop behind the modal. It is
 * also used as a wrapper for the modal content for better positioning.
 *
 * @see Docs https://chakra-ui.com/modal
 */
var ModalOverlay = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  var className = props.className;
      props.transition;
      var rest = _objectWithoutPropertiesLoose(props, _excluded2$1);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-modal__overlay", className);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();

  var overlayStyle = _extends({
    pos: "fixed",
    left: "0",
    top: "0",
    w: "100vw",
    h: "100vh"
  }, styles.overlay);

  var _useModalContext4 = useModalContext(),
      motionPreset = _useModalContext4.motionPreset;

  var motionProps = motionPreset === "none" ? {} : _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_2__.fadeConfig;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MotionDiv, _extends({}, motionProps, {
    __css: overlayStyle,
    ref: ref,
    className: _className
  }, rest));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  ModalOverlay.displayName = "ModalOverlay";
}

/**
 * ModalHeader
 *
 * React component that houses the title of the modal.
 *
 * @see Docs https://chakra-ui.com/modal
 */
var ModalHeader = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  var className = props.className,
      rest = _objectWithoutPropertiesLoose(props, _excluded3);

  var _useModalContext5 = useModalContext(),
      headerId = _useModalContext5.headerId,
      setHeaderMounted = _useModalContext5.setHeaderMounted;
  /**
   * Notify us if this component was rendered or used
   * so we can append `aria-labelledby` automatically
   */


  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    setHeaderMounted(true);
    return function () {
      return setHeaderMounted(false);
    };
  }, [setHeaderMounted]);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-modal__header", className);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();

  var headerStyles = _extends({
    flex: 0
  }, styles.header);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.header, _extends({
    ref: ref,
    className: _className,
    id: headerId
  }, rest, {
    __css: headerStyles
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  ModalHeader.displayName = "ModalHeader";
}

/**
 * ModalBody
 *
 * React component that houses the main content of the modal.
 *
 * @see Docs https://chakra-ui.com/modal
 */
var ModalBody = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  var className = props.className,
      rest = _objectWithoutPropertiesLoose(props, _excluded4);

  var _useModalContext6 = useModalContext(),
      bodyId = _useModalContext6.bodyId,
      setBodyMounted = _useModalContext6.setBodyMounted;
  /**
   * Notify us if this component was rendered or used
   * so we can append `aria-describedby` automatically
   */


  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    setBodyMounted(true);
    return function () {
      return setBodyMounted(false);
    };
  }, [setBodyMounted]);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-modal__body", className);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.div, _extends({
    ref: ref,
    className: _className,
    id: bodyId
  }, rest, {
    __css: styles.body
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  ModalBody.displayName = "ModalBody";
}

/**
 * ModalFooter houses the action buttons of the modal.
 * @see Docs https://chakra-ui.com/modal
 */
var ModalFooter = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  var className = props.className,
      rest = _objectWithoutPropertiesLoose(props, _excluded5);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-modal__footer", className);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();

  var footerStyles = _extends({
    display: "flex",
    alignItems: "center",
    justifyContent: "flex-end"
  }, styles.footer);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.footer, _extends({
    ref: ref
  }, rest, {
    __css: footerStyles,
    className: _className
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  ModalFooter.displayName = "ModalFooter";
}
/**
 * ModalCloseButton is used closes the modal.
 *
 * You don't need to pass the `onClick` to it, it reads the
 * `onClose` action from the modal context.
 */


var ModalCloseButton = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  var onClick = props.onClick,
      className = props.className,
      rest = _objectWithoutPropertiesLoose(props, _excluded6);

  var _useModalContext7 = useModalContext(),
      onClose = _useModalContext7.onClose;

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-modal__close-btn", className);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_close_button__WEBPACK_IMPORTED_MODULE_13__.CloseButton, _extends({
    ref: ref,
    __css: styles.closeButton,
    className: _className,
    onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(onClick, function (event) {
      event.stopPropagation();
      onClose();
    })
  }, rest));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  ModalCloseButton.displayName = "ModalCloseButton";
}

var _excluded$1 = ["leastDestructiveRef"];
function AlertDialog(props) {
  var leastDestructiveRef = props.leastDestructiveRef,
      rest = _objectWithoutPropertiesLoose(props, _excluded$1);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Modal, _extends({}, rest, {
    initialFocusRef: leastDestructiveRef
  }));
}
var AlertDialogContent = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ModalContent, _extends({
    ref: ref,
    role: "alertdialog"
  }, props));
});

var _excluded = ["isOpen", "onClose", "placement", "children"],
    _excluded2 = ["className", "children"];

var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.createContext)(),
    DrawerContextProvider = _createContext[0],
    useDrawerContext = _createContext[1];

var placementMap = {
  start: {
    ltr: "left",
    rtl: "right"
  },
  end: {
    ltr: "right",
    rtl: "left"
  }
};

function getDrawerPlacement(placement, dir) {
  var _placementMap$placeme, _placementMap$placeme2;

  if (!placement) return;
  return (_placementMap$placeme = (_placementMap$placeme2 = placementMap[placement]) == null ? void 0 : _placementMap$placeme2[dir]) != null ? _placementMap$placeme : placement;
}

function Drawer(props) {
  var _theme$components;

  var isOpen = props.isOpen,
      onClose = props.onClose,
      _props$placement = props.placement,
      placementProp = _props$placement === void 0 ? "right" : _props$placement,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, _excluded);

  var theme = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  var drawerStyleConfig = (_theme$components = theme.components) == null ? void 0 : _theme$components.Drawer;
  var placement = getDrawerPlacement(placementProp, theme.direction);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DrawerContextProvider, {
    value: {
      placement: placement
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Modal, _extends({
    isOpen: isOpen,
    onClose: onClose,
    styleConfig: drawerStyleConfig
  }, rest), children));
}
var StyledSlide = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra)(_chakra_ui_transition__WEBPACK_IMPORTED_MODULE_2__.Slide);

/**
 * ModalContent is used to group modal's content. It has all the
 * necessary `aria-*` properties to indicate that it is a modal
 */
var DrawerContent = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function (props, ref) {
  var className = props.className,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, _excluded2);

  var _useModalContext = useModalContext(),
      getDialogProps = _useModalContext.getDialogProps,
      getDialogContainerProps = _useModalContext.getDialogContainerProps,
      isOpen = _useModalContext.isOpen;

  var dialogProps = getDialogProps(rest, ref);
  var containerProps = getDialogContainerProps();

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-modal__content", className);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();

  var dialogStyles = _extends({
    display: "flex",
    flexDirection: "column",
    position: "relative",
    width: "100%",
    outline: 0
  }, styles.dialog);

  var dialogContainerStyles = _extends({
    display: "flex",
    width: "100vw",
    height: "100vh",
    position: "fixed",
    left: 0,
    top: 0
  }, styles.dialogContainer);

  var _useDrawerContext = useDrawerContext(),
      placement = _useDrawerContext.placement;

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.div, _extends({}, containerProps, {
    className: "chakra-modal__content-container",
    __css: dialogContainerStyles
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ModalFocusScope, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledSlide, _extends({
    direction: placement,
    "in": isOpen,
    className: _className
  }, dialogProps, {
    __css: dialogStyles
  }), children)));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  DrawerContent.displayName = "DrawerContent";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/number-input/dist/chakra-ui-number-input.esm.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@chakra-ui/number-input/dist/chakra-ui-number-input.esm.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NumberDecrementStepper": () => (/* binding */ NumberDecrementStepper),
/* harmony export */   "NumberIncrementStepper": () => (/* binding */ NumberIncrementStepper),
/* harmony export */   "NumberInput": () => (/* binding */ NumberInput),
/* harmony export */   "NumberInputField": () => (/* binding */ NumberInputField),
/* harmony export */   "NumberInputStepper": () => (/* binding */ NumberInputStepper),
/* harmony export */   "StyledStepper": () => (/* binding */ StyledStepper),
/* harmony export */   "useNumberInput": () => (/* binding */ useNumberInput)
/* harmony export */ });
/* harmony import */ var _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/form-control */ "./node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/icon */ "./node_modules/@chakra-ui/icon/dist/chakra-ui-icon.esm.js");
/* harmony import */ var _chakra_ui_counter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/counter */ "./node_modules/@chakra-ui/counter/dist/chakra-ui-counter.esm.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");










function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var TriangleDownIcon = function TriangleDownIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_1__.Icon, _extends({
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z"
  }));
};
var TriangleUpIcon = function TriangleUpIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_1__.Icon, _extends({
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z"
  }));
};

/**
 * When click and hold on a button - the speed of auto changing the value.
 */

var CONTINUOUS_CHANGE_INTERVAL = 50;
/**
 * When click and hold on a button - the delay before auto changing the value.
 */

var CONTINUOUS_CHANGE_DELAY = 300;

/**
 * React hook used in the number input to spin its
 * value on long press of the spin buttons
 *
 * @param increment the function to increment
 * @param decrement the function to decrement
 */
function useSpinner(increment, decrement) {
  /**
   * To keep incrementing/decrementing on press, we call that `spinning`
   */
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
      isSpinning = _useState[0],
      setIsSpinning = _useState[1]; // This state keeps track of the action ("increment" or "decrement")


  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),
      action = _useState2[0],
      setAction = _useState2[1]; // To increment the value the first time you mousedown, we call that `runOnce`


  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true),
      runOnce = _useState3[0],
      setRunOnce = _useState3[1]; // Store the timeout instance id in a ref, so we can clear the timeout later


  var timeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null); // Clears the timeout from memory

  var removeTimeout = function removeTimeout() {
    return clearTimeout(timeoutRef.current);
  };
  /**
   * useInterval hook provides a performant way to
   * update the state value at specific interval
   */


  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useInterval)(function () {
    if (action === "increment") {
      increment();
    }

    if (action === "decrement") {
      decrement();
    }
  }, isSpinning ? CONTINUOUS_CHANGE_INTERVAL : null); // Function to activate the spinning and increment the value

  var up = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    // increment the first fime
    if (runOnce) {
      increment();
    } // after a delay, keep incrementing at interval ("spinning up")


    timeoutRef.current = setTimeout(function () {
      setRunOnce(false);
      setIsSpinning(true);
      setAction("increment");
    }, CONTINUOUS_CHANGE_DELAY);
  }, [increment, runOnce]); // Function to activate the spinning and increment the value

  var down = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    // decrement the first fime
    if (runOnce) {
      decrement();
    } // after a delay, keep decrementing at interval ("spinning down")


    timeoutRef.current = setTimeout(function () {
      setRunOnce(false);
      setIsSpinning(true);
      setAction("decrement");
    }, CONTINUOUS_CHANGE_DELAY);
  }, [decrement, runOnce]); // Function to stop spinng (useful for mouseup, keyup handlers)

  var stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    setRunOnce(true);
    setIsSpinning(false);
    removeTimeout();
  }, []);
  /**
   * If the component unmounts while spinning,
   * let's clear the timeout as well
   */

  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useUnmountEffect)(removeTimeout);
  return {
    up: up,
    down: down,
    stop: stop
  };
}

var FLOATING_POINT_REGEX = /^[Ee0-9+\-.]$/;
/**
 * Determine if a character is a DOM floating point character
 * @see https://www.w3.org/TR/2012/WD-html-markup-20120329/datatypes.html#common.data.float
 */

function isFloatingPointNumericCharacter(character) {
  return FLOATING_POINT_REGEX.test(character);
}
/**
 * Determine if the event is a valid numeric keyboard event.
 * We use this so we can prevent non-number characters in the input
 */

function isValidNumericKeyboardEvent(event) {
  if (event.key == null) return true;
  var isModifierKey = event.ctrlKey || event.altKey || event.metaKey;

  if (isModifierKey) {
    return true;
  }

  var isSingleCharacterKey = event.key.length === 1;

  if (!isSingleCharacterKey) {
    return true;
  }

  return isFloatingPointNumericCharacter(event.key);
}

var _excluded$1 = ["focusInputOnChange", "clampValueOnBlur", "keepWithinRange", "min", "max", "step", "isReadOnly", "isDisabled", "isRequired", "getAriaValueText", "isInvalid", "pattern", "inputMode", "allowMouseWheel", "id", "onChange", "precision", "name", "aria-describedby", "aria-label", "aria-labelledby", "onFocus", "onBlur"];

var sanitize = function sanitize(value) {
  return value.split("").filter(isFloatingPointNumericCharacter).join("");
};
/**
 * React hook that implements the WAI-ARIA Spin Button widget
 * and used to create numeric input fields.
 *
 * It returns prop getters you can use to build your own
 * custom number inputs.
 *
 * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#spinbutton
 * @see Docs     https://www.chakra-ui.com/useNumberInput
 * @see WHATWG   https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number)
 */


function useNumberInput(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      _props$focusInputOnCh = _props.focusInputOnChange,
      focusInputOnChange = _props$focusInputOnCh === void 0 ? true : _props$focusInputOnCh,
      _props$clampValueOnBl = _props.clampValueOnBlur,
      clampValueOnBlur = _props$clampValueOnBl === void 0 ? true : _props$clampValueOnBl,
      _props$keepWithinRang = _props.keepWithinRange,
      keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang,
      _props$min = _props.min,
      min = _props$min === void 0 ? _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.minSafeInteger : _props$min,
      _props$max = _props.max,
      max = _props$max === void 0 ? _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.maxSafeInteger : _props$max,
      _props$step = _props.step,
      stepProp = _props$step === void 0 ? 1 : _props$step,
      isReadOnly = _props.isReadOnly,
      isDisabled = _props.isDisabled,
      isRequired = _props.isRequired,
      getAriaValueText = _props.getAriaValueText,
      isInvalid = _props.isInvalid,
      _props$pattern = _props.pattern,
      pattern = _props$pattern === void 0 ? "[0-9]*(.[0-9]+)?" : _props$pattern,
      _props$inputMode = _props.inputMode,
      inputMode = _props$inputMode === void 0 ? "decimal" : _props$inputMode,
      allowMouseWheel = _props.allowMouseWheel,
      id = _props.id;
      _props.onChange;
      _props.precision;
      var name = _props.name,
      ariaDescBy = _props["aria-describedby"],
      ariaLabel = _props["aria-label"],
      ariaLabelledBy = _props["aria-labelledby"],
      onFocus = _props.onFocus,
      onBlur = _props.onBlur,
      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);

  var onFocusProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef)(onFocus);
  var onBlurProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef)(onBlur);
  var getAriaValueTextProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef)(getAriaValueText);
  /**
   * Leverage the `useCounter` hook since it provides
   * the functionality to `increment`, `decrement` and `update`
   * counter values
   */

  var counter = (0,_chakra_ui_counter__WEBPACK_IMPORTED_MODULE_4__.useCounter)(props);
  var updateFn = counter.update,
      incrementFn = counter.increment,
      decrementFn = counter.decrement;
  /**
   * Keep track of the focused state of the input,
   * so user can this to change the styles of the
   * `spinners`, maybe :)
   */

  var _useBoolean = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useBoolean)(),
      isFocused = _useBoolean[0],
      setFocused = _useBoolean[1];

  var inputRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  /**
   * Sync state with uncontrolled form libraries like `react-hook-form`.
   */

  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useSafeLayoutEffect)(function () {
    if (!inputRef.current) return;
    var notInSync = inputRef.current.value != counter.value;

    if (notInSync) {
      counter.setValue(sanitize(inputRef.current.value));
    }
  }, []);
  var isInteractive = !(isReadOnly || isDisabled);
  var increment = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (step) {
    if (step === void 0) {
      step = stepProp;
    }

    if (isInteractive) {
      incrementFn(step);
    }
  }, [incrementFn, isInteractive, stepProp]);
  var decrement = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (step) {
    if (step === void 0) {
      step = stepProp;
    }

    if (isInteractive) {
      decrementFn(step);
    }
  }, [decrementFn, isInteractive, stepProp]);
  /**
   * Leverage the `useSpinner` hook to spin the input's value
   * when long press on the up and down buttons.
   *
   * This leverages `setInterval` internally
   */

  var spinner = useSpinner(increment, decrement);
  /**
   * The `onChange` handler filters out any character typed
   * that isn't floating point compatible.
   */

  var onChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    updateFn(sanitize(event.target.value));
  }, [updateFn]);
  var onKeyDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    /**
     * only allow valid numeric keys
     */
    if (!isValidNumericKeyboardEvent(event)) {
      event.preventDefault();
    }
    /**
     * Keyboard Accessibility
     *
     * We want to increase or decrease the input's value
     * based on if the user the arrow keys.
     *
     * @see https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-17
     */


    var stepFactor = getStepFactor(event) * stepProp;
    var eventKey = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.normalizeEventKey)(event);
    var keyMap = {
      ArrowUp: function ArrowUp() {
        return increment(stepFactor);
      },
      ArrowDown: function ArrowDown() {
        return decrement(stepFactor);
      },
      Home: function Home() {
        return updateFn(min);
      },
      End: function End() {
        return updateFn(max);
      }
    };
    var action = keyMap[eventKey];

    if (action) {
      event.preventDefault();
      action(event);
    }
  }, [updateFn, decrement, increment, max, min, stepProp]);

  var getStepFactor = function getStepFactor(event) {
    var ratio = 1;

    if (event.metaKey || event.ctrlKey) {
      ratio = 0.1;
    }

    if (event.shiftKey) {
      ratio = 10;
    }

    return ratio;
  };
  /**
   * If user would like to use a human-readable representation
   * of the value, rather than the value itself they can pass `getAriaValueText`
   *
   * @see https://www.w3.org/TR/wai-aria-practices-1.1/#wai-aria-roles-states-and-properties-18
   * @see https://www.w3.org/TR/wai-aria-1.1/#aria-valuetext
   */


  var ariaValueText = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    var text = getAriaValueTextProp == null ? void 0 : getAriaValueTextProp(counter.value);

    if (!(0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isNull)(text)) {
      return text;
    }

    var defaultText = counter.value.toString(); // empty string is an invalid ARIA attribute value

    return !defaultText ? undefined : defaultText;
  }, [counter.value, getAriaValueTextProp]);
  /**
   * Function that clamps the input's value on blur
   */

  var validateAndClamp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    var next = counter.value;
    if (next === "") return;

    if (counter.valueAsNumber < min) {
      next = min;
    }

    if (counter.valueAsNumber > max) {
      next = max;
    }
    /**
     * `counter.cast` does 2 things:
     *
     * - sanitize the value by using parseFloat and some Regex
     * - used to round value to computed precision or decimal points
     */


    counter.cast(next);
  }, [counter, max, min]);
  var onInputBlur = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    setFocused.off();

    if (clampValueOnBlur) {
      validateAndClamp();
    }
  }, [clampValueOnBlur, setFocused, validateAndClamp]);
  var focusInput = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    if (focusInputOnChange) {
      (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.focus)(inputRef.current, {
        nextTick: true
      });
    }
  }, [focusInputOnChange]);
  var spinUp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    event.preventDefault();
    spinner.up();
    focusInput();
  }, [focusInput, spinner]);
  var spinDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    event.preventDefault();
    spinner.down();
    focusInput();
  }, [focusInput, spinner]);
  var pointerDown = _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.isBrowser && !!document.documentElement.ontouchstart ? "onTouchStart" : "onMouseDown";
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useEventListener)("wheel", function (event) {
    var isInputFocused = document.activeElement === inputRef.current;
    if (!allowMouseWheel || !isInputFocused) return;
    event.preventDefault();
    var stepFactor = getStepFactor(event) * stepProp;
    var direction = Math.sign(event.deltaY);

    if (direction === -1) {
      increment(stepFactor);
    } else if (direction === 1) {
      decrement(stepFactor);
    }
  }, inputRef.current, {
    passive: false
  });
  var getIncrementButtonProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (props, ref) {
    var _extends2;

    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    var disabled = isDisabled || keepWithinRange && counter.isAtMax;
    return _extends({}, props, (_extends2 = {
      ref: ref,
      role: "button",
      tabIndex: -1
    }, _extends2[pointerDown] = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props[pointerDown], spinUp), _extends2.onMouseUp = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onMouseUp, spinner.stop), _extends2.onMouseLeave = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onMouseUp, spinner.stop), _extends2.onTouchEnd = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onTouchEnd, spinner.stop), _extends2.disabled = disabled, _extends2["aria-disabled"] = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.ariaAttr)(disabled), _extends2));
  }, [pointerDown, counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]);
  var getDecrementButtonProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (props, ref) {
    var _extends3;

    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    var disabled = isDisabled || keepWithinRange && counter.isAtMin;
    return _extends({}, props, (_extends3 = {
      ref: ref,
      role: "button",
      tabIndex: -1
    }, _extends3[pointerDown] = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props[pointerDown], spinDown), _extends3.onMouseLeave = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onMouseLeave, spinner.stop), _extends3.onMouseUp = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onMouseUp, spinner.stop), _extends3.onTouchEnd = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onTouchEnd, spinner.stop), _extends3.disabled = disabled, _extends3["aria-disabled"] = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.ariaAttr)(disabled), _extends3));
  }, [pointerDown, counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]);
  var getInputProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (props, ref) {
    var _props$readOnly, _props$readOnly2, _props$required, _props$required2;

    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({
      name: name,
      inputMode: inputMode,
      type: "text",
      pattern: pattern,
      "aria-labelledby": ariaLabelledBy,
      "aria-label": ariaLabel,
      "aria-describedby": ariaDescBy,
      id: id,
      disabled: isDisabled
    }, props, {
      readOnly: (_props$readOnly = props.readOnly) != null ? _props$readOnly : isReadOnly,
      "aria-readonly": (_props$readOnly2 = props.readOnly) != null ? _props$readOnly2 : isReadOnly,
      "aria-required": (_props$required = props.required) != null ? _props$required : isRequired,
      required: (_props$required2 = props.required) != null ? _props$required2 : isRequired,
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_5__.mergeRefs)(inputRef, ref),
      value: counter.value,
      role: "spinbutton",
      "aria-valuemin": min,
      "aria-valuemax": max,
      "aria-valuenow": Number.isNaN(counter.valueAsNumber) ? undefined : counter.valueAsNumber,
      "aria-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.ariaAttr)(isInvalid != null ? isInvalid : counter.isOutOfRange),
      "aria-valuetext": ariaValueText,
      autoComplete: "off",
      autoCorrect: "off",
      onChange: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onChange, onChange),
      onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onKeyDown, onKeyDown),
      onFocus: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onFocus, onFocusProp, setFocused.on),
      onBlur: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.callAllHandlers)(props.onBlur, onBlurProp, onInputBlur)
    });
  }, [name, inputMode, pattern, ariaLabelledBy, ariaLabel, ariaDescBy, id, isDisabled, isRequired, isReadOnly, isInvalid, counter.value, counter.valueAsNumber, counter.isOutOfRange, min, max, ariaValueText, onChange, onKeyDown, onFocusProp, setFocused.on, onBlurProp, onInputBlur]);
  return {
    value: counter.value,
    valueAsNumber: counter.valueAsNumber,
    isFocused: isFocused,
    isDisabled: isDisabled,
    isReadOnly: isReadOnly,
    getIncrementButtonProps: getIncrementButtonProps,
    getDecrementButtonProps: getDecrementButtonProps,
    getInputProps: getInputProps,
    htmlProps: htmlProps
  };
}

var _excluded = ["htmlProps"];

/**
 * React context used to communicate between components
 */
var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_5__.createContext)({
  name: "NumberInputContext",
  errorMessage: "useNumberInputContext: `context` is undefined. Seems you forgot to wrap number-input's components within <NumberInput />"
}),
    NumberInputProvider = _createContext[0],
    useNumberInputContext = _createContext[1];

/**
 * NumberInput
 *
 * React component that provides context and logic to all
 * number input sub-components.
 *
 * It renders a `div` by default.
 *
 * @see Docs http://chakra-ui.com/numberinput
 */
var NumberInput = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useMultiStyleConfig)("NumberInput", props);
  var ownProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.omitThemingProps)(props);
  var controlProps = (0,_chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_7__.useFormControlProps)(ownProps);

  var _useNumberInput = useNumberInput(controlProps),
      htmlProps = _useNumberInput.htmlProps,
      context = _objectWithoutPropertiesLoose(_useNumberInput, _excluded);

  var ctx = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return context;
  }, [context]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(NumberInputProvider, {
    value: ctx
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.chakra.div, _extends({}, htmlProps, {
    ref: ref,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-numberinput", props.className),
    __css: _extends({
      position: "relative",
      zIndex: 0
    }, styles.root)
  }))));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  NumberInput.displayName = "NumberInput";
}

/**
 * NumberInputStepper
 *
 * React component used to group the increment and decrement
 * button spinners.
 *
 * It renders a `div` by default.
 *
 * @see Docs http://chakra-ui.com/components/number-input
 */
var NumberInputStepper = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.chakra.div, _extends({
    "aria-hidden": true,
    ref: ref
  }, props, {
    __css: _extends({
      display: "flex",
      flexDirection: "column",
      position: "absolute",
      top: "0",
      insetEnd: "0px",
      margin: "1px",
      height: "calc(100% - 2px)",
      zIndex: 1
    }, styles.stepperGroup)
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  NumberInputStepper.displayName = "NumberInputStepper";
}

/**
 * NumberInputField
 *
 * React component that represents the actual `input` field
 * where users can type to edit numeric values.
 *
 * It renders an `input` by default and ensures only numeric
 * values can be typed.
 *
 * @see Docs http://chakra-ui.com/numberinput
 */
var NumberInputField = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var _useNumberInputContex = useNumberInputContext(),
      getInputProps = _useNumberInputContex.getInputProps;

  var input = getInputProps(props, ref);
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.chakra.input, _extends({}, input, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-numberinput__field", props.className),
    __css: _extends({
      width: "100%"
    }, styles.field)
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  NumberInputField.displayName = "NumberInputField";
}

var StyledStepper = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.chakra)("div", {
  baseStyle: {
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    flex: 1,
    transitionProperty: "common",
    transitionDuration: "normal",
    userSelect: "none",
    cursor: "pointer",
    lineHeight: "normal"
  }
});

/**
 * NumberDecrementStepper
 *
 * React component used to decrement the number input's value
 *
 * It renders a `div` with `role=button` by default
 */
var NumberDecrementStepper = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var _props$children;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useStyles)();

  var _useNumberInputContex2 = useNumberInputContext(),
      getDecrementButtonProps = _useNumberInputContex2.getDecrementButtonProps;

  var decrement = getDecrementButtonProps(props, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledStepper, _extends({}, decrement, {
    __css: styles.stepper
  }), (_props$children = props.children) != null ? _props$children : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(TriangleDownIcon, null));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  NumberDecrementStepper.displayName = "NumberDecrementStepper";
}

/**
 * NumberIncrementStepper
 *
 * React component used to increment the number input's value
 *
 * It renders a `div` with `role=button` by default
 */
var NumberIncrementStepper = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var _props$children2;

  var _useNumberInputContex3 = useNumberInputContext(),
      getIncrementButtonProps = _useNumberInputContex3.getIncrementButtonProps;

  var increment = getIncrementButtonProps(props, ref);
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledStepper, _extends({}, increment, {
    __css: styles.stepper
  }), (_props$children2 = props.children) != null ? _props$children2 : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(TriangleUpIcon, null));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  NumberIncrementStepper.displayName = "NumberIncrementStepper";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/pin-input/dist/chakra-ui-pin-input.esm.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@chakra-ui/pin-input/dist/chakra-ui-pin-input.esm.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PinInput": () => (/* binding */ PinInput),
/* harmony export */   "PinInputDescendantsProvider": () => (/* binding */ PinInputDescendantsProvider),
/* harmony export */   "PinInputField": () => (/* binding */ PinInputField),
/* harmony export */   "PinInputProvider": () => (/* binding */ PinInputProvider),
/* harmony export */   "usePinInput": () => (/* binding */ usePinInput),
/* harmony export */   "usePinInputContext": () => (/* binding */ usePinInputContext),
/* harmony export */   "usePinInputDescendant": () => (/* binding */ usePinInputDescendant),
/* harmony export */   "usePinInputDescendants": () => (/* binding */ usePinInputDescendants),
/* harmony export */   "usePinInputDescendantsContext": () => (/* binding */ usePinInputDescendantsContext),
/* harmony export */   "usePinInputField": () => (/* binding */ usePinInputField)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_descendant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/descendant */ "./node_modules/@chakra-ui/descendant/dist/chakra-ui-descendant.esm.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");







function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded$1 = ["index"];
/* -------------------------------------------------------------------------------------------------
 * Create context to track descendants and their indices
 * -----------------------------------------------------------------------------------------------*/

var _createDescendantCont = (0,_chakra_ui_descendant__WEBPACK_IMPORTED_MODULE_1__.createDescendantContext)(),
    PinInputDescendantsProvider = _createDescendantCont[0],
    usePinInputDescendantsContext = _createDescendantCont[1],
    usePinInputDescendants = _createDescendantCont[2],
    usePinInputDescendant = _createDescendantCont[3];

var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__.createContext)({
  name: "PinInputContext",
  errorMessage: "usePinInputContext: `context` is undefined. Seems you forgot to all pin input fields within `<PinInput />`"
}),
    PinInputProvider = _createContext[0],
    usePinInputContext = _createContext[1];

var toArray = function toArray(value) {
  return value == null ? void 0 : value.split("");
};

function validate(value, type) {
  var NUMERIC_REGEX = /^[0-9]+$/;
  var ALPHA_NUMERIC_REGEX = /^[a-zA-Z0-9]+$/i;
  var regex = type === "alphanumeric" ? ALPHA_NUMERIC_REGEX : NUMERIC_REGEX;
  return regex.test(value);
}
/* -------------------------------------------------------------------------------------------------
 * usePinInput - handles the general pin input logic
 * -----------------------------------------------------------------------------------------------*/

/**
 * @internal
 */


function usePinInput(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      autoFocus = _props.autoFocus,
      value = _props.value,
      defaultValue = _props.defaultValue,
      _onChange = _props.onChange,
      onComplete = _props.onComplete,
      _props$placeholder = _props.placeholder,
      placeholder = _props$placeholder === void 0 ? "○" : _props$placeholder,
      _props$manageFocus = _props.manageFocus,
      manageFocus = _props$manageFocus === void 0 ? true : _props$manageFocus,
      _props$otp = _props.otp,
      otp = _props$otp === void 0 ? false : _props$otp,
      idProp = _props.id,
      isDisabled = _props.isDisabled,
      isInvalid = _props.isInvalid,
      _props$type = _props.type,
      type = _props$type === void 0 ? "number" : _props$type,
      mask = _props.mask;
  var uuid = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_3__.useId)();
  var id = idProp != null ? idProp : "pin-input-" + uuid;
  var descendants = usePinInputDescendants();

  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(true),
      moveFocus = _React$useState[0],
      setMoveFocus = _React$useState[1];

  var _React$useState2 = react__WEBPACK_IMPORTED_MODULE_0__.useState(-1),
      focusedIndex = _React$useState2[0],
      setFocusedIndex = _React$useState2[1];

  var _useControllableState = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_3__.useControllableState)({
    defaultValue: toArray(defaultValue) || [],
    value: toArray(value),
    onChange: function onChange(values) {
      return _onChange == null ? void 0 : _onChange(values.join(""));
    }
  }),
      values = _useControllableState[0],
      setValues = _useControllableState[1];

  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    if (autoFocus) {
      var first = descendants.first();
      if (first) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.focus)(first.node, {
        nextTick: true
      });
    } // We don't want to listen for updates to `autoFocus` since it only runs initially
    // eslint-disable-next-line

  }, [descendants]);
  var focusNext = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (index) {
    if (!moveFocus || !manageFocus) return;
    var next = descendants.next(index, false);
    if (next) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.focus)(next.node, {
      nextTick: true
    });
  }, [descendants, moveFocus, manageFocus]);
  var setValue = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (value, index) {
    var nextValues = [].concat(values);
    nextValues[index] = value;
    setValues(nextValues);
    var isComplete = value !== "" && nextValues.length === descendants.count() && nextValues.every(function (inputValue) {
      return inputValue != null && inputValue !== "";
    });

    if (isComplete) {
      onComplete == null ? void 0 : onComplete(nextValues.join(""));
    } else {
      focusNext(index);
    }
  }, [values, setValues, focusNext, onComplete, descendants]);
  var clear = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    var values = Array(descendants.count()).fill("");
    setValues(values);
    var first = descendants.first();
    if (first) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.focus)(first.node);
  }, [descendants, setValues]);
  var getNextValue = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (value, eventValue) {
    var nextValue = eventValue;

    if ((value == null ? void 0 : value.length) > 0) {
      if (value[0] === eventValue.charAt(0)) {
        nextValue = eventValue.charAt(1);
      } else if (value[0] === eventValue.charAt(1)) {
        nextValue = eventValue.charAt(0);
      }
    }

    return nextValue;
  }, []);
  var getInputProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (props) {
    var index = props.index,
        rest = _objectWithoutPropertiesLoose(props, _excluded$1);
    /**
     * Improved from: https://github.com/uber/baseweb/blob/master/src/pin-code/pin-code.js
     */


    var onChange = function onChange(event) {
      var eventValue = event.target.value;
      var currentValue = values[index];
      var nextValue = getNextValue(currentValue, eventValue); // if the value was removed using backspace

      if (nextValue === "") {
        setValue("", index);
        return;
      } // in the case of an autocomplete or copy and paste


      if (eventValue.length > 2) {
        // see if we can use the string to fill out our values
        if (validate(eventValue, type)) {
          // Ensure the value matches the number of inputs
          var _nextValue = eventValue.split("").filter(function (_, index) {
            return index < descendants.count();
          });

          setValues(_nextValue); // if pasting fills the entire input fields, trigger `onComplete`

          if (_nextValue.length === descendants.count()) {
            onComplete == null ? void 0 : onComplete(_nextValue.join(""));
          }
        }
      } else {
        // only set if the new value is a number
        if (validate(nextValue, type)) {
          setValue(nextValue, index);
        }

        setMoveFocus(true);
      }
    };

    var onKeyDown = function onKeyDown(event) {
      if (event.key === "Backspace" && manageFocus) {
        if (event.target.value === "") {
          var prevInput = descendants.prev(index, false);

          if (prevInput) {
            setValue("", index - 1);
            (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.focus)(prevInput.node);
            setMoveFocus(true);
          }
        } else {
          setMoveFocus(false);
        }
      }
    };

    var onFocus = function onFocus() {
      setFocusedIndex(index);
    };

    var onBlur = function onBlur() {
      setFocusedIndex(-1);
    };

    var hasFocus = focusedIndex === index;
    var inputType = type === "number" ? "tel" : "text";
    return _extends({
      "aria-label": "Please enter your pin code",
      inputMode: type === "number" ? "numeric" : "text",
      type: mask ? "password" : inputType
    }, rest, {
      id: id + "-" + index,
      disabled: isDisabled,
      "aria-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.ariaAttr)(isInvalid),
      onChange: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.callAllHandlers)(rest.onChange, onChange),
      onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.callAllHandlers)(rest.onKeyDown, onKeyDown),
      onFocus: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.callAllHandlers)(rest.onFocus, onFocus),
      onBlur: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.callAllHandlers)(rest.onBlur, onBlur),
      value: values[index] || "",
      autoComplete: otp ? "one-time-code" : "off",
      placeholder: hasFocus ? "" : placeholder
    });
  }, [descendants, focusedIndex, getNextValue, id, isDisabled, mask, isInvalid, manageFocus, onComplete, otp, placeholder, setValue, setValues, type, values]);
  return {
    // prop getter
    getInputProps: getInputProps,
    // state
    id: id,
    descendants: descendants,
    values: values,
    // actions
    setValue: setValue,
    setValues: setValues,
    clear: clear
  };
}

/**
 * @internal
 */
function usePinInputField(props, ref) {
  if (props === void 0) {
    props = {};
  }

  if (ref === void 0) {
    ref = null;
  }

  var _usePinInputContext = usePinInputContext(),
      getInputProps = _usePinInputContext.getInputProps;

  var _usePinInputDescendan = usePinInputDescendant(),
      index = _usePinInputDescendan.index,
      register = _usePinInputDescendan.register;

  return getInputProps(_extends({}, props, {
    ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__.mergeRefs)(register, ref),
    index: index
  }));
}

var _excluded = ["children"],
    _excluded2 = ["descendants"];
var PinInput = function PinInput(props) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.useStyleConfig)("PinInput", props);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.omitThemingProps)(props),
      children = _omitThemingProps.children,
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);

  var _usePinInput = usePinInput(rest),
      descendants = _usePinInput.descendants,
      context = _objectWithoutPropertiesLoose(_usePinInput, _excluded2);

  var clones = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_2__.getValidChildren)(children).map(function (child) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
      __css: styles
    });
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(PinInputDescendantsProvider, {
    value: descendants
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(PinInputProvider, {
    value: context
  }, clones));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  PinInput.displayName = "PinInput";
}

var PinInputField = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function (props, ref) {
  var inputProps = usePinInputField(props, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.chakra.input, _extends({}, inputProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-pin-input", props.className)
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  PinInputField.displayName = "PinInputField";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/popover/dist/chakra-ui-popover.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@chakra-ui/popover/dist/chakra-ui-popover.esm.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Popover": () => (/* binding */ Popover),
/* harmony export */   "PopoverAnchor": () => (/* binding */ PopoverAnchor),
/* harmony export */   "PopoverArrow": () => (/* binding */ PopoverArrow),
/* harmony export */   "PopoverBody": () => (/* binding */ PopoverBody),
/* harmony export */   "PopoverCloseButton": () => (/* binding */ PopoverCloseButton),
/* harmony export */   "PopoverContent": () => (/* binding */ PopoverContent),
/* harmony export */   "PopoverFooter": () => (/* binding */ PopoverFooter),
/* harmony export */   "PopoverHeader": () => (/* binding */ PopoverHeader),
/* harmony export */   "PopoverTrigger": () => (/* binding */ PopoverTrigger),
/* harmony export */   "usePopover": () => (/* binding */ usePopover),
/* harmony export */   "usePopoverContext": () => (/* binding */ usePopoverContext)
/* harmony export */ });
/* harmony import */ var _chakra_ui_close_button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @chakra-ui/close-button */ "./node_modules/@chakra-ui/close-button/dist/chakra-ui-close-button.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/lodash.mergewith/index.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");
/* harmony import */ var _chakra_ui_popper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/popper */ "./node_modules/@chakra-ui/popper/dist/chakra-ui-popper.esm.js");










function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_1__.createContext)({
  name: "PopoverContext",
  errorMessage: "usePopoverContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Popover />`"
}),
    PopoverProvider = _createContext[0],
    usePopoverContext = _createContext[1];

var mergeVariants = function mergeVariants(variants) {
  if (!variants) return;
  return _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2___default()(variants, {
    enter: {
      visibility: "visible"
    },
    exit: {
      transitionEnd: {
        visibility: "hidden"
      }
    }
  });
};

var scaleFade = {
  exit: {
    opacity: 0,
    scale: 0.95,
    transition: {
      duration: 0.1,
      ease: [0.4, 0, 1, 1]
    }
  },
  enter: {
    scale: 1,
    opacity: 1,
    transition: {
      duration: 0.15,
      ease: [0, 0, 0.2, 1]
    }
  }
};
var Section = (0,framer_motion__WEBPACK_IMPORTED_MODULE_3__.motion)(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.section);
var PopoverTransition = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) {
  var _usePopoverContext = usePopoverContext(),
      isOpen = _usePopoverContext.isOpen;

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Section, _extends({
    ref: ref,
    variants: mergeVariants(props.variants)
  }, props, {
    initial: false,
    animate: isOpen ? "enter" : "exit"
  }));
});
PopoverTransition.defaultProps = {
  variants: scaleFade
};

var _excluded$1 = ["closeOnBlur", "closeOnEsc", "initialFocusRef", "id", "returnFocusOnClose", "autoFocus", "arrowSize", "arrowShadowColor", "trigger", "openDelay", "closeDelay", "isLazy", "lazyBehavior", "computePositionOnMount"];
var TRIGGER = {
  click: "click",
  hover: "hover"
};

/**
 * @internal
 */
function usePopover(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      _props$closeOnBlur = _props.closeOnBlur,
      closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur,
      _props$closeOnEsc = _props.closeOnEsc,
      closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc,
      initialFocusRef = _props.initialFocusRef,
      id = _props.id,
      _props$returnFocusOnC = _props.returnFocusOnClose,
      returnFocusOnClose = _props$returnFocusOnC === void 0 ? true : _props$returnFocusOnC,
      _props$autoFocus = _props.autoFocus,
      autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,
      arrowSize = _props.arrowSize,
      arrowShadowColor = _props.arrowShadowColor,
      _props$trigger = _props.trigger,
      trigger = _props$trigger === void 0 ? TRIGGER.click : _props$trigger,
      _props$openDelay = _props.openDelay,
      openDelay = _props$openDelay === void 0 ? 200 : _props$openDelay,
      _props$closeDelay = _props.closeDelay,
      closeDelay = _props$closeDelay === void 0 ? 200 : _props$closeDelay,
      isLazy = _props.isLazy,
      _props$lazyBehavior = _props.lazyBehavior,
      lazyBehavior = _props$lazyBehavior === void 0 ? "unmount" : _props$lazyBehavior,
      computePositionOnMount = _props.computePositionOnMount,
      popperProps = _objectWithoutPropertiesLoose(_props, _excluded$1);

  var _useDisclosure = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_5__.useDisclosure)(props),
      isOpen = _useDisclosure.isOpen,
      onClose = _useDisclosure.onClose,
      onOpen = _useDisclosure.onOpen,
      onToggle = _useDisclosure.onToggle;

  var anchorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var triggerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var popoverRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var isHoveringRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);
  var hasBeenOpened = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);

  if (isOpen) {
    hasBeenOpened.current = true;
  }

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
      hasHeader = _useState[0],
      setHasHeader = _useState[1];

  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
      hasBody = _useState2[0],
      setHasBody = _useState2[1];

  var _useIds = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_5__.useIds)(id, "popover-trigger", "popover-content", "popover-header", "popover-body"),
      triggerId = _useIds[0],
      popoverId = _useIds[1],
      headerId = _useIds[2],
      bodyId = _useIds[3];

  var _usePopper = (0,_chakra_ui_popper__WEBPACK_IMPORTED_MODULE_6__.usePopper)(_extends({}, popperProps, {
    enabled: isOpen || !!computePositionOnMount
  })),
      referenceRef = _usePopper.referenceRef,
      getArrowProps = _usePopper.getArrowProps,
      getPopperProps = _usePopper.getPopperProps,
      getArrowInnerProps = _usePopper.getArrowInnerProps,
      forceUpdate = _usePopper.forceUpdate;

  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_5__.useFocusOnPointerDown)({
    enabled: isOpen,
    ref: triggerRef
  });
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_5__.useFocusOnHide)(popoverRef, {
    focusRef: triggerRef,
    visible: isOpen,
    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click
  });
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_5__.useFocusOnShow)(popoverRef, {
    focusRef: initialFocusRef,
    visible: isOpen,
    shouldFocus: autoFocus && trigger === TRIGGER.click
  });
  var shouldRenderChildren = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.determineLazyBehavior)({
    hasBeenSelected: hasBeenOpened.current,
    isLazy: isLazy,
    lazyBehavior: lazyBehavior,
    isSelected: isOpen
  });
  var getPopoverProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, _ref) {
    var _extends2;

    if (props === void 0) {
      props = {};
    }

    if (_ref === void 0) {
      _ref = null;
    }

    var popoverProps = _extends({}, props, {
      style: _extends({}, props.style, (_extends2 = {
        transformOrigin: _chakra_ui_popper__WEBPACK_IMPORTED_MODULE_6__.popperCSSVars.transformOrigin.varRef
      }, _extends2[_chakra_ui_popper__WEBPACK_IMPORTED_MODULE_6__.popperCSSVars.arrowSize["var"]] = arrowSize ? (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.px)(arrowSize) : undefined, _extends2[_chakra_ui_popper__WEBPACK_IMPORTED_MODULE_6__.popperCSSVars.arrowShadowColor["var"]] = arrowShadowColor, _extends2)),
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_1__.mergeRefs)(popoverRef, _ref),
      children: shouldRenderChildren ? props.children : null,
      id: popoverId,
      tabIndex: -1,
      role: "dialog",
      onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onKeyDown, function (event) {
        if (closeOnEsc && event.key === "Escape") {
          onClose();
        }
      }),
      onBlur: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onBlur, function (event) {
        var relatedTarget = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.getRelatedTarget)(event);
        var targetIsPopover = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.contains)(popoverRef.current, relatedTarget);
        var targetIsTrigger = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.contains)(triggerRef.current, relatedTarget);
        var isValidBlur = !targetIsPopover && !targetIsTrigger;

        if (isOpen && closeOnBlur && isValidBlur) {
          onClose();
        }
      }),
      "aria-labelledby": hasHeader ? headerId : undefined,
      "aria-describedby": hasBody ? bodyId : undefined
    });

    if (trigger === TRIGGER.hover) {
      popoverProps.role = "tooltip";
      popoverProps.onMouseEnter = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onMouseEnter, function () {
        isHoveringRef.current = true;
      });
      popoverProps.onMouseLeave = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onMouseLeave, function () {
        isHoveringRef.current = false;
        setTimeout(onClose, closeDelay);
      });
    }

    return popoverProps;
  }, [shouldRenderChildren, popoverId, hasHeader, headerId, hasBody, bodyId, trigger, closeOnEsc, onClose, isOpen, closeOnBlur, closeDelay, arrowShadowColor, arrowSize]);
  var getPopoverPositionerProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, forwardedRef) {
    if (props === void 0) {
      props = {};
    }

    if (forwardedRef === void 0) {
      forwardedRef = null;
    }

    return getPopperProps(_extends({}, props, {
      style: _extends({
        visibility: isOpen ? "visible" : "hidden"
      }, props.style)
    }), forwardedRef);
  }, [isOpen, getPopperProps]);
  var getAnchorProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, _ref) {
    if (_ref === void 0) {
      _ref = null;
    }

    var anchorProps = _extends({}, props, {
      // If anchor is rendered, it is used as reference.
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_1__.mergeRefs)(_ref, anchorRef, referenceRef)
    });

    return anchorProps;
  }, [anchorRef, referenceRef]);
  var openTimeout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var closeTimeout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var maybeReferenceRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (node) {
    // Don't override referenceRef in case the PopoverAnchor is rendered.
    if (anchorRef.current == null) {
      referenceRef(node);
    }
  }, [referenceRef]);
  var getTriggerProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, _ref) {
    if (props === void 0) {
      props = {};
    }

    if (_ref === void 0) {
      _ref = null;
    }

    var triggerProps = _extends({}, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_1__.mergeRefs)(triggerRef, _ref, maybeReferenceRef),
      id: triggerId,
      "aria-haspopup": "dialog",
      "aria-expanded": isOpen,
      "aria-controls": popoverId
    });

    if (trigger === TRIGGER.click) {
      triggerProps.onClick = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onClick, onToggle);
    }

    if (trigger === TRIGGER.hover) {
      /**
       * Any content that shows on pointer hover should also show on keyboard focus.
       * Consider focus and blur to be the `hover` for keyboard users.
       *
       * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html
       */
      triggerProps.onFocus = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onFocus, onOpen);
      triggerProps.onBlur = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onBlur, function (event) {
        var relatedTarget = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.getRelatedTarget)(event);
        var isValidBlur = !(0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.contains)(popoverRef.current, relatedTarget);

        if (isOpen && closeOnBlur && isValidBlur) {
          onClose();
        }
      });
      /**
       * Any content that shows on hover or focus must be dismissible.
       * This case pressing `Escape` will dismiss the popover
       */

      triggerProps.onKeyDown = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onKeyDown, function (event) {
        if (event.key === "Escape") {
          onClose();
        }
      });
      triggerProps.onMouseEnter = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onMouseEnter, function () {
        isHoveringRef.current = true;
        openTimeout.current = window.setTimeout(onOpen, openDelay);
      });
      triggerProps.onMouseLeave = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.callAllHandlers)(props.onMouseLeave, function () {
        isHoveringRef.current = false;

        if (openTimeout.current) {
          clearTimeout(openTimeout.current);
          openTimeout.current = undefined;
        }

        closeTimeout.current = window.setTimeout(function () {
          if (isHoveringRef.current === false) {
            onClose();
          }
        }, closeDelay);
      });
    }

    return triggerProps;
  }, [triggerId, isOpen, popoverId, trigger, maybeReferenceRef, onToggle, onOpen, closeOnBlur, onClose, openDelay, closeDelay]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    return function () {
      if (openTimeout.current) {
        clearTimeout(openTimeout.current);
      }

      if (closeTimeout.current) {
        clearTimeout(closeTimeout.current);
      }
    };
  }, []);
  var getHeaderProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      id: headerId,
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_1__.mergeRefs)(ref, function (node) {
        setHasHeader(!!node);
      })
    });
  }, [headerId]);
  var getBodyProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      id: bodyId,
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_1__.mergeRefs)(ref, function (node) {
        setHasBody(!!node);
      })
    });
  }, [bodyId]);
  return {
    forceUpdate: forceUpdate,
    isOpen: isOpen,
    onClose: onClose,
    getAnchorProps: getAnchorProps,
    getArrowProps: getArrowProps,
    getArrowInnerProps: getArrowInnerProps,
    getPopoverPositionerProps: getPopoverPositionerProps,
    getPopoverProps: getPopoverProps,
    getTriggerProps: getTriggerProps,
    getHeaderProps: getHeaderProps,
    getBodyProps: getBodyProps
  };
}

var _excluded = ["children"],
    _excluded2 = ["rootProps"];

/**
 * Popover is used to bring attention to specific user interface elements,
 * typically to suggest an action or to guide users through a new experience.
 */
var Popover = function Popover(props) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useMultiStyleConfig)("Popover", props);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.omitThemingProps)(props),
      children = _omitThemingProps.children,
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);

  var theme = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useTheme)();
  var context = usePopover(_extends({}, rest, {
    direction: theme.direction
  }));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(PopoverProvider, {
    value: context
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.StylesProvider, {
    value: styles
  }, (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.runIfFn)(children, {
    isOpen: context.isOpen,
    onClose: context.onClose,
    forceUpdate: context.forceUpdate
  })));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  Popover.displayName = "Popover";
}
/**
 * PopoverAnchor is element that is used as the positioning reference
 * for the popover.
 */


var PopoverAnchor = function PopoverAnchor(props) {
  // enforce a single child
  var child = react__WEBPACK_IMPORTED_MODULE_0__.Children.only(props.children);

  var _usePopoverContext = usePopoverContext(),
      getAnchorProps = _usePopoverContext.getAnchorProps;

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, getAnchorProps(child.props, child.ref));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  PopoverAnchor.displayName = "PopoverAnchor";
}
/**
 * PopoverTrigger opens the popover's content. It must be an interactive element
 * such as `button` or `a`.
 */


var PopoverTrigger = function PopoverTrigger(props) {
  // enforce a single child
  var child = react__WEBPACK_IMPORTED_MODULE_0__.Children.only(props.children);

  var _usePopoverContext2 = usePopoverContext(),
      getTriggerProps = _usePopoverContext2.getTriggerProps;

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, getTriggerProps(child.props, child.ref));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  PopoverTrigger.displayName = "PopoverTrigger";
}

var PopoverContent = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var rootProps = props.rootProps,
      contentProps = _objectWithoutPropertiesLoose(props, _excluded2);

  var _usePopoverContext3 = usePopoverContext(),
      getPopoverProps = _usePopoverContext3.getPopoverProps,
      getPopoverPositionerProps = _usePopoverContext3.getPopoverPositionerProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();

  var contentStyles = _extends({
    position: "relative",
    display: "flex",
    flexDirection: "column"
  }, styles.content);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, getPopoverPositionerProps(rootProps), {
    __css: styles.popper,
    className: "chakra-popover__popper"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(PopoverTransition, _extends({}, getPopoverProps(contentProps, ref), {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-popover__content", props.className),
    __css: contentStyles
  })));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  PopoverContent.displayName = "PopoverContent";
}

/**
 * PopoverHeader is the accessible header or label
 * for the popover's content and it is first announced by screenreaders.
 */
var PopoverHeader = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _usePopoverContext4 = usePopoverContext(),
      getHeaderProps = _usePopoverContext4.getHeaderProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.header, _extends({}, getHeaderProps(props, ref), {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-popover__header", props.className),
    __css: styles.header
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  PopoverHeader.displayName = "PopoverHeader";
}

/**
 * PopoverBody is the main content area for the popover. Should contain
 * at least one interactive element.
 */
var PopoverBody = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _usePopoverContext5 = usePopoverContext(),
      getBodyProps = _usePopoverContext5.getBodyProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, getBodyProps(props, ref), {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-popover__body", props.className),
    __css: styles.body
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  PopoverBody.displayName = "PopoverBody";
}

var PopoverFooter = function PopoverFooter(props) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.footer, _extends({}, props, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-popover__footer", props.className),
    __css: styles.footer
  }));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  PopoverFooter.displayName = "PopoverFooter";
}

var PopoverCloseButton = function PopoverCloseButton(props) {
  var _usePopoverContext6 = usePopoverContext(),
      onClose = _usePopoverContext6.onClose;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_close_button__WEBPACK_IMPORTED_MODULE_8__.CloseButton, _extends({
    size: "sm",
    onClick: onClose,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-popover__close-btn", props.className),
    __css: styles.closeButton
  }, props));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  PopoverCloseButton.displayName = "PopoverCloseButton";
}

var PopoverArrow = function PopoverArrow(props) {
  var _ref;

  var bg = props.bg,
      bgColor = props.bgColor,
      backgroundColor = props.backgroundColor;

  var _usePopoverContext7 = usePopoverContext(),
      getArrowProps = _usePopoverContext7.getArrowProps,
      getArrowInnerProps = _usePopoverContext7.getArrowInnerProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  var arrowBg = (_ref = bg != null ? bg : bgColor) != null ? _ref : backgroundColor;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, getArrowProps(), {
    className: "chakra-popover__arrow-positioner"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.cx)("chakra-popover__arrow", props.className)
  }, getArrowInnerProps(props), {
    __css: _extends({}, styles.arrow, {
      "--popper-arrow-bg": arrowBg ? "colors." + arrowBg + ", " + arrowBg : undefined
    })
  })));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {
  PopoverArrow.displayName = "PopoverArrow";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/progress/dist/chakra-ui-progress.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@chakra-ui/progress/dist/chakra-ui-progress.esm.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CircularProgress": () => (/* binding */ CircularProgress),
/* harmony export */   "CircularProgressLabel": () => (/* binding */ CircularProgressLabel),
/* harmony export */   "Progress": () => (/* binding */ Progress),
/* harmony export */   "ProgressLabel": () => (/* binding */ ProgressLabel)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");




function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var spin = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.keyframes)({
  "0%": {
    strokeDasharray: "1, 400",
    strokeDashoffset: "0"
  },
  "50%": {
    strokeDasharray: "400, 400",
    strokeDashoffset: "-100"
  },
  "100%": {
    strokeDasharray: "400, 400",
    strokeDashoffset: "-260"
  }
});
var rotate = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.keyframes)({
  "0%": {
    transform: "rotate(0deg)"
  },
  "100%": {
    transform: "rotate(360deg)"
  }
});
var progress = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.keyframes)({
  "0%": {
    left: "-40%"
  },
  "100%": {
    left: "100%"
  }
});
var stripe = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.keyframes)({
  from: {
    backgroundPosition: "1rem 0"
  },
  to: {
    backgroundPosition: "0 0"
  }
});

/**
 * Get the common `aria-*` attributes for both the linear and circular
 * progress components.
 */
function getProgressProps(options) {
  var _options$value = options.value,
      value = _options$value === void 0 ? 0 : _options$value,
      min = options.min,
      max = options.max,
      valueText = options.valueText,
      getValueText = options.getValueText,
      isIndeterminate = options.isIndeterminate;
  var percent = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.valueToPercent)(value, min, max);

  var getAriaValueText = function getAriaValueText() {
    if (value == null) return undefined;
    return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.isFunction)(getValueText) ? getValueText(value, percent) : valueText;
  };

  return {
    bind: {
      "data-indeterminate": isIndeterminate ? "" : undefined,
      "aria-valuemax": max,
      "aria-valuemin": min,
      "aria-valuenow": isIndeterminate ? undefined : value,
      "aria-valuetext": getAriaValueText(),
      role: "progressbar"
    },
    percent: percent,
    value: value
  };
}

var _excluded$1 = ["size", "isIndeterminate"],
    _excluded2$1 = ["size", "max", "min", "valueText", "getValueText", "value", "capIsRound", "children", "thickness", "color", "trackColor", "isIndeterminate"];

var Circle = function Circle(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.circle, _extends({
    cx: 50,
    cy: 50,
    r: 42,
    fill: "transparent"
  }, props));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Circle.displayName = "Circle";
}

var Shape = function Shape(props) {
  var size = props.size,
      isIndeterminate = props.isIndeterminate,
      rest = _objectWithoutPropertiesLoose(props, _excluded$1);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.svg, _extends({
    viewBox: "0 0 100 100",
    __css: {
      width: size,
      height: size,
      animation: isIndeterminate ? rotate + " 2s linear infinite" : undefined
    }
  }, rest));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Shape.displayName = "Shape";
}

/**
 * CircularProgress is used to indicate the progress of an activity.
 * It is built using `svg` and `circle` components with support for
 * theming and `indeterminate` state
 *
 * @see Docs https://chakra-ui.com/circularprogress
 * @todo add theming support for circular progress
 */
var CircularProgress = function CircularProgress(props) {
  var _progress$percent;

  var _props$size = props.size,
      size = _props$size === void 0 ? "48px" : _props$size,
      _props$max = props.max,
      max = _props$max === void 0 ? 100 : _props$max,
      _props$min = props.min,
      min = _props$min === void 0 ? 0 : _props$min,
      valueText = props.valueText,
      getValueText = props.getValueText,
      value = props.value,
      capIsRound = props.capIsRound,
      children = props.children,
      _props$thickness = props.thickness,
      thickness = _props$thickness === void 0 ? "10px" : _props$thickness,
      _props$color = props.color,
      color = _props$color === void 0 ? "#0078d4" : _props$color,
      _props$trackColor = props.trackColor,
      trackColor = _props$trackColor === void 0 ? "#edebe9" : _props$trackColor,
      isIndeterminate = props.isIndeterminate,
      rest = _objectWithoutPropertiesLoose(props, _excluded2$1);

  var progress = getProgressProps({
    min: min,
    max: max,
    value: value,
    valueText: valueText,
    getValueText: getValueText,
    isIndeterminate: isIndeterminate
  });
  var determinant = isIndeterminate ? undefined : ((_progress$percent = progress.percent) != null ? _progress$percent : 0) * 2.64;
  var strokeDasharray = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(determinant) ? undefined : determinant + " " + (264 - determinant);
  var indicatorProps = isIndeterminate ? {
    css: {
      animation: spin + " 1.5s linear infinite"
    }
  } : {
    strokeDashoffset: 66,
    strokeDasharray: strokeDasharray,
    transitionProperty: "stroke-dasharray, stroke",
    transitionDuration: "0.6s",
    transitionTimingFunction: "ease"
  };
  var rootStyles = {
    display: "inline-block",
    position: "relative",
    verticalAlign: "middle",
    fontSize: size
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.div, _extends({
    className: "chakra-progress"
  }, progress.bind, rest, {
    __css: rootStyles
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Shape, {
    size: size,
    isIndeterminate: isIndeterminate
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Circle, {
    stroke: trackColor,
    strokeWidth: thickness,
    className: "chakra-progress__track"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Circle, _extends({
    stroke: color,
    strokeWidth: thickness,
    className: "chakra-progress__indicator",
    strokeLinecap: capIsRound ? "round" : undefined
    /**
     * fix issue in Safari where indictor still shows when value is 0
     * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3754
     */
    ,
    opacity: progress.value === 0 && !isIndeterminate ? 0 : undefined
  }, indicatorProps))), children);
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  CircularProgress.displayName = "CircularProgress";
}
/**
 * CircularProgress component label. In most cases it is a numeric indicator
 * of the circular progress component's value
 */


var CircularProgressLabel = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra)("div", {
  baseStyle: {
    fontSize: "0.24em",
    top: "50%",
    left: "50%",
    width: "100%",
    textAlign: "center",
    position: "absolute",
    transform: "translate(-50%, -50%)"
  }
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  CircularProgressLabel.displayName = "CircularProgressLabel";
}

var _excluded = ["min", "max", "value", "isIndeterminate"],
    _excluded2 = ["value", "min", "max", "hasStripe", "isAnimated", "children", "borderRadius", "isIndeterminate", "aria-label", "aria-labelledby"];

/**
 * ProgressLabel is used to show the numeric value of the progress.
 * @see Docs https://chakra-ui.com/progress
 */
var ProgressLabel = function ProgressLabel(props) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();

  var labelStyles = _extends({
    top: "50%",
    left: "50%",
    width: "100%",
    textAlign: "center",
    position: "absolute",
    transform: "translate(-50%, -50%)"
  }, styles.label);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.div, _extends({}, props, {
    __css: labelStyles
  }));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  ProgressLabel.displayName = "ProgressLabel";
}

/**
 * ProgressFilledTrack (Linear)
 *
 * The progress component that visually indicates the current level of the progress bar.
 * It applies `background-color` and changes its width.
 *
 * @see Docs https://chakra-ui.com/progress
 */
var ProgressFilledTrack = function ProgressFilledTrack(props) {
  var min = props.min,
      max = props.max,
      value = props.value,
      isIndeterminate = props.isIndeterminate,
      rest = _objectWithoutPropertiesLoose(props, _excluded);

  var progress = getProgressProps({
    value: value,
    min: min,
    max: max,
    isIndeterminate: isIndeterminate
  });
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useStyles)();

  var trackStyles = _extends({
    height: "100%"
  }, styles.filledTrack);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.div, _extends({
    style: _extends({
      width: progress.percent + "%"
    }, rest.style)
  }, progress.bind, rest, {
    __css: trackStyles
  }));
};

/**
 * Progress (Linear)
 *
 * Progress is used to display the progress status for a task that takes a long
 * time or consists of several steps.
 *
 * It includes accessible attributes to help assistive technologies understand
 * and speak the progress values.
 *
 * @see Docs https://chakra-ui.com/progress
 */
var Progress = function Progress(props) {
  var _styles$track;

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.omitThemingProps)(props),
      value = _omitThemingProps.value,
      _omitThemingProps$min = _omitThemingProps.min,
      min = _omitThemingProps$min === void 0 ? 0 : _omitThemingProps$min,
      _omitThemingProps$max = _omitThemingProps.max,
      max = _omitThemingProps$max === void 0 ? 100 : _omitThemingProps$max,
      hasStripe = _omitThemingProps.hasStripe,
      isAnimated = _omitThemingProps.isAnimated,
      children = _omitThemingProps.children,
      propBorderRadius = _omitThemingProps.borderRadius,
      isIndeterminate = _omitThemingProps.isIndeterminate,
      ariaLabel = _omitThemingProps["aria-label"],
      ariaLabelledBy = _omitThemingProps["aria-labelledby"],
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.useMultiStyleConfig)("Progress", props);
  var borderRadius = propBorderRadius != null ? propBorderRadius : (_styles$track = styles.track) == null ? void 0 : _styles$track.borderRadius;
  var stripeAnimation = {
    animation: stripe + " 1s linear infinite"
  };
  /**
   * We should not use stripe if it is `indeterminate`
   */

  var shouldAddStripe = !isIndeterminate && hasStripe;
  var shouldAnimateStripe = shouldAddStripe && isAnimated;
  /**
   * Generate styles for stripe and stripe animation
   */

  var css = _extends({}, shouldAnimateStripe && stripeAnimation, isIndeterminate && {
    position: "absolute",
    willChange: "left",
    minWidth: "50%",
    animation: progress + " 1s ease infinite normal none running"
  });

  var trackStyles = _extends({
    overflow: "hidden",
    position: "relative"
  }, styles.track);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.chakra.div, _extends({
    borderRadius: borderRadius,
    __css: trackStyles
  }, rest), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ProgressFilledTrack, {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    min: min,
    max: max,
    value: value,
    isIndeterminate: isIndeterminate,
    css: css,
    borderRadius: borderRadius
  }), children));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Progress.displayName = "Progress";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/provider/dist/chakra-ui-provider.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@chakra-ui/provider/dist/chakra-ui-provider.esm.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChakraProvider": () => (/* binding */ ChakraProvider)
/* harmony export */ });
/* harmony import */ var _chakra_ui_css_reset__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/css-reset */ "./node_modules/@chakra-ui/css-reset/dist/chakra-ui-css-reset.esm.js");
/* harmony import */ var _chakra_ui_portal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/portal */ "./node_modules/@chakra-ui/portal/dist/chakra-ui-portal.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/color-mode/dist/chakra-ui-color-mode.esm.js");
/* harmony import */ var _chakra_ui_react_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/react-env */ "./node_modules/@chakra-ui/react-env/dist/chakra-ui-react-env.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");







/**
 * The global provider that must be added to make all Chakra components
 * work correctly
 */
var ChakraProvider = function ChakraProvider(props) {
  var children = props.children,
      colorModeManager = props.colorModeManager,
      portalZIndex = props.portalZIndex,
      _props$resetCSS = props.resetCSS,
      resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS,
      _props$theme = props.theme,
      theme = _props$theme === void 0 ? {} : _props$theme,
      environment = props.environment,
      cssVarsRoot = props.cssVarsRoot;

  var _children = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_react_env__WEBPACK_IMPORTED_MODULE_1__.EnvironmentProvider, {
    environment: environment
  }, children);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.IdProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.ThemeProvider, {
    theme: theme,
    cssVarsRoot: cssVarsRoot
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.ColorModeProvider, {
    colorModeManager: colorModeManager,
    options: theme.config
  }, resetCSS && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_css_reset__WEBPACK_IMPORTED_MODULE_5__["default"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.GlobalStyle, null), portalZIndex ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_portal__WEBPACK_IMPORTED_MODULE_6__.PortalManager, {
    zIndex: portalZIndex
  }, _children) : _children)));
};




/***/ }),

/***/ "./node_modules/@chakra-ui/radio/dist/chakra-ui-radio.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@chakra-ui/radio/dist/chakra-ui-radio.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Radio": () => (/* binding */ Radio),
/* harmony export */   "RadioGroup": () => (/* binding */ RadioGroup),
/* harmony export */   "useRadio": () => (/* binding */ useRadio),
/* harmony export */   "useRadioGroup": () => (/* binding */ useRadioGroup),
/* harmony export */   "useRadioGroupContext": () => (/* binding */ useRadioGroupContext)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/styled-system/dist/chakra-ui-styled-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");
/* harmony import */ var _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/form-control */ "./node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js");
/* harmony import */ var _chakra_ui_visually_hidden__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/visually-hidden */ "./node_modules/@chakra-ui/visually-hidden/dist/chakra-ui-visually-hidden.esm.js");









function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var _excluded$3 = ["onChange", "value", "defaultValue", "name", "isDisabled", "isFocusable", "isNative"];

/**
 * React hook to manage a group of radio inputs
 */
function useRadioGroup(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      onChangeProp = _props.onChange,
      valueProp = _props.value,
      defaultValue = _props.defaultValue,
      nameProp = _props.name,
      isDisabled = _props.isDisabled,
      isFocusable = _props.isFocusable,
      isNative = _props.isNative,
      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$3);

  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultValue || ""),
      valueState = _React$useState[0],
      setValue = _React$useState[1];

  var _useControllableProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useControllableProp)(valueProp, valueState),
      isControlled = _useControllableProp[0],
      value = _useControllableProp[1];

  var ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  var focus = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    var rootNode = ref.current;
    if (!rootNode) return;
    var query = "input:not(:disabled):checked";
    var firstEnabledAndCheckedInput = rootNode.querySelector(query);

    if (firstEnabledAndCheckedInput) {
      firstEnabledAndCheckedInput.focus();
      return;
    }

    query = "input:not(:disabled)";
    var firstEnabledInput = rootNode.querySelector(query);
    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();
  }, []);
  /**
   * All radio options must use the same name
   */

  var fallbackName = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useId)(undefined, "radio");
  var name = nameProp || fallbackName;
  var onChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (eventOrValue) {
    var nextValue = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.isInputEvent)(eventOrValue) ? eventOrValue.target.value : eventOrValue;

    if (!isControlled) {
      setValue(nextValue);
    }

    onChangeProp == null ? void 0 : onChangeProp(String(nextValue));
  }, [onChangeProp, isControlled]);
  var getRootProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (props, forwardedRef) {
    if (props === void 0) {
      props = {};
    }

    if (forwardedRef === void 0) {
      forwardedRef = null;
    }

    return _extends({}, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(forwardedRef, ref),
      role: "radiogroup"
    });
  }, []);
  var getRadioProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (props, ref) {
    var _extends2;

    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    var checkedKey = isNative ? "checked" : "isChecked";
    return _extends({}, props, (_extends2 = {
      ref: ref,
      name: name
    }, _extends2[checkedKey] = value != null ? props.value === value : undefined, _extends2.onChange = onChange, _extends2["data-radiogroup"] = true, _extends2));
  }, [isNative, name, onChange, value]);
  return {
    getRootProps: getRootProps,
    getRadioProps: getRadioProps,
    name: name,
    ref: ref,
    focus: focus,
    setValue: setValue,
    value: value,
    onChange: onChange,
    isDisabled: isDisabled,
    isFocusable: isFocusable,
    htmlProps: htmlProps
  };
}

var _excluded$2 = ["colorScheme", "size", "variant", "children", "className", "isDisabled", "isFocusable"];

var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.createContext)({
  name: "RadioGroupContext",
  strict: false
}),
    RadioGroupProvider = _createContext[0],
    useRadioGroupContext = _createContext[1];

/**
 * Used for multiple radios which are bound in one group,
 * and it indicates which option is selected.
 *
 * @see Docs https://chakra-ui.com/radio
 */
var RadioGroup = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var colorScheme = props.colorScheme,
      size = props.size,
      variant = props.variant,
      children = props.children,
      className = props.className,
      isDisabled = props.isDisabled,
      isFocusable = props.isFocusable,
      rest = _objectWithoutPropertiesLoose(props, _excluded$2);

  var _useRadioGroup = useRadioGroup(rest),
      value = _useRadioGroup.value,
      onChange = _useRadioGroup.onChange,
      getRootProps = _useRadioGroup.getRootProps,
      name = _useRadioGroup.name,
      htmlProps = _useRadioGroup.htmlProps;

  var group = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return {
      name: name,
      size: size,
      onChange: onChange,
      colorScheme: colorScheme,
      value: value,
      variant: variant,
      isDisabled: isDisabled,
      isFocusable: isFocusable
    };
  }, [name, size, onChange, colorScheme, value, variant, isDisabled, isFocusable]);
  var groupProps = getRootProps(htmlProps, ref);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-radio-group", className);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RadioGroupProvider, {
    value: group
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, groupProps, {
    className: _className
  }), children));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  RadioGroup.displayName = "RadioGroup";
}

var _excluded$1 = ["defaultIsChecked", "defaultChecked", "isChecked", "isFocusable", "isDisabled", "isReadOnly", "isRequired", "onChange", "isInvalid", "name", "value", "id", "data-radiogroup"];
/**
 * @todo use the `useClickable` hook here
 * to manage the isFocusable & isDisabled props
 */

function useRadio(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      defaultIsChecked = _props.defaultIsChecked,
      _props$defaultChecked = _props.defaultChecked,
      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,
      isCheckedProp = _props.isChecked,
      isFocusable = _props.isFocusable,
      isDisabledProp = _props.isDisabled,
      isReadOnlyProp = _props.isReadOnly,
      isRequiredProp = _props.isRequired,
      onChange = _props.onChange,
      isInvalidProp = _props.isInvalid,
      name = _props.name,
      value = _props.value,
      idProp = _props.id,
      dataRadioGroup = _props["data-radiogroup"],
      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);

  var uuid = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useId)(undefined, "radio");
  var formControl = (0,_chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_5__.useFormControlContext)();
  var group = useRadioGroupContext();
  var isWithinRadioGroup = !!group || !!dataRadioGroup;
  var isWithinFormControl = !!formControl;
  var id = isWithinFormControl && !isWithinRadioGroup ? formControl.id : uuid;
  id = idProp != null ? idProp : id;
  var isDisabled = isDisabledProp != null ? isDisabledProp : formControl == null ? void 0 : formControl.isDisabled;
  var isReadOnly = isReadOnlyProp != null ? isReadOnlyProp : formControl == null ? void 0 : formControl.isReadOnly;
  var isRequired = isRequiredProp != null ? isRequiredProp : formControl == null ? void 0 : formControl.isRequired;
  var isInvalid = isInvalidProp != null ? isInvalidProp : formControl == null ? void 0 : formControl.isInvalid;

  var _useBoolean = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useBoolean)(),
      isFocused = _useBoolean[0],
      setFocused = _useBoolean[1];

  var _useBoolean2 = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useBoolean)(),
      isHovered = _useBoolean2[0],
      setHovering = _useBoolean2[1];

  var _useBoolean3 = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useBoolean)(),
      isActive = _useBoolean3[0],
      setActive = _useBoolean3[1];

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Boolean(defaultChecked)),
      isCheckedState = _useState[0],
      setChecked = _useState[1];

  var _useControllableProp = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useControllableProp)(isCheckedProp, isCheckedState),
      isControlled = _useControllableProp[0],
      isChecked = _useControllableProp[1];

  (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.warn)({
    condition: !!defaultIsChecked,
    message: 'The "defaultIsChecked" prop has been deprecated and will be removed in a future version. ' + 'Please use the "defaultChecked" prop instead, which mirrors default React checkbox behavior.'
  });
  var handleChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    if (isReadOnly || isDisabled) {
      event.preventDefault();
      return;
    }

    if (!isControlled) {
      setChecked(event.target.checked);
    }

    onChange == null ? void 0 : onChange(event);
  }, [isControlled, isDisabled, isReadOnly, onChange]);
  var onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    if (event.key === " ") {
      setActive.on();
    }
  }, [setActive]);
  var onKeyUp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    if (event.key === " ") {
      setActive.off();
    }
  }, [setActive]);
  var getCheckboxProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: ref,
      "data-active": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isActive),
      "data-hover": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isHovered),
      "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDisabled),
      "data-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isInvalid),
      "data-checked": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isChecked),
      "data-focus": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isFocused),
      "data-readonly": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isReadOnly),
      "aria-hidden": true,
      onMouseDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onMouseDown, setActive.on),
      onMouseUp: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onMouseUp, setActive.off),
      onMouseEnter: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onMouseEnter, setHovering.on),
      onMouseLeave: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onMouseLeave, setHovering.off)
    });
  }, [isActive, isHovered, isDisabled, isInvalid, isChecked, isFocused, isReadOnly, setActive.on, setActive.off, setHovering.on, setHovering.off]);

  var _ref = formControl != null ? formControl : {},
      onFocus = _ref.onFocus,
      onBlur = _ref.onBlur;

  var getInputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    var trulyDisabled = isDisabled && !isFocusable;
    return _extends({}, props, {
      id: id,
      ref: ref,
      type: "radio",
      name: name,
      value: value,
      onChange: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onChange, handleChange),
      onBlur: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(onBlur, props.onBlur, setFocused.off),
      onFocus: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(onFocus, props.onFocus, setFocused.on),
      onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onKeyDown, onKeyDown),
      onKeyUp: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onKeyUp, onKeyUp),
      checked: isChecked,
      disabled: trulyDisabled,
      readOnly: isReadOnly,
      required: isRequired,
      "aria-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(isInvalid),
      "aria-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(trulyDisabled),
      "aria-required": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(isRequired),
      "data-readonly": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isReadOnly),
      style: _chakra_ui_visually_hidden__WEBPACK_IMPORTED_MODULE_6__.visuallyHiddenStyle
    });
  }, [isDisabled, isFocusable, id, name, value, handleChange, onBlur, setFocused, onFocus, onKeyDown, onKeyUp, isChecked, isReadOnly, isRequired, isInvalid]);

  var getLabelProps = function getLabelProps(props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: ref,
      onMouseDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onMouseDown, stop),
      onTouchStart: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onTouchStart, stop),
      "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDisabled),
      "data-checked": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isChecked),
      "data-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isInvalid)
    });
  };

  var getRootProps = function getRootProps(props, ref) {
    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: ref,
      "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDisabled),
      "data-checked": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isChecked),
      "data-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isInvalid)
    });
  };

  return {
    state: {
      isInvalid: isInvalid,
      isFocused: isFocused,
      isChecked: isChecked,
      isActive: isActive,
      isHovered: isHovered,
      isDisabled: isDisabled,
      isReadOnly: isReadOnly,
      isRequired: isRequired
    },
    getCheckboxProps: getCheckboxProps,
    getInputProps: getInputProps,
    getLabelProps: getLabelProps,
    getRootProps: getRootProps,
    htmlProps: htmlProps
  };
}
/**
 * Prevent `onBlur` being fired when the checkbox label is touched
 */

function stop(event) {
  event.preventDefault();
  event.stopPropagation();
}

var _excluded = ["spacing", "children", "isFullWidth", "isDisabled", "isFocusable"];

/**
 * Radio component is used in forms when a user needs to select a single value from
 * several options.
 *
 * @see Docs https://chakra-ui.com/radio
 */
var Radio = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _props$name;

  var group = useRadioGroupContext();
  var onChangeProp = props.onChange,
      valueProp = props.value;
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useMultiStyleConfig)("Radio", _extends({}, group, props));
  var ownProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.omitThemingProps)(props);

  var _ownProps$spacing = ownProps.spacing,
      spacing = _ownProps$spacing === void 0 ? "0.5rem" : _ownProps$spacing,
      children = ownProps.children,
      isFullWidth = ownProps.isFullWidth,
      _ownProps$isDisabled = ownProps.isDisabled,
      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,
      _ownProps$isFocusable = ownProps.isFocusable,
      isFocusable = _ownProps$isFocusable === void 0 ? group == null ? void 0 : group.isFocusable : _ownProps$isFocusable,
      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);

  var isChecked = props.isChecked;

  if ((group == null ? void 0 : group.value) != null && valueProp != null) {
    isChecked = group.value === valueProp;
  }

  var onChange = onChangeProp;

  if (group != null && group.onChange && valueProp != null) {
    onChange = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAll)(group.onChange, onChangeProp);
  }

  var name = (_props$name = props == null ? void 0 : props.name) != null ? _props$name : group == null ? void 0 : group.name;

  var _useRadio = useRadio(_extends({}, rest, {
    isChecked: isChecked,
    isFocusable: isFocusable,
    isDisabled: isDisabled,
    onChange: onChange,
    name: name
  })),
      getInputProps = _useRadio.getInputProps,
      getCheckboxProps = _useRadio.getCheckboxProps,
      getLabelProps = _useRadio.getLabelProps,
      getRootProps = _useRadio.getRootProps,
      htmlProps = _useRadio.htmlProps;

  var _split = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.split)(htmlProps, _chakra_ui_system__WEBPACK_IMPORTED_MODULE_7__.layoutPropNames),
      layoutProps = _split[0],
      otherProps = _split[1];

  var checkboxProps = getCheckboxProps(otherProps);
  var inputProps = getInputProps({}, ref);
  var labelProps = getLabelProps();
  var rootProps = Object.assign({}, layoutProps, getRootProps());

  var rootStyles = _extends({
    width: isFullWidth ? "full" : undefined,
    display: "inline-flex",
    alignItems: "center",
    verticalAlign: "top",
    cursor: "pointer"
  }, styles.container);

  var checkboxStyles = _extends({
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    flexShrink: 0
  }, styles.control);

  var labelStyles = _extends({
    userSelect: "none",
    marginStart: spacing
  }, styles.label);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.label, _extends({
    className: "chakra-radio"
  }, rootProps, {
    __css: rootStyles
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("input", _extends({
    className: "chakra-radio__input"
  }, inputProps)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.span, _extends({
    className: "chakra-radio__control"
  }, checkboxProps, {
    __css: checkboxStyles
  })), children && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.span, _extends({
    className: "chakra-radio__label"
  }, labelProps, {
    __css: labelStyles
  }), children));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Radio.displayName = "Radio";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isChakraTheme": () => (/* reexport safe */ _chakra_ui_theme__WEBPACK_IMPORTED_MODULE_0__.isChakraTheme),
/* harmony export */   "requiredChakraThemeKeys": () => (/* reexport safe */ _chakra_ui_theme__WEBPACK_IMPORTED_MODULE_0__.requiredChakraThemeKeys),
/* harmony export */   "theme": () => (/* reexport safe */ _chakra_ui_theme__WEBPACK_IMPORTED_MODULE_0__.theme),
/* harmony export */   "Accordion": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.Accordion),
/* harmony export */   "AccordionButton": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.AccordionButton),
/* harmony export */   "AccordionDescendantsProvider": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.AccordionDescendantsProvider),
/* harmony export */   "AccordionIcon": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.AccordionIcon),
/* harmony export */   "AccordionItem": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.AccordionItem),
/* harmony export */   "AccordionPanel": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.AccordionPanel),
/* harmony export */   "AccordionProvider": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.AccordionProvider),
/* harmony export */   "useAccordion": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.useAccordion),
/* harmony export */   "useAccordionContext": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.useAccordionContext),
/* harmony export */   "useAccordionDescendant": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.useAccordionDescendant),
/* harmony export */   "useAccordionDescendants": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.useAccordionDescendants),
/* harmony export */   "useAccordionDescendantsContext": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.useAccordionDescendantsContext),
/* harmony export */   "useAccordionItem": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.useAccordionItem),
/* harmony export */   "useAccordionItemState": () => (/* reexport safe */ _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__.useAccordionItemState),
/* harmony export */   "Alert": () => (/* reexport safe */ _chakra_ui_alert__WEBPACK_IMPORTED_MODULE_2__.Alert),
/* harmony export */   "AlertDescription": () => (/* reexport safe */ _chakra_ui_alert__WEBPACK_IMPORTED_MODULE_2__.AlertDescription),
/* harmony export */   "AlertIcon": () => (/* reexport safe */ _chakra_ui_alert__WEBPACK_IMPORTED_MODULE_2__.AlertIcon),
/* harmony export */   "AlertTitle": () => (/* reexport safe */ _chakra_ui_alert__WEBPACK_IMPORTED_MODULE_2__.AlertTitle),
/* harmony export */   "Avatar": () => (/* reexport safe */ _chakra_ui_avatar__WEBPACK_IMPORTED_MODULE_3__.Avatar),
/* harmony export */   "AvatarBadge": () => (/* reexport safe */ _chakra_ui_avatar__WEBPACK_IMPORTED_MODULE_3__.AvatarBadge),
/* harmony export */   "AvatarGroup": () => (/* reexport safe */ _chakra_ui_avatar__WEBPACK_IMPORTED_MODULE_3__.AvatarGroup),
/* harmony export */   "baseStyle": () => (/* reexport safe */ _chakra_ui_avatar__WEBPACK_IMPORTED_MODULE_3__.baseStyle),
/* harmony export */   "Breadcrumb": () => (/* reexport safe */ _chakra_ui_breadcrumb__WEBPACK_IMPORTED_MODULE_4__.Breadcrumb),
/* harmony export */   "BreadcrumbItem": () => (/* reexport safe */ _chakra_ui_breadcrumb__WEBPACK_IMPORTED_MODULE_4__.BreadcrumbItem),
/* harmony export */   "BreadcrumbLink": () => (/* reexport safe */ _chakra_ui_breadcrumb__WEBPACK_IMPORTED_MODULE_4__.BreadcrumbLink),
/* harmony export */   "BreadcrumbSeparator": () => (/* reexport safe */ _chakra_ui_breadcrumb__WEBPACK_IMPORTED_MODULE_4__.BreadcrumbSeparator),
/* harmony export */   "Button": () => (/* reexport safe */ _chakra_ui_button__WEBPACK_IMPORTED_MODULE_5__.Button),
/* harmony export */   "ButtonGroup": () => (/* reexport safe */ _chakra_ui_button__WEBPACK_IMPORTED_MODULE_5__.ButtonGroup),
/* harmony export */   "ButtonSpinner": () => (/* reexport safe */ _chakra_ui_button__WEBPACK_IMPORTED_MODULE_5__.ButtonSpinner),
/* harmony export */   "IconButton": () => (/* reexport safe */ _chakra_ui_button__WEBPACK_IMPORTED_MODULE_5__.IconButton),
/* harmony export */   "useButtonGroup": () => (/* reexport safe */ _chakra_ui_button__WEBPACK_IMPORTED_MODULE_5__.useButtonGroup),
/* harmony export */   "Checkbox": () => (/* reexport safe */ _chakra_ui_checkbox__WEBPACK_IMPORTED_MODULE_6__.Checkbox),
/* harmony export */   "CheckboxGroup": () => (/* reexport safe */ _chakra_ui_checkbox__WEBPACK_IMPORTED_MODULE_6__.CheckboxGroup),
/* harmony export */   "useCheckbox": () => (/* reexport safe */ _chakra_ui_checkbox__WEBPACK_IMPORTED_MODULE_6__.useCheckbox),
/* harmony export */   "useCheckboxGroup": () => (/* reexport safe */ _chakra_ui_checkbox__WEBPACK_IMPORTED_MODULE_6__.useCheckboxGroup),
/* harmony export */   "useCheckboxGroupContext": () => (/* reexport safe */ _chakra_ui_checkbox__WEBPACK_IMPORTED_MODULE_6__.useCheckboxGroupContext),
/* harmony export */   "CloseButton": () => (/* reexport safe */ _chakra_ui_close_button__WEBPACK_IMPORTED_MODULE_7__.CloseButton),
/* harmony export */   "useCounter": () => (/* reexport safe */ _chakra_ui_counter__WEBPACK_IMPORTED_MODULE_8__.useCounter),
/* harmony export */   "CSSReset": () => (/* reexport safe */ _chakra_ui_css_reset__WEBPACK_IMPORTED_MODULE_9__.CSSReset),
/* harmony export */   "Editable": () => (/* reexport safe */ _chakra_ui_editable__WEBPACK_IMPORTED_MODULE_10__.Editable),
/* harmony export */   "EditableInput": () => (/* reexport safe */ _chakra_ui_editable__WEBPACK_IMPORTED_MODULE_10__.EditableInput),
/* harmony export */   "EditablePreview": () => (/* reexport safe */ _chakra_ui_editable__WEBPACK_IMPORTED_MODULE_10__.EditablePreview),
/* harmony export */   "useEditable": () => (/* reexport safe */ _chakra_ui_editable__WEBPACK_IMPORTED_MODULE_10__.useEditable),
/* harmony export */   "useEditableControls": () => (/* reexport safe */ _chakra_ui_editable__WEBPACK_IMPORTED_MODULE_10__.useEditableControls),
/* harmony export */   "useEditableState": () => (/* reexport safe */ _chakra_ui_editable__WEBPACK_IMPORTED_MODULE_10__.useEditableState),
/* harmony export */   "FormControl": () => (/* reexport safe */ _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_11__.FormControl),
/* harmony export */   "FormErrorIcon": () => (/* reexport safe */ _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_11__.FormErrorIcon),
/* harmony export */   "FormErrorMessage": () => (/* reexport safe */ _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_11__.FormErrorMessage),
/* harmony export */   "FormHelperText": () => (/* reexport safe */ _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_11__.FormHelperText),
/* harmony export */   "FormLabel": () => (/* reexport safe */ _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_11__.FormLabel),
/* harmony export */   "RequiredIndicator": () => (/* reexport safe */ _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_11__.RequiredIndicator),
/* harmony export */   "useFormControl": () => (/* reexport safe */ _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_11__.useFormControl),
/* harmony export */   "useFormControlContext": () => (/* reexport safe */ _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_11__.useFormControlContext),
/* harmony export */   "useFormControlProps": () => (/* reexport safe */ _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_11__.useFormControlProps),
/* harmony export */   "ControlBox": () => (/* reexport safe */ _chakra_ui_control_box__WEBPACK_IMPORTED_MODULE_12__.ControlBox),
/* harmony export */   "IdProvider": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.IdProvider),
/* harmony export */   "assignRef": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.assignRef),
/* harmony export */   "useBoolean": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useBoolean),
/* harmony export */   "useCallbackRef": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useCallbackRef),
/* harmony export */   "useClipboard": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useClipboard),
/* harmony export */   "useConst": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useConst),
/* harmony export */   "useControllableProp": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useControllableProp),
/* harmony export */   "useControllableState": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useControllableState),
/* harmony export */   "useDimensions": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useDimensions),
/* harmony export */   "useDisclosure": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useDisclosure),
/* harmony export */   "useEventCallback": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useEventCallback),
/* harmony export */   "useEventListener": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useEventListener),
/* harmony export */   "useEventListenerMap": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useEventListenerMap),
/* harmony export */   "useFocusEffect": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useFocusEffect),
/* harmony export */   "useFocusOnHide": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useFocusOnHide),
/* harmony export */   "useFocusOnPointerDown": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useFocusOnPointerDown),
/* harmony export */   "useFocusOnShow": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useFocusOnShow),
/* harmony export */   "useForceUpdate": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useForceUpdate),
/* harmony export */   "useId": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useId),
/* harmony export */   "useIds": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useIds),
/* harmony export */   "useInterval": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useInterval),
/* harmony export */   "useLatestRef": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useLatestRef),
/* harmony export */   "useMergeRefs": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useMergeRefs),
/* harmony export */   "useMouseDownRef": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useMouseDownRef),
/* harmony export */   "useOptionalPart": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useOptionalPart),
/* harmony export */   "useOutsideClick": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useOutsideClick),
/* harmony export */   "usePanGesture": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.usePanGesture),
/* harmony export */   "usePointerEvent": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.usePointerEvent),
/* harmony export */   "usePrevious": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.usePrevious),
/* harmony export */   "useSafeLayoutEffect": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useSafeLayoutEffect),
/* harmony export */   "useShortcut": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useShortcut),
/* harmony export */   "useTimeout": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useTimeout),
/* harmony export */   "useUnmountEffect": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useUnmountEffect),
/* harmony export */   "useUpdateEffect": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useUpdateEffect),
/* harmony export */   "useWhyDidYouUpdate": () => (/* reexport safe */ _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__.useWhyDidYouUpdate),
/* harmony export */   "Icon": () => (/* reexport safe */ _chakra_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon),
/* harmony export */   "createIcon": () => (/* reexport safe */ _chakra_ui_icon__WEBPACK_IMPORTED_MODULE_14__.createIcon),
/* harmony export */   "Image": () => (/* reexport safe */ _chakra_ui_image__WEBPACK_IMPORTED_MODULE_15__.Image),
/* harmony export */   "Img": () => (/* reexport safe */ _chakra_ui_image__WEBPACK_IMPORTED_MODULE_15__.Img),
/* harmony export */   "useImage": () => (/* reexport safe */ _chakra_ui_image__WEBPACK_IMPORTED_MODULE_15__.useImage),
/* harmony export */   "Input": () => (/* reexport safe */ _chakra_ui_input__WEBPACK_IMPORTED_MODULE_16__.Input),
/* harmony export */   "InputAddon": () => (/* reexport safe */ _chakra_ui_input__WEBPACK_IMPORTED_MODULE_16__.InputAddon),
/* harmony export */   "InputGroup": () => (/* reexport safe */ _chakra_ui_input__WEBPACK_IMPORTED_MODULE_16__.InputGroup),
/* harmony export */   "InputLeftAddon": () => (/* reexport safe */ _chakra_ui_input__WEBPACK_IMPORTED_MODULE_16__.InputLeftAddon),
/* harmony export */   "InputLeftElement": () => (/* reexport safe */ _chakra_ui_input__WEBPACK_IMPORTED_MODULE_16__.InputLeftElement),
/* harmony export */   "InputRightAddon": () => (/* reexport safe */ _chakra_ui_input__WEBPACK_IMPORTED_MODULE_16__.InputRightAddon),
/* harmony export */   "InputRightElement": () => (/* reexport safe */ _chakra_ui_input__WEBPACK_IMPORTED_MODULE_16__.InputRightElement),
/* harmony export */   "AbsoluteCenter": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.AbsoluteCenter),
/* harmony export */   "AspectRatio": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.AspectRatio),
/* harmony export */   "Badge": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Badge),
/* harmony export */   "Box": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Box),
/* harmony export */   "Center": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Center),
/* harmony export */   "Circle": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Circle),
/* harmony export */   "Code": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Code),
/* harmony export */   "Container": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Container),
/* harmony export */   "Divider": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Divider),
/* harmony export */   "Flex": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Flex),
/* harmony export */   "Grid": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Grid),
/* harmony export */   "GridItem": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.GridItem),
/* harmony export */   "HStack": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.HStack),
/* harmony export */   "Heading": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Heading),
/* harmony export */   "Kbd": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Kbd),
/* harmony export */   "Link": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Link),
/* harmony export */   "LinkBox": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.LinkBox),
/* harmony export */   "LinkOverlay": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.LinkOverlay),
/* harmony export */   "List": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.List),
/* harmony export */   "ListIcon": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.ListIcon),
/* harmony export */   "ListItem": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.ListItem),
/* harmony export */   "OrderedList": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.OrderedList),
/* harmony export */   "SimpleGrid": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.SimpleGrid),
/* harmony export */   "Spacer": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Spacer),
/* harmony export */   "Square": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Square),
/* harmony export */   "Stack": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Stack),
/* harmony export */   "StackDivider": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.StackDivider),
/* harmony export */   "StackItem": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.StackItem),
/* harmony export */   "Text": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Text),
/* harmony export */   "UnorderedList": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.UnorderedList),
/* harmony export */   "VStack": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.VStack),
/* harmony export */   "Wrap": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.Wrap),
/* harmony export */   "WrapItem": () => (/* reexport safe */ _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__.WrapItem),
/* harmony export */   "Hide": () => (/* reexport safe */ _chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_18__.Hide),
/* harmony export */   "Show": () => (/* reexport safe */ _chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_18__.Show),
/* harmony export */   "useBreakpoint": () => (/* reexport safe */ _chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_18__.useBreakpoint),
/* harmony export */   "useBreakpointValue": () => (/* reexport safe */ _chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_18__.useBreakpointValue),
/* harmony export */   "useColorModePreference": () => (/* reexport safe */ _chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_18__.useColorModePreference),
/* harmony export */   "useMediaQuery": () => (/* reexport safe */ _chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_18__.useMediaQuery),
/* harmony export */   "usePrefersReducedMotion": () => (/* reexport safe */ _chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_18__.usePrefersReducedMotion),
/* harmony export */   "useQuery": () => (/* reexport safe */ _chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_18__.useQuery),
/* harmony export */   "Table": () => (/* reexport safe */ _chakra_ui_table__WEBPACK_IMPORTED_MODULE_19__.Table),
/* harmony export */   "TableCaption": () => (/* reexport safe */ _chakra_ui_table__WEBPACK_IMPORTED_MODULE_19__.TableCaption),
/* harmony export */   "TableContainer": () => (/* reexport safe */ _chakra_ui_table__WEBPACK_IMPORTED_MODULE_19__.TableContainer),
/* harmony export */   "Tbody": () => (/* reexport safe */ _chakra_ui_table__WEBPACK_IMPORTED_MODULE_19__.Tbody),
/* harmony export */   "Td": () => (/* reexport safe */ _chakra_ui_table__WEBPACK_IMPORTED_MODULE_19__.Td),
/* harmony export */   "Tfoot": () => (/* reexport safe */ _chakra_ui_table__WEBPACK_IMPORTED_MODULE_19__.Tfoot),
/* harmony export */   "Th": () => (/* reexport safe */ _chakra_ui_table__WEBPACK_IMPORTED_MODULE_19__.Th),
/* harmony export */   "Thead": () => (/* reexport safe */ _chakra_ui_table__WEBPACK_IMPORTED_MODULE_19__.Thead),
/* harmony export */   "Tr": () => (/* reexport safe */ _chakra_ui_table__WEBPACK_IMPORTED_MODULE_19__.Tr),
/* harmony export */   "Menu": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.Menu),
/* harmony export */   "MenuButton": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuButton),
/* harmony export */   "MenuCommand": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuCommand),
/* harmony export */   "MenuDescendantsProvider": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuDescendantsProvider),
/* harmony export */   "MenuDivider": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuDivider),
/* harmony export */   "MenuGroup": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuGroup),
/* harmony export */   "MenuIcon": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuIcon),
/* harmony export */   "MenuItem": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuItem),
/* harmony export */   "MenuItemOption": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuItemOption),
/* harmony export */   "MenuList": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuList),
/* harmony export */   "MenuOptionGroup": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuOptionGroup),
/* harmony export */   "MenuProvider": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.MenuProvider),
/* harmony export */   "useMenu": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenu),
/* harmony export */   "useMenuButton": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuButton),
/* harmony export */   "useMenuContext": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuContext),
/* harmony export */   "useMenuDescendant": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuDescendant),
/* harmony export */   "useMenuDescendants": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuDescendants),
/* harmony export */   "useMenuDescendantsContext": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuDescendantsContext),
/* harmony export */   "useMenuItem": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuItem),
/* harmony export */   "useMenuList": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuList),
/* harmony export */   "useMenuOption": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuOption),
/* harmony export */   "useMenuOptionGroup": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuOptionGroup),
/* harmony export */   "useMenuPositioner": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuPositioner),
/* harmony export */   "useMenuState": () => (/* reexport safe */ _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__.useMenuState),
/* harmony export */   "AlertDialog": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.AlertDialog),
/* harmony export */   "AlertDialogBody": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.AlertDialogBody),
/* harmony export */   "AlertDialogCloseButton": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.AlertDialogCloseButton),
/* harmony export */   "AlertDialogContent": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.AlertDialogContent),
/* harmony export */   "AlertDialogFooter": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.AlertDialogFooter),
/* harmony export */   "AlertDialogHeader": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.AlertDialogHeader),
/* harmony export */   "AlertDialogOverlay": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.AlertDialogOverlay),
/* harmony export */   "Drawer": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.Drawer),
/* harmony export */   "DrawerBody": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.DrawerBody),
/* harmony export */   "DrawerCloseButton": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.DrawerCloseButton),
/* harmony export */   "DrawerContent": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.DrawerContent),
/* harmony export */   "DrawerFooter": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.DrawerFooter),
/* harmony export */   "DrawerHeader": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.DrawerHeader),
/* harmony export */   "DrawerOverlay": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.DrawerOverlay),
/* harmony export */   "Modal": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.Modal),
/* harmony export */   "ModalBody": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.ModalBody),
/* harmony export */   "ModalCloseButton": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.ModalCloseButton),
/* harmony export */   "ModalContent": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.ModalContent),
/* harmony export */   "ModalContextProvider": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.ModalContextProvider),
/* harmony export */   "ModalFocusScope": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.ModalFocusScope),
/* harmony export */   "ModalFooter": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.ModalFooter),
/* harmony export */   "ModalHeader": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.ModalHeader),
/* harmony export */   "ModalOverlay": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.ModalOverlay),
/* harmony export */   "useAriaHidden": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.useAriaHidden),
/* harmony export */   "useModal": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.useModal),
/* harmony export */   "useModalContext": () => (/* reexport safe */ _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__.useModalContext),
/* harmony export */   "NumberDecrementStepper": () => (/* reexport safe */ _chakra_ui_number_input__WEBPACK_IMPORTED_MODULE_22__.NumberDecrementStepper),
/* harmony export */   "NumberIncrementStepper": () => (/* reexport safe */ _chakra_ui_number_input__WEBPACK_IMPORTED_MODULE_22__.NumberIncrementStepper),
/* harmony export */   "NumberInput": () => (/* reexport safe */ _chakra_ui_number_input__WEBPACK_IMPORTED_MODULE_22__.NumberInput),
/* harmony export */   "NumberInputField": () => (/* reexport safe */ _chakra_ui_number_input__WEBPACK_IMPORTED_MODULE_22__.NumberInputField),
/* harmony export */   "NumberInputStepper": () => (/* reexport safe */ _chakra_ui_number_input__WEBPACK_IMPORTED_MODULE_22__.NumberInputStepper),
/* harmony export */   "StyledStepper": () => (/* reexport safe */ _chakra_ui_number_input__WEBPACK_IMPORTED_MODULE_22__.StyledStepper),
/* harmony export */   "useNumberInput": () => (/* reexport safe */ _chakra_ui_number_input__WEBPACK_IMPORTED_MODULE_22__.useNumberInput),
/* harmony export */   "PinInput": () => (/* reexport safe */ _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__.PinInput),
/* harmony export */   "PinInputDescendantsProvider": () => (/* reexport safe */ _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__.PinInputDescendantsProvider),
/* harmony export */   "PinInputField": () => (/* reexport safe */ _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__.PinInputField),
/* harmony export */   "PinInputProvider": () => (/* reexport safe */ _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__.PinInputProvider),
/* harmony export */   "usePinInput": () => (/* reexport safe */ _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__.usePinInput),
/* harmony export */   "usePinInputContext": () => (/* reexport safe */ _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__.usePinInputContext),
/* harmony export */   "usePinInputDescendant": () => (/* reexport safe */ _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__.usePinInputDescendant),
/* harmony export */   "usePinInputDescendants": () => (/* reexport safe */ _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__.usePinInputDescendants),
/* harmony export */   "usePinInputDescendantsContext": () => (/* reexport safe */ _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__.usePinInputDescendantsContext),
/* harmony export */   "usePinInputField": () => (/* reexport safe */ _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__.usePinInputField),
/* harmony export */   "Popover": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.Popover),
/* harmony export */   "PopoverAnchor": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.PopoverAnchor),
/* harmony export */   "PopoverArrow": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.PopoverArrow),
/* harmony export */   "PopoverBody": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.PopoverBody),
/* harmony export */   "PopoverCloseButton": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.PopoverCloseButton),
/* harmony export */   "PopoverContent": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.PopoverContent),
/* harmony export */   "PopoverFooter": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.PopoverFooter),
/* harmony export */   "PopoverHeader": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.PopoverHeader),
/* harmony export */   "PopoverTrigger": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.PopoverTrigger),
/* harmony export */   "usePopover": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.usePopover),
/* harmony export */   "usePopoverContext": () => (/* reexport safe */ _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__.usePopoverContext),
/* harmony export */   "popperCSSVars": () => (/* reexport safe */ _chakra_ui_popper__WEBPACK_IMPORTED_MODULE_25__.popperCSSVars),
/* harmony export */   "usePopper": () => (/* reexport safe */ _chakra_ui_popper__WEBPACK_IMPORTED_MODULE_25__.usePopper),
/* harmony export */   "Portal": () => (/* reexport safe */ _chakra_ui_portal__WEBPACK_IMPORTED_MODULE_26__.Portal),
/* harmony export */   "PortalManager": () => (/* reexport safe */ _chakra_ui_portal__WEBPACK_IMPORTED_MODULE_26__.PortalManager),
/* harmony export */   "usePortalManager": () => (/* reexport safe */ _chakra_ui_portal__WEBPACK_IMPORTED_MODULE_26__.usePortalManager),
/* harmony export */   "CircularProgress": () => (/* reexport safe */ _chakra_ui_progress__WEBPACK_IMPORTED_MODULE_27__.CircularProgress),
/* harmony export */   "CircularProgressLabel": () => (/* reexport safe */ _chakra_ui_progress__WEBPACK_IMPORTED_MODULE_27__.CircularProgressLabel),
/* harmony export */   "Progress": () => (/* reexport safe */ _chakra_ui_progress__WEBPACK_IMPORTED_MODULE_27__.Progress),
/* harmony export */   "ProgressLabel": () => (/* reexport safe */ _chakra_ui_progress__WEBPACK_IMPORTED_MODULE_27__.ProgressLabel),
/* harmony export */   "Radio": () => (/* reexport safe */ _chakra_ui_radio__WEBPACK_IMPORTED_MODULE_28__.Radio),
/* harmony export */   "RadioGroup": () => (/* reexport safe */ _chakra_ui_radio__WEBPACK_IMPORTED_MODULE_28__.RadioGroup),
/* harmony export */   "useRadio": () => (/* reexport safe */ _chakra_ui_radio__WEBPACK_IMPORTED_MODULE_28__.useRadio),
/* harmony export */   "useRadioGroup": () => (/* reexport safe */ _chakra_ui_radio__WEBPACK_IMPORTED_MODULE_28__.useRadioGroup),
/* harmony export */   "useRadioGroupContext": () => (/* reexport safe */ _chakra_ui_radio__WEBPACK_IMPORTED_MODULE_28__.useRadioGroupContext),
/* harmony export */   "DefaultIcon": () => (/* reexport safe */ _chakra_ui_select__WEBPACK_IMPORTED_MODULE_29__.DefaultIcon),
/* harmony export */   "Select": () => (/* reexport safe */ _chakra_ui_select__WEBPACK_IMPORTED_MODULE_29__.Select),
/* harmony export */   "SelectField": () => (/* reexport safe */ _chakra_ui_select__WEBPACK_IMPORTED_MODULE_29__.SelectField),
/* harmony export */   "Skeleton": () => (/* reexport safe */ _chakra_ui_skeleton__WEBPACK_IMPORTED_MODULE_30__.Skeleton),
/* harmony export */   "SkeletonCircle": () => (/* reexport safe */ _chakra_ui_skeleton__WEBPACK_IMPORTED_MODULE_30__.SkeletonCircle),
/* harmony export */   "SkeletonText": () => (/* reexport safe */ _chakra_ui_skeleton__WEBPACK_IMPORTED_MODULE_30__.SkeletonText),
/* harmony export */   "RangeSlider": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.RangeSlider),
/* harmony export */   "RangeSliderFilledTrack": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.RangeSliderFilledTrack),
/* harmony export */   "RangeSliderMark": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.RangeSliderMark),
/* harmony export */   "RangeSliderProvider": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.RangeSliderProvider),
/* harmony export */   "RangeSliderThumb": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.RangeSliderThumb),
/* harmony export */   "RangeSliderTrack": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.RangeSliderTrack),
/* harmony export */   "Slider": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.Slider),
/* harmony export */   "SliderFilledTrack": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.SliderFilledTrack),
/* harmony export */   "SliderMark": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.SliderMark),
/* harmony export */   "SliderProvider": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.SliderProvider),
/* harmony export */   "SliderThumb": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.SliderThumb),
/* harmony export */   "SliderTrack": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.SliderTrack),
/* harmony export */   "useRangeSlider": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.useRangeSlider),
/* harmony export */   "useRangeSliderContext": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.useRangeSliderContext),
/* harmony export */   "useSlider": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.useSlider),
/* harmony export */   "useSliderContext": () => (/* reexport safe */ _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__.useSliderContext),
/* harmony export */   "Spinner": () => (/* reexport safe */ _chakra_ui_spinner__WEBPACK_IMPORTED_MODULE_32__.Spinner),
/* harmony export */   "Stat": () => (/* reexport safe */ _chakra_ui_stat__WEBPACK_IMPORTED_MODULE_33__.Stat),
/* harmony export */   "StatArrow": () => (/* reexport safe */ _chakra_ui_stat__WEBPACK_IMPORTED_MODULE_33__.StatArrow),
/* harmony export */   "StatDownArrow": () => (/* reexport safe */ _chakra_ui_stat__WEBPACK_IMPORTED_MODULE_33__.StatDownArrow),
/* harmony export */   "StatGroup": () => (/* reexport safe */ _chakra_ui_stat__WEBPACK_IMPORTED_MODULE_33__.StatGroup),
/* harmony export */   "StatHelpText": () => (/* reexport safe */ _chakra_ui_stat__WEBPACK_IMPORTED_MODULE_33__.StatHelpText),
/* harmony export */   "StatLabel": () => (/* reexport safe */ _chakra_ui_stat__WEBPACK_IMPORTED_MODULE_33__.StatLabel),
/* harmony export */   "StatNumber": () => (/* reexport safe */ _chakra_ui_stat__WEBPACK_IMPORTED_MODULE_33__.StatNumber),
/* harmony export */   "StatUpArrow": () => (/* reexport safe */ _chakra_ui_stat__WEBPACK_IMPORTED_MODULE_33__.StatUpArrow),
/* harmony export */   "Switch": () => (/* reexport safe */ _chakra_ui_switch__WEBPACK_IMPORTED_MODULE_34__.Switch),
/* harmony export */   "ColorModeContext": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.ColorModeContext),
/* harmony export */   "ColorModeProvider": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.ColorModeProvider),
/* harmony export */   "ColorModeScript": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.ColorModeScript),
/* harmony export */   "DarkMode": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.DarkMode),
/* harmony export */   "GlobalStyle": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.GlobalStyle),
/* harmony export */   "LightMode": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.LightMode),
/* harmony export */   "StylesProvider": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.StylesProvider),
/* harmony export */   "ThemeProvider": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.ThemeProvider),
/* harmony export */   "addPrefix": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.addPrefix),
/* harmony export */   "background": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.background),
/* harmony export */   "border": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.border),
/* harmony export */   "calc": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.calc),
/* harmony export */   "chakra": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.chakra),
/* harmony export */   "color": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.color),
/* harmony export */   "cookieStorageManager": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.cookieStorageManager),
/* harmony export */   "css": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.css),
/* harmony export */   "cssVar": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.cssVar),
/* harmony export */   "effect": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.effect),
/* harmony export */   "filter": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.filter),
/* harmony export */   "flexbox": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.flexbox),
/* harmony export */   "forwardRef": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.forwardRef),
/* harmony export */   "getCss": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.getCss),
/* harmony export */   "grid": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.grid),
/* harmony export */   "interactivity": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.interactivity),
/* harmony export */   "isStyleProp": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.isStyleProp),
/* harmony export */   "keyframes": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.keyframes),
/* harmony export */   "layout": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.layout),
/* harmony export */   "layoutPropNames": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.layoutPropNames),
/* harmony export */   "list": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.list),
/* harmony export */   "localStorageManager": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.localStorageManager),
/* harmony export */   "omitThemingProps": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.omitThemingProps),
/* harmony export */   "others": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.others),
/* harmony export */   "position": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.position),
/* harmony export */   "propNames": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.propNames),
/* harmony export */   "ring": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.ring),
/* harmony export */   "setScript": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.setScript),
/* harmony export */   "shouldForwardProp": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.shouldForwardProp),
/* harmony export */   "space": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.space),
/* harmony export */   "storageKey": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.storageKey),
/* harmony export */   "styled": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.styled),
/* harmony export */   "systemProps": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.systemProps),
/* harmony export */   "textDecoration": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.textDecoration),
/* harmony export */   "toCSSObject": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.toCSSObject),
/* harmony export */   "toCSSVar": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.toCSSVar),
/* harmony export */   "toVarDefinition": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.toVarDefinition),
/* harmony export */   "toVarReference": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.toVarReference),
/* harmony export */   "tokenToCSSVar": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.tokenToCSSVar),
/* harmony export */   "transform": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.transform),
/* harmony export */   "transition": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.transition),
/* harmony export */   "typography": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.typography),
/* harmony export */   "useChakra": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.useChakra),
/* harmony export */   "useColorMode": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.useColorMode),
/* harmony export */   "useColorModeValue": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.useColorModeValue),
/* harmony export */   "useMultiStyleConfig": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.useMultiStyleConfig),
/* harmony export */   "useProps": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.useProps),
/* harmony export */   "useStyleConfig": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.useStyleConfig),
/* harmony export */   "useStyles": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.useStyles),
/* harmony export */   "useTheme": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.useTheme),
/* harmony export */   "useToken": () => (/* reexport safe */ _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__.useToken),
/* harmony export */   "Tab": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.Tab),
/* harmony export */   "TabIndicator": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.TabIndicator),
/* harmony export */   "TabList": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.TabList),
/* harmony export */   "TabPanel": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.TabPanel),
/* harmony export */   "TabPanels": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.TabPanels),
/* harmony export */   "Tabs": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.Tabs),
/* harmony export */   "TabsDescendantsProvider": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.TabsDescendantsProvider),
/* harmony export */   "TabsProvider": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.TabsProvider),
/* harmony export */   "useTab": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.useTab),
/* harmony export */   "useTabIndicator": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.useTabIndicator),
/* harmony export */   "useTabList": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.useTabList),
/* harmony export */   "useTabPanel": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.useTabPanel),
/* harmony export */   "useTabPanels": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.useTabPanels),
/* harmony export */   "useTabs": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.useTabs),
/* harmony export */   "useTabsContext": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.useTabsContext),
/* harmony export */   "useTabsDescendant": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.useTabsDescendant),
/* harmony export */   "useTabsDescendants": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.useTabsDescendants),
/* harmony export */   "useTabsDescendantsContext": () => (/* reexport safe */ _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__.useTabsDescendantsContext),
/* harmony export */   "Tag": () => (/* reexport safe */ _chakra_ui_tag__WEBPACK_IMPORTED_MODULE_37__.Tag),
/* harmony export */   "TagCloseButton": () => (/* reexport safe */ _chakra_ui_tag__WEBPACK_IMPORTED_MODULE_37__.TagCloseButton),
/* harmony export */   "TagLabel": () => (/* reexport safe */ _chakra_ui_tag__WEBPACK_IMPORTED_MODULE_37__.TagLabel),
/* harmony export */   "TagLeftIcon": () => (/* reexport safe */ _chakra_ui_tag__WEBPACK_IMPORTED_MODULE_37__.TagLeftIcon),
/* harmony export */   "TagRightIcon": () => (/* reexport safe */ _chakra_ui_tag__WEBPACK_IMPORTED_MODULE_37__.TagRightIcon),
/* harmony export */   "Textarea": () => (/* reexport safe */ _chakra_ui_textarea__WEBPACK_IMPORTED_MODULE_38__.Textarea),
/* harmony export */   "createStandaloneToast": () => (/* reexport safe */ _chakra_ui_toast__WEBPACK_IMPORTED_MODULE_39__.createStandaloneToast),
/* harmony export */   "defaultStandaloneParam": () => (/* reexport safe */ _chakra_ui_toast__WEBPACK_IMPORTED_MODULE_39__.defaultStandaloneParam),
/* harmony export */   "toast": () => (/* reexport safe */ _chakra_ui_toast__WEBPACK_IMPORTED_MODULE_39__.toast),
/* harmony export */   "useToast": () => (/* reexport safe */ _chakra_ui_toast__WEBPACK_IMPORTED_MODULE_39__.useToast),
/* harmony export */   "Tooltip": () => (/* reexport safe */ _chakra_ui_tooltip__WEBPACK_IMPORTED_MODULE_40__.Tooltip),
/* harmony export */   "useTooltip": () => (/* reexport safe */ _chakra_ui_tooltip__WEBPACK_IMPORTED_MODULE_40__.useTooltip),
/* harmony export */   "Collapse": () => (/* reexport safe */ _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_41__.Collapse),
/* harmony export */   "EASINGS": () => (/* reexport safe */ _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_41__.EASINGS),
/* harmony export */   "Fade": () => (/* reexport safe */ _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_41__.Fade),
/* harmony export */   "ScaleFade": () => (/* reexport safe */ _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_41__.ScaleFade),
/* harmony export */   "Slide": () => (/* reexport safe */ _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_41__.Slide),
/* harmony export */   "SlideFade": () => (/* reexport safe */ _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_41__.SlideFade),
/* harmony export */   "fadeConfig": () => (/* reexport safe */ _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_41__.fadeConfig),
/* harmony export */   "scaleFadeConfig": () => (/* reexport safe */ _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_41__.scaleFadeConfig),
/* harmony export */   "slideFadeConfig": () => (/* reexport safe */ _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_41__.slideFadeConfig),
/* harmony export */   "VisuallyHidden": () => (/* reexport safe */ _chakra_ui_visually_hidden__WEBPACK_IMPORTED_MODULE_42__.VisuallyHidden),
/* harmony export */   "VisuallyHiddenInput": () => (/* reexport safe */ _chakra_ui_visually_hidden__WEBPACK_IMPORTED_MODULE_42__.VisuallyHiddenInput),
/* harmony export */   "visuallyHiddenStyle": () => (/* reexport safe */ _chakra_ui_visually_hidden__WEBPACK_IMPORTED_MODULE_42__.visuallyHiddenStyle),
/* harmony export */   "ChakraProvider": () => (/* binding */ ChakraProvider),
/* harmony export */   "extendTheme": () => (/* binding */ extendTheme),
/* harmony export */   "mergeThemeOverride": () => (/* binding */ mergeThemeOverride),
/* harmony export */   "withDefaultColorScheme": () => (/* binding */ withDefaultColorScheme),
/* harmony export */   "withDefaultProps": () => (/* binding */ withDefaultProps),
/* harmony export */   "withDefaultSize": () => (/* binding */ withDefaultSize),
/* harmony export */   "withDefaultVariant": () => (/* binding */ withDefaultVariant)
/* harmony export */ });
/* harmony import */ var _chakra_ui_provider__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @chakra-ui/provider */ "./node_modules/@chakra-ui/provider/dist/chakra-ui-provider.esm.js");
/* harmony import */ var _chakra_ui_theme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chakra-ui/theme */ "./node_modules/@chakra-ui/theme/dist/chakra-ui-theme.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/lodash.mergewith/index.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_45__);
/* harmony import */ var _chakra_ui_accordion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/accordion */ "./node_modules/@chakra-ui/accordion/dist/chakra-ui-accordion.esm.js");
/* harmony import */ var _chakra_ui_alert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/alert */ "./node_modules/@chakra-ui/alert/dist/chakra-ui-alert.esm.js");
/* harmony import */ var _chakra_ui_avatar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/avatar */ "./node_modules/@chakra-ui/avatar/dist/chakra-ui-avatar.esm.js");
/* harmony import */ var _chakra_ui_breadcrumb__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/breadcrumb */ "./node_modules/@chakra-ui/breadcrumb/dist/chakra-ui-breadcrumb.esm.js");
/* harmony import */ var _chakra_ui_button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/button */ "./node_modules/@chakra-ui/button/dist/chakra-ui-button.esm.js");
/* harmony import */ var _chakra_ui_checkbox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/checkbox */ "./node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js");
/* harmony import */ var _chakra_ui_close_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/close-button */ "./node_modules/@chakra-ui/close-button/dist/chakra-ui-close-button.esm.js");
/* harmony import */ var _chakra_ui_counter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @chakra-ui/counter */ "./node_modules/@chakra-ui/counter/dist/chakra-ui-counter.esm.js");
/* harmony import */ var _chakra_ui_css_reset__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @chakra-ui/css-reset */ "./node_modules/@chakra-ui/css-reset/dist/chakra-ui-css-reset.esm.js");
/* harmony import */ var _chakra_ui_editable__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @chakra-ui/editable */ "./node_modules/@chakra-ui/editable/dist/chakra-ui-editable.esm.js");
/* harmony import */ var _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @chakra-ui/form-control */ "./node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js");
/* harmony import */ var _chakra_ui_control_box__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @chakra-ui/control-box */ "./node_modules/@chakra-ui/control-box/dist/chakra-ui-control-box.esm.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");
/* harmony import */ var _chakra_ui_icon__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @chakra-ui/icon */ "./node_modules/@chakra-ui/icon/dist/chakra-ui-icon.esm.js");
/* harmony import */ var _chakra_ui_image__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @chakra-ui/image */ "./node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js");
/* harmony import */ var _chakra_ui_input__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @chakra-ui/input */ "./node_modules/@chakra-ui/input/dist/chakra-ui-input.esm.js");
/* harmony import */ var _chakra_ui_layout__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @chakra-ui/layout */ "./node_modules/@chakra-ui/layout/dist/chakra-ui-layout.esm.js");
/* harmony import */ var _chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @chakra-ui/media-query */ "./node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js");
/* harmony import */ var _chakra_ui_table__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @chakra-ui/table */ "./node_modules/@chakra-ui/table/dist/chakra-ui-table.esm.js");
/* harmony import */ var _chakra_ui_menu__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @chakra-ui/menu */ "./node_modules/@chakra-ui/menu/dist/chakra-ui-menu.esm.js");
/* harmony import */ var _chakra_ui_modal__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @chakra-ui/modal */ "./node_modules/@chakra-ui/modal/dist/chakra-ui-modal.esm.js");
/* harmony import */ var _chakra_ui_number_input__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @chakra-ui/number-input */ "./node_modules/@chakra-ui/number-input/dist/chakra-ui-number-input.esm.js");
/* harmony import */ var _chakra_ui_pin_input__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @chakra-ui/pin-input */ "./node_modules/@chakra-ui/pin-input/dist/chakra-ui-pin-input.esm.js");
/* harmony import */ var _chakra_ui_popover__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @chakra-ui/popover */ "./node_modules/@chakra-ui/popover/dist/chakra-ui-popover.esm.js");
/* harmony import */ var _chakra_ui_popper__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @chakra-ui/popper */ "./node_modules/@chakra-ui/popper/dist/chakra-ui-popper.esm.js");
/* harmony import */ var _chakra_ui_portal__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @chakra-ui/portal */ "./node_modules/@chakra-ui/portal/dist/chakra-ui-portal.esm.js");
/* harmony import */ var _chakra_ui_progress__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @chakra-ui/progress */ "./node_modules/@chakra-ui/progress/dist/chakra-ui-progress.esm.js");
/* harmony import */ var _chakra_ui_radio__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @chakra-ui/radio */ "./node_modules/@chakra-ui/radio/dist/chakra-ui-radio.esm.js");
/* harmony import */ var _chakra_ui_select__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @chakra-ui/select */ "./node_modules/@chakra-ui/select/dist/chakra-ui-select.esm.js");
/* harmony import */ var _chakra_ui_skeleton__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @chakra-ui/skeleton */ "./node_modules/@chakra-ui/skeleton/dist/chakra-ui-skeleton.esm.js");
/* harmony import */ var _chakra_ui_slider__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @chakra-ui/slider */ "./node_modules/@chakra-ui/slider/dist/chakra-ui-slider.esm.js");
/* harmony import */ var _chakra_ui_spinner__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @chakra-ui/spinner */ "./node_modules/@chakra-ui/spinner/dist/chakra-ui-spinner.esm.js");
/* harmony import */ var _chakra_ui_stat__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @chakra-ui/stat */ "./node_modules/@chakra-ui/stat/dist/chakra-ui-stat.esm.js");
/* harmony import */ var _chakra_ui_switch__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @chakra-ui/switch */ "./node_modules/@chakra-ui/switch/dist/chakra-ui-switch.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_tabs__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @chakra-ui/tabs */ "./node_modules/@chakra-ui/tabs/dist/chakra-ui-tabs.esm.js");
/* harmony import */ var _chakra_ui_tag__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @chakra-ui/tag */ "./node_modules/@chakra-ui/tag/dist/chakra-ui-tag.esm.js");
/* harmony import */ var _chakra_ui_textarea__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @chakra-ui/textarea */ "./node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js");
/* harmony import */ var _chakra_ui_toast__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @chakra-ui/toast */ "./node_modules/@chakra-ui/toast/dist/chakra-ui-toast.esm.js");
/* harmony import */ var _chakra_ui_tooltip__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @chakra-ui/tooltip */ "./node_modules/@chakra-ui/tooltip/dist/chakra-ui-tooltip.esm.js");
/* harmony import */ var _chakra_ui_transition__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @chakra-ui/transition */ "./node_modules/@chakra-ui/transition/dist/chakra-ui-transition.esm.js");
/* harmony import */ var _chakra_ui_visually_hidden__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @chakra-ui/visually-hidden */ "./node_modules/@chakra-ui/visually-hidden/dist/chakra-ui-visually-hidden.esm.js");















































var ChakraProvider = _chakra_ui_provider__WEBPACK_IMPORTED_MODULE_43__.ChakraProvider;
ChakraProvider.defaultProps = {
  theme: _chakra_ui_theme__WEBPACK_IMPORTED_MODULE_0__.theme
};

/**
 * NOTE: This got too complex to manage and it's not worth the extra complexity.
 * We'll re-evaluate this API in the future releases.
 *
 * Function to override or customize the Chakra UI theme conveniently.
 * First extension overrides the baseTheme and following extensions override the preceding extensions.
 *
 * @example:
 * import { theme as baseTheme, extendTheme, withDefaultColorScheme } from '@chakra-ui/react'
 *
 * const customTheme = extendTheme(
 *   {
 *     colors: {
 *       brand: {
 *         500: "#b4d455",
 *       },
 *     },
 *   },
 *   withDefaultColorScheme({ colorScheme: "red" }),
 *   baseTheme // optional
 * )
 */
function extendTheme() {
  for (var _len = arguments.length, extensions = new Array(_len), _key = 0; _key < _len; _key++) {
    extensions[_key] = arguments[_key];
  }

  var overrides = [].concat(extensions);
  var baseTheme = extensions[extensions.length - 1];

  if ((0,_chakra_ui_theme__WEBPACK_IMPORTED_MODULE_0__.isChakraTheme)(baseTheme) && // this ensures backward compatibility
  // previously only `extendTheme(override, baseTheme?)` was allowed
  overrides.length > 1) {
    overrides = overrides.slice(0, overrides.length - 1);
  } else {
    baseTheme = _chakra_ui_theme__WEBPACK_IMPORTED_MODULE_0__.theme;
  }

  return _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.pipe.apply(void 0, overrides.map(function (extension) {
    return function (prevTheme) {
      return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.isFunction)(extension) ? extension(prevTheme) : mergeThemeOverride(prevTheme, extension);
    };
  }))(baseTheme);
}
function mergeThemeOverride() {
  for (var _len2 = arguments.length, overrides = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    overrides[_key2] = arguments[_key2];
  }

  return _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_45___default().apply(void 0, [{}].concat(overrides, [mergeThemeCustomizer]));
}

function mergeThemeCustomizer(source, override, key, object) {
  if (((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.isFunction)(source) || (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.isFunction)(override)) && Object.prototype.hasOwnProperty.call(object, key)) {
    return function () {
      var sourceValue = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.isFunction)(source) ? source.apply(void 0, arguments) : source;
      var overrideValue = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.isFunction)(override) ? override.apply(void 0, arguments) : override;
      return _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_45___default()({}, sourceValue, overrideValue, mergeThemeCustomizer);
    };
  } // fallback to default behaviour


  return undefined;
}

function withDefaultColorScheme(_ref) {
  var colorScheme = _ref.colorScheme,
      components = _ref.components;
  return function (theme) {
    var names = Object.keys(theme.components || {});

    if (Array.isArray(components)) {
      names = components;
    } else if ((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.isObject)(components)) {
      names = Object.keys(components);
    }

    return mergeThemeOverride(theme, {
      components: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.fromEntries)(names.map(function (componentName) {
        var withColorScheme = {
          defaultProps: {
            colorScheme: colorScheme
          }
        };
        return [componentName, withColorScheme];
      }))
    });
  };
}

function withDefaultSize(_ref) {
  var size = _ref.size,
      components = _ref.components;
  return function (theme) {
    var names = Object.keys(theme.components || {});

    if (Array.isArray(components)) {
      names = components;
    } else if ((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.isObject)(components)) {
      names = Object.keys(components);
    }

    return mergeThemeOverride(theme, {
      components: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.fromEntries)(names.map(function (componentName) {
        var withSize = {
          defaultProps: {
            size: size
          }
        };
        return [componentName, withSize];
      }))
    });
  };
}

function withDefaultVariant(_ref) {
  var variant = _ref.variant,
      components = _ref.components;
  return function (theme) {
    var names = Object.keys(theme.components || {});

    if (Array.isArray(components)) {
      names = components;
    } else if ((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.isObject)(components)) {
      names = Object.keys(components);
    }

    return mergeThemeOverride(theme, {
      components: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.fromEntries)(names.map(function (componentName) {
        var withVariant = {
          defaultProps: {
            variant: variant
          }
        };
        return [componentName, withVariant];
      }))
    });
  };
}

function withDefaultProps(_ref) {
  var _ref$defaultProps = _ref.defaultProps,
      colorScheme = _ref$defaultProps.colorScheme,
      variant = _ref$defaultProps.variant,
      size = _ref$defaultProps.size,
      components = _ref.components;

  var identity = function identity(t) {
    return t;
  };

  var fns = [colorScheme ? withDefaultColorScheme({
    colorScheme: colorScheme,
    components: components
  }) : identity, size ? withDefaultSize({
    size: size,
    components: components
  }) : identity, variant ? withDefaultVariant({
    variant: variant,
    components: components
  }) : identity];
  return function (theme) {
    return mergeThemeOverride(_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_44__.pipe.apply(void 0, fns)(theme));
  };
}




/***/ }),

/***/ "./node_modules/@chakra-ui/select/dist/chakra-ui-select.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@chakra-ui/select/dist/chakra-ui-select.esm.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DefaultIcon": () => (/* binding */ DefaultIcon),
/* harmony export */   "Select": () => (/* binding */ Select),
/* harmony export */   "SelectField": () => (/* binding */ SelectField)
/* harmony export */ });
/* harmony import */ var _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/form-control */ "./node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/styled-system/dist/chakra-ui-styled-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/lodash.mergewith/index.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");





function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["children", "placeholder", "className"],
    _excluded2 = ["rootProps", "placeholder", "icon", "color", "height", "h", "minH", "minHeight", "iconColor", "iconSize", "isFullWidth"],
    _excluded3 = ["children"];
var SelectField = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var children = props.children,
      placeholder = props.placeholder,
      className = props.className,
      rest = _objectWithoutPropertiesLoose(props, _excluded);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.select, _extends({}, rest, {
    ref: ref,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-select", className)
  }), placeholder && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("option", {
    value: ""
  }, placeholder), children);
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  SelectField.displayName = "SelectField";
}

/**
 * React component used to select one item from a list of options.
 */
var Select = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useMultiStyleConfig)("Select", props);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.omitThemingProps)(props),
      rootProps = _omitThemingProps.rootProps,
      placeholder = _omitThemingProps.placeholder,
      icon = _omitThemingProps.icon,
      color = _omitThemingProps.color,
      height = _omitThemingProps.height,
      h = _omitThemingProps.h,
      minH = _omitThemingProps.minH,
      minHeight = _omitThemingProps.minHeight,
      iconColor = _omitThemingProps.iconColor,
      iconSize = _omitThemingProps.iconSize;
      _omitThemingProps.isFullWidth;
      var rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);

  var _split = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.split)(rest, _chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.layoutPropNames),
      layoutProps = _split[0],
      otherProps = _split[1];

  var ownProps = (0,_chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_4__.useFormControl)(otherProps);
  var rootStyles = {
    width: "100%",
    height: "fit-content",
    position: "relative",
    color: color
  };
  var fieldStyles = _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_5___default()({
    paddingEnd: "2rem"
  }, styles.field, {
    _focus: {
      zIndex: "unset"
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.div, _extends({
    className: "chakra-select__wrapper",
    __css: rootStyles
  }, layoutProps, rootProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(SelectField, _extends({
    ref: ref,
    height: h != null ? h : height,
    minH: minH != null ? minH : minHeight,
    placeholder: placeholder
  }, ownProps, {
    __css: fieldStyles
  }), props.children), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(SelectIcon, _extends({
    "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(ownProps.disabled)
  }, (iconColor || color) && {
    color: iconColor || color
  }, {
    __css: styles.icon
  }, iconSize && {
    fontSize: iconSize
  }), icon));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Select.displayName = "Select";
}

var DefaultIcon = function DefaultIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
  }));
};
var IconWrapper = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra)("div", {
  baseStyle: {
    position: "absolute",
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    pointerEvents: "none",
    top: "50%",
    transform: "translateY(-50%)"
  }
});

var SelectIcon = function SelectIcon(props) {
  var _props$children = props.children,
      children = _props$children === void 0 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultIcon, null) : _props$children,
      rest = _objectWithoutPropertiesLoose(props, _excluded3);

  var clone = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children, {
    role: "presentation",
    className: "chakra-select__icon",
    focusable: false,
    "aria-hidden": true,
    // force icon to adhere to `IconWrapper` styles
    style: {
      width: "1em",
      height: "1em",
      color: "currentColor"
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconWrapper, _extends({}, rest, {
    className: "chakra-select__icon-wrapper"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children) ? clone : null);
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  SelectIcon.displayName = "SelectIcon";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/skeleton/dist/chakra-ui-skeleton.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@chakra-ui/skeleton/dist/chakra-ui-skeleton.esm.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Skeleton": () => (/* binding */ Skeleton),
/* harmony export */   "SkeletonCircle": () => (/* binding */ SkeletonCircle),
/* harmony export */   "SkeletonText": () => (/* binding */ SkeletonText)
/* harmony export */ });
/* harmony import */ var _chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/media-query */ "./node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");






function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["startColor", "endColor", "isLoaded", "fadeDuration", "speed", "className"],
    _excluded2 = ["noOfLines", "spacing", "skeletonHeight", "className", "startColor", "endColor", "isLoaded", "fadeDuration", "speed", "children"],
    _excluded3 = ["size"];
var StyledSkeleton = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra)("div", {
  baseStyle: {
    boxShadow: "none",
    backgroundClip: "padding-box",
    cursor: "default",
    color: "transparent",
    pointerEvents: "none",
    userSelect: "none",
    "&::before, &::after, *": {
      visibility: "hidden"
    }
  }
});
var fade = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__.keyframes)({
  from: {
    opacity: 0
  },
  to: {
    opacity: 1
  }
});

var useIsFirstRender = function useIsFirstRender() {
  var isFirstRender = react__WEBPACK_IMPORTED_MODULE_0__.useRef(true);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    isFirstRender.current = false;
  }, []);
  return isFirstRender.current;
};

var Skeleton = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyleConfig)("Skeleton", props);
  var isFirstRender = useIsFirstRender();

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.omitThemingProps)(props);
      _omitThemingProps.startColor;
      _omitThemingProps.endColor;
      var isLoaded = _omitThemingProps.isLoaded,
      fadeDuration = _omitThemingProps.fadeDuration;
      _omitThemingProps.speed;
      var className = _omitThemingProps.className,
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);

  var wasPreviouslyLoaded = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_3__.usePrevious)(isLoaded);

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-skeleton", className);

  if (isLoaded) {
    var animation = isFirstRender || wasPreviouslyLoaded ? "none" : fade + " " + fadeDuration + "s";
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.div, _extends({
      ref: ref,
      className: _className,
      __css: {
        animation: animation
      }
    }, rest));
  }

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledSkeleton, _extends({
    ref: ref,
    className: _className
  }, rest, {
    __css: styles
  }));
});
Skeleton.defaultProps = {
  fadeDuration: 0.4,
  speed: 0.8
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  Skeleton.displayName = "Skeleton";
}

function range(count) {
  return Array(count).fill(1).map(function (_, index) {
    return index + 1;
  });
}

var defaultNoOfLines = 3;
var SkeletonText = function SkeletonText(props) {
  var _props$noOfLines = props.noOfLines,
      noOfLines = _props$noOfLines === void 0 ? defaultNoOfLines : _props$noOfLines,
      _props$spacing = props.spacing,
      spacing = _props$spacing === void 0 ? "0.5rem" : _props$spacing,
      _props$skeletonHeight = props.skeletonHeight,
      skeletonHeight = _props$skeletonHeight === void 0 ? "0.5rem" : _props$skeletonHeight,
      className = props.className,
      startColor = props.startColor,
      endColor = props.endColor,
      isLoaded = props.isLoaded,
      fadeDuration = props.fadeDuration,
      speed = props.speed,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, _excluded2);

  var noOfLinesValue = (0,_chakra_ui_media_query__WEBPACK_IMPORTED_MODULE_5__.useBreakpointValue)(typeof noOfLines === "number" ? [noOfLines] : noOfLines) || defaultNoOfLines;
  var numbers = range(noOfLinesValue);

  var getWidth = function getWidth(index) {
    if (noOfLinesValue > 1) {
      return index === numbers.length ? "80%" : "100%";
    }

    return "100%";
  };

  var _className = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-skeleton__group", className);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.div, _extends({
    className: _className
  }, rest), numbers.map(function (number, index) {
    if (isLoaded && index > 0) {
      // skip other lines
      return null;
    }

    var sizeProps = isLoaded ? null : {
      mb: number === numbers.length ? "0" : spacing,
      width: getWidth(number),
      height: skeletonHeight
    };
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Skeleton, _extends({
      key: numbers.length.toString() + number,
      startColor: startColor,
      endColor: endColor,
      isLoaded: isLoaded,
      fadeDuration: fadeDuration,
      speed: speed
    }, sizeProps), // allows animating the children
    index === 0 ? children : undefined);
  }));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  SkeletonText.displayName = "SkeletonText";
}

var SkeletonCircle = function SkeletonCircle(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? "2rem" : _ref$size,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded3);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Skeleton, _extends({
    borderRadius: "full",
    boxSize: size
  }, rest));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  SkeletonCircle.displayName = "SkeletonCircle";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/slider/dist/chakra-ui-slider.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@chakra-ui/slider/dist/chakra-ui-slider.esm.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RangeSlider": () => (/* binding */ RangeSlider),
/* harmony export */   "RangeSliderFilledTrack": () => (/* binding */ RangeSliderFilledTrack),
/* harmony export */   "RangeSliderMark": () => (/* binding */ RangeSliderMark),
/* harmony export */   "RangeSliderProvider": () => (/* binding */ RangeSliderProvider),
/* harmony export */   "RangeSliderThumb": () => (/* binding */ RangeSliderThumb),
/* harmony export */   "RangeSliderTrack": () => (/* binding */ RangeSliderTrack),
/* harmony export */   "Slider": () => (/* binding */ Slider),
/* harmony export */   "SliderFilledTrack": () => (/* binding */ SliderFilledTrack),
/* harmony export */   "SliderMark": () => (/* binding */ SliderMark),
/* harmony export */   "SliderProvider": () => (/* binding */ SliderProvider),
/* harmony export */   "SliderThumb": () => (/* binding */ SliderThumb),
/* harmony export */   "SliderTrack": () => (/* binding */ SliderTrack),
/* harmony export */   "useRangeSlider": () => (/* binding */ useRangeSlider),
/* harmony export */   "useRangeSliderContext": () => (/* binding */ useRangeSliderContext),
/* harmony export */   "useSlider": () => (/* binding */ useSlider),
/* harmony export */   "useSliderContext": () => (/* binding */ useSliderContext)
/* harmony export */ });
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/css-box-model/dist/css-box-model.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");







function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function getIds(id) {
  return {
    root: "slider-root-" + id,
    getThumb: function getThumb(i) {
      return "slider-thumb-" + id + "-" + i;
    },
    getInput: function getInput(i) {
      return "slider-input-" + id + "-" + i;
    },
    track: "slider-track-" + id,
    innerTrack: "slider-filled-track-" + id,
    getMarker: function getMarker(i) {
      return "slider-marker-" + id + "-" + i;
    },
    output: "slider-output-" + id
  };
}
function orient$1(options) {
  var orientation = options.orientation,
      vertical = options.vertical,
      horizontal = options.horizontal;
  return orientation === "vertical" ? vertical : horizontal;
}
var zeroRect = {
  width: 0,
  height: 0
};
function getStyles(options) {
  var orientation = options.orientation,
      thumbPercents = options.thumbPercents,
      thumbRects = options.thumbRects,
      isReversed = options.isReversed;

  var getThumbStyle = function getThumbStyle(i) {
    return _extends({
      position: "absolute",
      userSelect: "none",
      WebkitUserSelect: "none",
      MozUserSelect: "none",
      msUserSelect: "none",
      touchAction: "none"
    }, orient$1({
      orientation: orientation,
      vertical: {
        bottom: "calc(" + thumbPercents[i] + "% - " + thumbRects[i].height / 2 + "px)"
      },
      horizontal: {
        left: "calc(" + thumbPercents[i] + "% - " + thumbRects[i].width / 2 + "px)"
      }
    }));
  };

  var size = orientation === "vertical" ? thumbRects.reduce(function (a, b) {
    return a.height > b.height ? a : b;
  }, zeroRect) : thumbRects.reduce(function (a, b) {
    return a.width > b.width ? a : b;
  }, zeroRect);

  var rootStyle = _extends({
    position: "relative",
    touchAction: "none",
    WebkitTapHighlightColor: "rgba(0,0,0,0)",
    userSelect: "none",
    outline: 0
  }, orient$1({
    orientation: orientation,
    vertical: {
      paddingLeft: size.width / 2,
      paddingRight: size.width / 2
    },
    horizontal: {
      paddingTop: size.height / 2,
      paddingBottom: size.height / 2
    }
  }));

  var trackStyle = _extends({
    position: "absolute"
  }, orient$1({
    orientation: orientation,
    vertical: {
      left: "50%",
      transform: "translateX(-50%)",
      height: "100%"
    },
    horizontal: {
      top: "50%",
      transform: "translateY(-50%)",
      width: "100%"
    }
  }));

  var isSingleThumb = thumbPercents.length === 1;
  var fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];
  var range = isSingleThumb ? fallback : thumbPercents;
  var start = range[0];

  if (!isSingleThumb && isReversed) {
    start = 100 - start;
  }

  var percent = Math.abs(range[range.length - 1] - range[0]);

  var innerTrackStyle = _extends({}, trackStyle, orient$1({
    orientation: orientation,
    vertical: isReversed ? {
      height: percent + "%",
      top: start + "%"
    } : {
      height: percent + "%",
      bottom: start + "%"
    },
    horizontal: isReversed ? {
      width: percent + "%",
      right: start + "%"
    } : {
      width: percent + "%",
      left: start + "%"
    }
  }));

  return {
    trackStyle: trackStyle,
    innerTrackStyle: innerTrackStyle,
    rootStyle: rootStyle,
    getThumbStyle: getThumbStyle
  };
}
function getIsReversed(options) {
  var isReversed = options.isReversed,
      direction = options.direction,
      orientation = options.orientation;

  if (direction === "ltr" || orientation === "vertical") {
    return isReversed;
  } // only flip for horizontal RTL
  // if isReserved 🔜  otherwise  🔚


  return !isReversed;
}

var _excluded$3 = ["min", "max", "onChange", "value", "defaultValue", "isReversed", "direction", "orientation", "id", "isDisabled", "isReadOnly", "onChangeStart", "onChangeEnd", "step", "getAriaValueText", "aria-valuetext", "aria-label", "aria-labelledby", "name", "focusThumbOnChange", "minStepsBetweenThumbs"],
    _excluded2 = ["index"],
    _excluded3 = ["value"],
    _excluded4 = ["index"];

/**
 * React hook that implements an accessible range slider.
 *
 * It is an alternative to `<input type="range" />`, and returns
 * prop getters for the component parts
 *
 * @see Docs     https://chakra-ui.com/docs/form/slider
 * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider
 */
function useRangeSlider(props) {
  var _props$min = props.min,
      min = _props$min === void 0 ? 0 : _props$min,
      _props$max = props.max,
      max = _props$max === void 0 ? 100 : _props$max,
      onChange = props.onChange,
      valueProp = props.value,
      defaultValue = props.defaultValue,
      isReversedProp = props.isReversed,
      _props$direction = props.direction,
      direction = _props$direction === void 0 ? "ltr" : _props$direction,
      _props$orientation = props.orientation,
      orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation,
      idProp = props.id,
      isDisabled = props.isDisabled,
      isReadOnly = props.isReadOnly,
      onChangeStartProp = props.onChangeStart,
      onChangeEndProp = props.onChangeEnd,
      _props$step = props.step,
      step = _props$step === void 0 ? 1 : _props$step,
      getAriaValueTextProp = props.getAriaValueText,
      ariaValueText = props["aria-valuetext"],
      ariaLabel = props["aria-label"],
      ariaLabelledBy = props["aria-labelledby"],
      name = props.name,
      _props$focusThumbOnCh = props.focusThumbOnChange,
      focusThumbOnChange = _props$focusThumbOnCh === void 0 ? true : _props$focusThumbOnCh,
      _props$minStepsBetwee = props.minStepsBetweenThumbs,
      minStepsBetweenThumbs = _props$minStepsBetwee === void 0 ? 0 : _props$minStepsBetwee,
      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$3);

  var onChangeStart = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChangeStartProp);
  var onChangeEnd = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChangeEndProp);
  var getAriaValueText = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(getAriaValueTextProp);
  var isReversed = getIsReversed({
    isReversed: isReversedProp,
    direction: direction,
    orientation: orientation
  });

  var _useControllableState = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useControllableState)({
    value: valueProp,
    defaultValue: defaultValue != null ? defaultValue : [25, 75],
    onChange: onChange
  }),
      valueState = _useControllableState[0],
      setValue = _useControllableState[1];

  if (!Array.isArray(valueState)) {
    throw new TypeError("[range-slider] You passed an invalid value for `value` or `defaultValue`, expected `Array` but got `" + typeof valueState + "`");
  }

  var _useBoolean = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useBoolean)(),
      isDragging = _useBoolean[0],
      setDragging = _useBoolean[1];

  var _useBoolean2 = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useBoolean)(),
      isFocused = _useBoolean2[0],
      setFocused = _useBoolean2[1];

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1),
      activeIndex = _useState[0],
      setActiveIndex = _useState[1];

  var eventSourceRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var isInteractive = !(isDisabled || isReadOnly);
  var initialValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(valueState);
  var value = valueState.map(function (val) {
    return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(val, min, max);
  });
  var valueRef = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useLatestRef)(value);
  var spacing = minStepsBetweenThumbs * step;
  var valueBounds = getValueBounds(value, min, max, spacing);
  var reversedValue = value.map(function (val) {
    return max - val + min;
  });
  var thumbValues = isReversed ? reversedValue : value;
  var thumbPercents = thumbValues.map(function (val) {
    return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.valueToPercent)(val, min, max);
  });
  var isVertical = orientation === "vertical";

  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.from({
    length: value.length
  }).map(function () {
    return {
      width: 0,
      height: 0
    };
  })),
      thumbRects = _useState2[0],
      setThumbRects = _useState2[1];

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    var _rootRef$current;

    if (!rootRef.current) return;
    var thumbs = Array.from((_rootRef$current = rootRef.current) == null ? void 0 : _rootRef$current.querySelectorAll("[role=slider]"));
    var rects = thumbs.map(function (el) {
      return {
        width: el.offsetWidth,
        height: el.offsetHeight
      };
    });
    if (rects.length) setThumbRects(rects);
  }, []);
  /**
   * Let's keep a reference to the slider track and thumb
   */

  var trackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var rootRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var uuid = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useId)(idProp);
  var ids = getIds(uuid);
  var getValueFromPointer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    var _event$touches$, _event$touches;

    if (!trackRef.current) return;
    eventSourceRef.current = "pointer";
    var rect = trackRef.current.getBoundingClientRect();

    var _ref = (_event$touches$ = (_event$touches = event.touches) == null ? void 0 : _event$touches[0]) != null ? _event$touches$ : event,
        clientX = _ref.clientX,
        clientY = _ref.clientY;

    var diff = isVertical ? rect.bottom - clientY : clientX - rect.left;
    var length = isVertical ? rect.height : rect.width;
    var percent = diff / length;
    if (isReversed) percent = 1 - percent;
    return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.percentToValue)(percent, min, max);
  }, [isVertical, isReversed, max, min]);
  var tenSteps = (max - min) / 10;
  var oneStep = step || (max - min) / 100;
  var actions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    return {
      setValueAtIndex: function setValueAtIndex(index, val) {
        if (!isInteractive) return;
        var bounds = valueBounds[index];
        val = parseFloat((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.roundValueToStep)(val, bounds.min, oneStep));
        val = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(val, bounds.min, bounds.max);
        var next = [].concat(value);
        next[index] = val;
        setValue(next);
      },
      setActiveIndex: setActiveIndex,
      stepUp: function stepUp(index, step) {
        if (step === void 0) {
          step = oneStep;
        }

        var valueAtIndex = value[index];
        var next = isReversed ? valueAtIndex - step : valueAtIndex + step;
        actions.setValueAtIndex(index, next);
      },
      stepDown: function stepDown(index, step) {
        if (step === void 0) {
          step = oneStep;
        }

        var valueAtIndex = value[index];
        var next = isReversed ? valueAtIndex + step : valueAtIndex - step;
        actions.setValueAtIndex(index, next);
      },
      reset: function reset() {
        return setValue(initialValue.current);
      }
    };
  }, [oneStep, value, isReversed, setValue, isInteractive, valueBounds]);
  /**
   * Keyboard interaction to ensure users can operate
   * the slider using only their keyboard.
   */

  var onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    var eventKey = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeEventKey)(event);
    var keyMap = {
      ArrowRight: function ArrowRight() {
        return actions.stepUp(activeIndex);
      },
      ArrowUp: function ArrowUp() {
        return actions.stepUp(activeIndex);
      },
      ArrowLeft: function ArrowLeft() {
        return actions.stepDown(activeIndex);
      },
      ArrowDown: function ArrowDown() {
        return actions.stepDown(activeIndex);
      },
      PageUp: function PageUp() {
        return actions.stepUp(activeIndex, tenSteps);
      },
      PageDown: function PageDown() {
        return actions.stepDown(activeIndex, tenSteps);
      },
      Home: function Home() {
        var value = valueBounds[activeIndex].min;
        actions.setValueAtIndex(activeIndex, value);
      },
      End: function End() {
        var value = valueBounds[activeIndex].max;
        actions.setValueAtIndex(activeIndex, value);
      }
    };
    var action = keyMap[eventKey];

    if (action) {
      event.preventDefault();
      event.stopPropagation();
      action(event);
      eventSourceRef.current = "keyboard";
    }
  }, [actions, activeIndex, tenSteps, valueBounds]);
  /**
   * Compute styles for all component parts.
   */

  var _useMemo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    return getStyles({
      isReversed: isReversed,
      orientation: orientation,
      thumbRects: thumbRects,
      thumbPercents: thumbPercents
    });
  }, [isReversed, orientation, thumbPercents, thumbRects]),
      getThumbStyle = _useMemo.getThumbStyle,
      rootStyle = _useMemo.rootStyle,
      trackStyle = _useMemo.trackStyle,
      innerTrackStyle = _useMemo.innerTrackStyle;

  var focusThumb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (index) {
    var idx = index != null ? index : activeIndex;

    if (idx !== -1 && focusThumbOnChange) {
      var _rootRef$current2;

      var id = ids.getThumb(idx);
      var thumb = (_rootRef$current2 = rootRef.current) == null ? void 0 : _rootRef$current2.ownerDocument.getElementById(id);

      if (thumb) {
        setTimeout(function () {
          return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.focus)(thumb);
        });
      }
    }
  }, [focusThumbOnChange, activeIndex, ids]);
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useUpdateEffect)(function () {
    if (eventSourceRef.current === "keyboard") {
      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);
    }
  }, [value, onChangeEnd]);

  var _onPanSessionStart = function onPanSessionStart(event) {
    var pointValue = getValueFromPointer(event) || 0;
    var distances = value.map(function (val) {
      return Math.abs(val - pointValue);
    });
    var closest = Math.min.apply(Math, distances);
    var index = distances.indexOf(closest); // check if the clicked thumb is stacked by checking if there are multiple
    // thumbs at the same distance

    var thumbsAtPosition = distances.filter(function (distance) {
      return distance === closest;
    });
    var isThumbStacked = thumbsAtPosition.length > 1; // when two thumbs are stacked and the user clicks at a point larger than
    // their values, pick the last thumb with the greatest index

    if (isThumbStacked && pointValue > value[index]) {
      index = thumbsAtPosition.length - 1;
    }

    setActiveIndex(index);
    actions.setValueAtIndex(index, pointValue);
    focusThumb(index);
  };

  var _onPan = function onPan(event) {
    if (activeIndex == -1) return;
    var pointValue = getValueFromPointer(event) || 0;
    setActiveIndex(activeIndex);
    actions.setValueAtIndex(activeIndex, pointValue);
    focusThumb(activeIndex);
  };

  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.usePanGesture)(rootRef, {
    onPanSessionStart: function onPanSessionStart(event) {
      if (!isInteractive) return;
      setDragging.on();

      _onPanSessionStart(event);

      onChangeStart == null ? void 0 : onChangeStart(valueRef.current);
    },
    onPanSessionEnd: function onPanSessionEnd() {
      if (!isInteractive) return;
      setDragging.off();
      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);
    },
    onPan: function onPan(event) {
      if (!isInteractive) return;

      _onPan(event);
    }
  });
  var getRootProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, htmlProps, {
      id: ids.root,
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(ref, rootRef),
      tabIndex: -1,
      "aria-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(isDisabled),
      "data-focused": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isFocused),
      style: _extends({}, props.style, rootStyle)
    });
  }, [htmlProps, isDisabled, isFocused, rootStyle, ids]);
  var getTrackProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(ref, trackRef),
      id: ids.track,
      "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDisabled),
      style: _extends({}, props.style, trackStyle)
    });
  }, [isDisabled, trackStyle, ids]);
  var getInnerTrackProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: ref,
      id: ids.innerTrack,
      style: _extends({}, props.style, innerTrackStyle)
    });
  }, [innerTrackStyle, ids]);
  var getThumbProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    var _getAriaValueText;

    if (ref === void 0) {
      ref = null;
    }

    var index = props.index,
        rest = _objectWithoutPropertiesLoose(props, _excluded2);

    var _value = value[index];

    if (_value == null) {
      throw new TypeError("[range-slider > thumb] Cannot find value at index `" + index + "`. The `value` or `defaultValue` length is : " + value.length);
    }

    var bounds = valueBounds[index];
    return _extends({}, rest, {
      ref: ref,
      role: "slider",
      tabIndex: isInteractive ? 0 : undefined,
      id: ids.getThumb(index),
      "data-active": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDragging && activeIndex === index),
      "aria-valuetext": (_getAriaValueText = getAriaValueText == null ? void 0 : getAriaValueText(_value)) != null ? _getAriaValueText : ariaValueText == null ? void 0 : ariaValueText[index],
      "aria-valuemin": bounds.min,
      "aria-valuemax": bounds.max,
      "aria-valuenow": _value,
      "aria-orientation": orientation,
      "aria-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(isDisabled),
      "aria-readonly": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(isReadOnly),
      "aria-label": ariaLabel == null ? void 0 : ariaLabel[index],
      "aria-labelledby": ariaLabel != null && ariaLabel[index] ? undefined : ariaLabelledBy == null ? void 0 : ariaLabelledBy[index],
      style: _extends({}, props.style, getThumbStyle(index)),
      onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onKeyDown, onKeyDown),
      onFocus: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onFocus, function () {
        setFocused.on();
        setActiveIndex(index);
      }),
      onBlur: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onBlur, function () {
        setFocused.off();
        setActiveIndex(-1);
      })
    });
  }, [ids, value, valueBounds, isInteractive, isDragging, activeIndex, getAriaValueText, ariaValueText, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown, setFocused]);
  var getOutputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: ref,
      id: ids.output,
      htmlFor: value.map(function (v, i) {
        return ids.getThumb(i);
      }).join(" "),
      "aria-live": "off"
    });
  }, [ids, value]);
  var getMarkerProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    var _props = props,
        v = _props.value,
        rest = _objectWithoutPropertiesLoose(_props, _excluded3);

    var isInRange = !(v < min || v > max);
    var isHighlighted = v >= value[0] && v <= value[value.length - 1];
    var percent = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.valueToPercent)(v, min, max);
    percent = isReversed ? 100 - percent : percent;

    var markerStyle = _extends({
      position: "absolute",
      pointerEvents: "none"
    }, orient$1({
      orientation: orientation,
      vertical: {
        bottom: percent + "%"
      },
      horizontal: {
        left: percent + "%"
      }
    }));

    return _extends({}, rest, {
      ref: ref,
      id: ids.getMarker(props.value),
      role: "presentation",
      "aria-hidden": true,
      "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDisabled),
      "data-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(!isInRange),
      "data-highlighted": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isHighlighted),
      style: _extends({}, props.style, markerStyle)
    });
  }, [isDisabled, isReversed, max, min, orientation, value, ids]);
  var getInputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (ref === void 0) {
      ref = null;
    }

    var index = props.index,
        rest = _objectWithoutPropertiesLoose(props, _excluded4);

    return _extends({}, rest, {
      ref: ref,
      id: ids.getInput(index),
      type: "hidden",
      value: value[index],
      name: Array.isArray(name) ? name[index] : name + "-" + index
    });
  }, [name, value, ids]);
  return {
    state: {
      value: value,
      isFocused: isFocused,
      isDragging: isDragging,
      getThumbPercent: function getThumbPercent(i) {
        return thumbPercents[i];
      },
      getThumbMinValue: function getThumbMinValue(i) {
        return valueBounds[i].min;
      },
      getThumbMaxValue: function getThumbMaxValue(i) {
        return valueBounds[i].max;
      }
    },
    actions: actions,
    getRootProps: getRootProps,
    getTrackProps: getTrackProps,
    getInnerTrackProps: getInnerTrackProps,
    getThumbProps: getThumbProps,
    getMarkerProps: getMarkerProps,
    getInputProps: getInputProps,
    getOutputProps: getOutputProps
  };
}

var getValueBounds = function getValueBounds(arr, min, max, spacing) {
  return arr.map(function (v, i) {
    var _min = i === 0 ? min : arr[i - 1] + spacing;

    var _max = i === arr.length - 1 ? max : arr[i + 1] - spacing;

    return {
      min: _min,
      max: _max
    };
  });
};

var _excluded$2 = ["getRootProps"];

var _createContext$1 = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.createContext)({
  name: "SliderContext",
  errorMessage: "useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <RangeSlider />"
}),
    RangeSliderProvider = _createContext$1[0],
    useRangeSliderContext = _createContext$1[1];

/**
 * The Slider is used to allow users to make selections from a range of values.
 * It provides context and functionality for all slider components
 *
 * @see Docs     https://chakra-ui.com/docs/form/slider
 * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices/#slider
 */
var RangeSlider = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useMultiStyleConfig)("Slider", props);
  var ownProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.omitThemingProps)(props);

  var _useTheme = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useTheme)(),
      direction = _useTheme.direction;

  ownProps.direction = direction;

  var _useRangeSlider = useRangeSlider(ownProps),
      getRootProps = _useRangeSlider.getRootProps,
      context = _objectWithoutPropertiesLoose(_useRangeSlider, _excluded$2);

  var ctx = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return _extends({}, context, {
      name: props.name
    });
  }, [context, props.name]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RangeSliderProvider, {
    value: ctx
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, getRootProps({}, ref), {
    className: "chakra-slider",
    __css: styles.container
  }), props.children)));
});
RangeSlider.defaultProps = {
  orientation: "horizontal"
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  RangeSlider.displayName = "RangeSlider";
}

/**
 * Slider component that acts as the handle used to select predefined
 * values by dragging its handle along the track
 */
var RangeSliderThumb = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _useRangeSliderContex = useRangeSliderContext(),
      getThumbProps = _useRangeSliderContex.getThumbProps,
      getInputProps = _useRangeSliderContex.getInputProps,
      name = _useRangeSliderContex.name;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  var thumbProps = getThumbProps(props, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, thumbProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-slider__thumb", props.className),
    __css: styles.thumb
  }), thumbProps.children, name && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("input", getInputProps({
    index: props.index
  })));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  RangeSliderThumb.displayName = "RangeSliderThumb";
}

var RangeSliderTrack = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _useRangeSliderContex2 = useRangeSliderContext(),
      getTrackProps = _useRangeSliderContex2.getTrackProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  var trackProps = getTrackProps(props, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, trackProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-slider__track", props.className),
    __css: styles.track,
    "data-testid": "chakra-range-slider-track"
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  RangeSliderTrack.displayName = "RangeSliderTrack";
}

var RangeSliderFilledTrack = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _useRangeSliderContex3 = useRangeSliderContext(),
      getInnerTrackProps = _useRangeSliderContex3.getInnerTrackProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  var trackProps = getInnerTrackProps(props, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, trackProps, {
    className: "chakra-slider__filled-track",
    __css: styles.filledTrack
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  RangeSliderFilledTrack.displayName = "RangeSliderFilledTrack";
}

/**
 * SliderMark is used to provide names for specific Slider
 * values by defining labels or markers along the track.
 *
 * @see Docs https://chakra-ui.com/slider
 */
var RangeSliderMark = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _useRangeSliderContex4 = useRangeSliderContext(),
      getMarkerProps = _useRangeSliderContex4.getMarkerProps;

  var markProps = getMarkerProps(props, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, markProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-slider__marker", props.className)
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  RangeSliderMark.displayName = "RangeSliderMark";
}

var _excluded$1 = ["min", "max", "onChange", "value", "defaultValue", "isReversed", "direction", "orientation", "id", "isDisabled", "isReadOnly", "onChangeStart", "onChangeEnd", "step", "getAriaValueText", "aria-valuetext", "aria-label", "aria-labelledby", "name", "focusThumbOnChange"];

/**
 * React hook that implements an accessible range slider.
 *
 * It is an alternative to `<input type="range" />`, and returns
 * prop getters for the component parts
 *
 * @see Docs     https://chakra-ui.com/docs/form/slider
 * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider
 */
function useSlider(props) {
  var _getAriaValueText;

  var _props$min = props.min,
      min = _props$min === void 0 ? 0 : _props$min,
      _props$max = props.max,
      max = _props$max === void 0 ? 100 : _props$max,
      onChange = props.onChange,
      valueProp = props.value,
      defaultValue = props.defaultValue,
      isReversedProp = props.isReversed,
      _props$direction = props.direction,
      direction = _props$direction === void 0 ? "ltr" : _props$direction,
      _props$orientation = props.orientation,
      orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation,
      idProp = props.id,
      isDisabled = props.isDisabled,
      isReadOnly = props.isReadOnly,
      onChangeStartProp = props.onChangeStart,
      onChangeEndProp = props.onChangeEnd,
      _props$step = props.step,
      step = _props$step === void 0 ? 1 : _props$step,
      getAriaValueTextProp = props.getAriaValueText,
      ariaValueText = props["aria-valuetext"],
      ariaLabel = props["aria-label"],
      ariaLabelledBy = props["aria-labelledby"],
      name = props.name,
      _props$focusThumbOnCh = props.focusThumbOnChange,
      focusThumbOnChange = _props$focusThumbOnCh === void 0 ? true : _props$focusThumbOnCh,
      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$1);

  var onChangeStart = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChangeStartProp);
  var onChangeEnd = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChangeEndProp);
  var getAriaValueText = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(getAriaValueTextProp);
  var isReversed = getIsReversed({
    isReversed: isReversedProp,
    direction: direction,
    orientation: orientation
  });
  /**
   * Enable the slider handle controlled and uncontrolled scenarios
   */

  var _useControllableState = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useControllableState)({
    value: valueProp,
    defaultValue: defaultValue != null ? defaultValue : getDefaultValue(min, max),
    onChange: onChange
  }),
      computedValue = _useControllableState[0],
      setValue = _useControllableState[1];

  var _useBoolean = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useBoolean)(),
      isDragging = _useBoolean[0],
      setDragging = _useBoolean[1];

  var _useBoolean2 = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useBoolean)(),
      isFocused = _useBoolean2[0],
      setFocused = _useBoolean2[1];

  var eventSourceRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var isInteractive = !(isDisabled || isReadOnly);
  /**
   * Constrain the value because it can't be less than min
   * or greater than max
   */

  var value = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(computedValue, min, max);
  var valueRef = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useLatestRef)(value);
  var prevRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(valueRef.current);
  var reversedValue = max - value + min;
  var trackValue = isReversed ? reversedValue : value;
  var thumbPercent = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.valueToPercent)(trackValue, min, max);
  var isVertical = orientation === "vertical";
  /**
   * Let's keep a reference to the slider track and thumb
   */

  var trackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var thumbRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var rootRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  /**
   * Generate unique ids for component parts
   */

  var _useIds = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useIds)(idProp, "slider-thumb", "slider-track"),
      thumbId = _useIds[0],
      trackId = _useIds[1];
  /**
   * Get relative value of slider from the event by tracking
   * how far you clicked within the track to determine the value
   *
   * @todo - Refactor this later on to use info from pan session
   */


  var getValueFromPointer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    var _event$touches$, _event$touches;

    if (!trackRef.current) return;
    eventSourceRef.current = "pointer";
    var trackRect = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_5__.getBox)(trackRef.current).borderBox;

    var _ref = (_event$touches$ = (_event$touches = event.touches) == null ? void 0 : _event$touches[0]) != null ? _event$touches$ : event,
        clientX = _ref.clientX,
        clientY = _ref.clientY;

    var diff = isVertical ? trackRect.bottom - clientY : clientX - trackRect.left;
    var length = isVertical ? trackRect.height : trackRect.width;
    var percent = diff / length;

    if (isReversed) {
      percent = 1 - percent;
    }

    var nextValue = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.percentToValue)(percent, min, max);

    if (step) {
      nextValue = parseFloat((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.roundValueToStep)(nextValue, min, step));
    }

    nextValue = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, min, max);
    return nextValue;
  }, [isVertical, isReversed, max, min, step]);
  var tenSteps = (max - min) / 10;
  var oneStep = step || (max - min) / 100;
  var constrain = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (value) {
    if (!isInteractive) return;
    value = parseFloat((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.roundValueToStep)(value, min, oneStep));
    value = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(value, min, max);
    setValue(value);
  }, [oneStep, max, min, setValue, isInteractive]);
  var actions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    return {
      stepUp: function stepUp(step) {
        if (step === void 0) {
          step = oneStep;
        }

        var next = isReversed ? value - step : value + step;
        constrain(next);
      },
      stepDown: function stepDown(step) {
        if (step === void 0) {
          step = oneStep;
        }

        var next = isReversed ? value + step : value - step;
        constrain(next);
      },
      reset: function reset() {
        return constrain(defaultValue || 0);
      },
      stepTo: function stepTo(value) {
        return constrain(value);
      }
    };
  }, [constrain, isReversed, value, oneStep, defaultValue]);
  /**
   * Keyboard interaction to ensure users can operate
   * the slider using only their keyboard.
   */

  var onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    var eventKey = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeEventKey)(event);
    var keyMap = {
      ArrowRight: function ArrowRight() {
        return actions.stepUp();
      },
      ArrowUp: function ArrowUp() {
        return actions.stepUp();
      },
      ArrowLeft: function ArrowLeft() {
        return actions.stepDown();
      },
      ArrowDown: function ArrowDown() {
        return actions.stepDown();
      },
      PageUp: function PageUp() {
        return actions.stepUp(tenSteps);
      },
      PageDown: function PageDown() {
        return actions.stepDown(tenSteps);
      },
      Home: function Home() {
        return constrain(min);
      },
      End: function End() {
        return constrain(max);
      }
    };
    var action = keyMap[eventKey];

    if (action) {
      event.preventDefault();
      event.stopPropagation();
      action(event);
      eventSourceRef.current = "keyboard";
    }
  }, [actions, constrain, max, min, tenSteps]);
  /**
   * ARIA (Optional): To define a human readable representation of the value,
   * we allow users pass aria-valuetext.
   */

  var valueText = (_getAriaValueText = getAriaValueText == null ? void 0 : getAriaValueText(value)) != null ? _getAriaValueText : ariaValueText;
  /**
   * Measure the dimensions of the thumb so
   * we can center it within the track properly
   */

  var thumbBoxModel = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useDimensions)(thumbRef);
  /**
   * Compute styles for all component parts.
   */

  var _useMemo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    var _thumbBoxModel$border;

    var thumbRect = (_thumbBoxModel$border = thumbBoxModel == null ? void 0 : thumbBoxModel.borderBox) != null ? _thumbBoxModel$border : {
      width: 0,
      height: 0
    };
    return getStyles({
      isReversed: isReversed,
      orientation: orientation,
      thumbRects: [thumbRect],
      thumbPercents: [thumbPercent]
    });
  }, [isReversed, orientation, thumbBoxModel == null ? void 0 : thumbBoxModel.borderBox, thumbPercent]),
      getThumbStyle = _useMemo.getThumbStyle,
      rootStyle = _useMemo.rootStyle,
      trackStyle = _useMemo.trackStyle,
      innerTrackStyle = _useMemo.innerTrackStyle;

  var focusThumb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    if (thumbRef.current && focusThumbOnChange) {
      setTimeout(function () {
        return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.focus)(thumbRef.current);
      });
    }
  }, [focusThumbOnChange]);
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.useUpdateEffect)(function () {
    focusThumb();

    if (eventSourceRef.current === "keyboard") {
      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);
    }
  }, [value, onChangeEnd]);

  var setValueFromPointer = function setValueFromPointer(event) {
    var nextValue = getValueFromPointer(event);

    if (nextValue != null && nextValue !== valueRef.current) {
      setValue(nextValue);
    }
  };

  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_1__.usePanGesture)(rootRef, {
    onPanSessionStart: function onPanSessionStart(event) {
      if (!isInteractive) return;
      setDragging.on();
      focusThumb();
      setValueFromPointer(event);
      onChangeStart == null ? void 0 : onChangeStart(valueRef.current);
    },
    onPanSessionEnd: function onPanSessionEnd() {
      if (!isInteractive) return;
      setDragging.off();
      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);
      prevRef.current = valueRef.current;
    },
    onPan: function onPan(event) {
      if (!isInteractive) return;
      setValueFromPointer(event);
    }
  });
  var getRootProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, htmlProps, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(ref, rootRef),
      tabIndex: -1,
      "aria-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(isDisabled),
      "data-focused": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isFocused),
      style: _extends({}, props.style, rootStyle)
    });
  }, [htmlProps, isDisabled, isFocused, rootStyle]);
  var getTrackProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(ref, trackRef),
      id: trackId,
      "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDisabled),
      style: _extends({}, props.style, trackStyle)
    });
  }, [isDisabled, trackId, trackStyle]);
  var getInnerTrackProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: ref,
      style: _extends({}, props.style, innerTrackStyle)
    });
  }, [innerTrackStyle]);
  var getThumbProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(ref, thumbRef),
      role: "slider",
      tabIndex: isInteractive ? 0 : undefined,
      id: thumbId,
      "data-active": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDragging),
      "aria-valuetext": valueText,
      "aria-valuemin": min,
      "aria-valuemax": max,
      "aria-valuenow": value,
      "aria-orientation": orientation,
      "aria-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(isDisabled),
      "aria-readonly": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(isReadOnly),
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabel ? undefined : ariaLabelledBy,
      style: _extends({}, props.style, getThumbStyle(0)),
      onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onKeyDown, onKeyDown),
      onFocus: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onFocus, setFocused.on),
      onBlur: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callAllHandlers)(props.onBlur, setFocused.off)
    });
  }, [isInteractive, thumbId, isDragging, valueText, min, max, value, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown, setFocused.on, setFocused.off]);
  var getMarkerProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    var isInRange = !(props.value < min || props.value > max);
    var isHighlighted = value >= props.value;
    var markerPercent = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.valueToPercent)(props.value, min, max);

    var markerStyle = _extends({
      position: "absolute",
      pointerEvents: "none"
    }, orient({
      orientation: orientation,
      vertical: {
        bottom: isReversed ? 100 - markerPercent + "%" : markerPercent + "%"
      },
      horizontal: {
        left: isReversed ? 100 - markerPercent + "%" : markerPercent + "%"
      }
    }));

    return _extends({}, props, {
      ref: ref,
      role: "presentation",
      "aria-hidden": true,
      "data-disabled": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isDisabled),
      "data-invalid": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(!isInRange),
      "data-highlighted": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(isHighlighted),
      style: _extends({}, props.style, markerStyle)
    });
  }, [isDisabled, isReversed, max, min, orientation, value]);
  var getInputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (props, ref) {
    if (props === void 0) {
      props = {};
    }

    if (ref === void 0) {
      ref = null;
    }

    return _extends({}, props, {
      ref: ref,
      type: "hidden",
      value: value,
      name: name
    });
  }, [name, value]);
  return {
    state: {
      value: value,
      isFocused: isFocused,
      isDragging: isDragging
    },
    actions: actions,
    getRootProps: getRootProps,
    getTrackProps: getTrackProps,
    getInnerTrackProps: getInnerTrackProps,
    getThumbProps: getThumbProps,
    getMarkerProps: getMarkerProps,
    getInputProps: getInputProps
  };
}

function orient(options) {
  var orientation = options.orientation,
      vertical = options.vertical,
      horizontal = options.horizontal;
  return orientation === "vertical" ? vertical : horizontal;
}
/**
 * The browser <input type="range" /> calculates
 * the default value of a slider by using mid-point
 * between the min and the max.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range
 */


function getDefaultValue(min, max) {
  return max < min ? min : min + (max - min) / 2;
}

var _excluded = ["getInputProps", "getRootProps"];

var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.createContext)({
  name: "SliderContext",
  errorMessage: "useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <Slider />"
}),
    SliderProvider = _createContext[0],
    useSliderContext = _createContext[1];

/**
 * The Slider is used to allow users to make selections from a range of values.
 * It provides context and functionality for all slider components
 *
 * @see Docs     https://chakra-ui.com/docs/form/slider
 * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices/#slider
 */
var Slider = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useMultiStyleConfig)("Slider", props);
  var ownProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.omitThemingProps)(props);

  var _useTheme = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useTheme)(),
      direction = _useTheme.direction;

  ownProps.direction = direction;

  var _useSlider = useSlider(ownProps),
      getInputProps = _useSlider.getInputProps,
      getRootProps = _useSlider.getRootProps,
      context = _objectWithoutPropertiesLoose(_useSlider, _excluded);

  var rootProps = getRootProps();
  var inputProps = getInputProps({}, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(SliderProvider, {
    value: context
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, rootProps, {
    className: "chakra-slider",
    __css: styles.container
  }), props.children, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("input", inputProps))));
});
Slider.defaultProps = {
  orientation: "horizontal"
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Slider.displayName = "Slider";
}

/**
 * Slider component that acts as the handle used to select predefined
 * values by dragging its handle along the track
 */
var SliderThumb = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _useSliderContext = useSliderContext(),
      getThumbProps = _useSliderContext.getThumbProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  var thumbProps = getThumbProps(props, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, thumbProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-slider__thumb", props.className),
    __css: styles.thumb
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  SliderThumb.displayName = "SliderThumb";
}

var SliderTrack = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _useSliderContext2 = useSliderContext(),
      getTrackProps = _useSliderContext2.getTrackProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  var trackProps = getTrackProps(props, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, trackProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-slider__track", props.className),
    __css: styles.track
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  SliderTrack.displayName = "SliderTrack";
}

var SliderFilledTrack = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _useSliderContext3 = useSliderContext(),
      getInnerTrackProps = _useSliderContext3.getInnerTrackProps;

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.useStyles)();
  var trackProps = getInnerTrackProps(props, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, trackProps, {
    className: "chakra-slider__filled-track",
    __css: styles.filledTrack
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  SliderFilledTrack.displayName = "SliderFilledTrack";
}

/**
 * SliderMark is used to provide names for specific Slider
 * values by defining labels or markers along the track.
 *
 * @see Docs https://chakra-ui.com/slider
 */
var SliderMark = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(function (props, ref) {
  var _useSliderContext4 = useSliderContext(),
      getMarkerProps = _useSliderContext4.getMarkerProps;

  var markProps = getMarkerProps(props, ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__.chakra.div, _extends({}, markProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-slider__marker", props.className)
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  SliderMark.displayName = "SliderMark";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/stat/dist/chakra-ui-stat.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@chakra-ui/stat/dist/chakra-ui-stat.esm.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Stat": () => (/* binding */ Stat),
/* harmony export */   "StatArrow": () => (/* binding */ StatArrow),
/* harmony export */   "StatDownArrow": () => (/* binding */ StatDownArrow),
/* harmony export */   "StatGroup": () => (/* binding */ StatGroup),
/* harmony export */   "StatHelpText": () => (/* binding */ StatHelpText),
/* harmony export */   "StatLabel": () => (/* binding */ StatLabel),
/* harmony export */   "StatNumber": () => (/* binding */ StatNumber),
/* harmony export */   "StatUpArrow": () => (/* binding */ StatUpArrow)
/* harmony export */ });
/* harmony import */ var _chakra_ui_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/icon */ "./node_modules/@chakra-ui/icon/dist/chakra-ui-icon.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_visually_hidden__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/visually-hidden */ "./node_modules/@chakra-ui/visually-hidden/dist/chakra-ui-visually-hidden.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");






function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var _excluded = ["type", "aria-label"],
    _excluded2 = ["className", "children"];
var StatLabel = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.dt, _extends({
    ref: ref
  }, props, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-stat__label", props.className),
    __css: styles.label
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  StatLabel.displayName = "StatLabel";
}

var StatHelpText = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.dd, _extends({
    ref: ref
  }, props, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-stat__help-text", props.className),
    __css: styles.helpText
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  StatHelpText.displayName = "StatHelpText";
}

var StatNumber = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.dd, _extends({
    ref: ref
  }, props, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-stat__number", props.className),
    __css: _extends({}, styles.number, {
      fontFeatureSettings: "pnum",
      fontVariantNumeric: "proportional-nums"
    })
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  StatNumber.displayName = "StatNumber";
}

var StatDownArrow = function StatDownArrow(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_3__.Icon, _extends({
    color: "red.400"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z"
  }));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  StatDownArrow.displayName = "StatDownArrow";
}

var StatUpArrow = function StatUpArrow(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_3__.Icon, _extends({
    color: "green.400"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z"
  }));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  StatUpArrow.displayName = "StatUpArrow";
}

var StatArrow = function StatArrow(props) {
  var type = props.type,
      ariaLabel = props["aria-label"],
      rest = _objectWithoutPropertiesLoose(props, _excluded);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  var IconComponent = type === "increase" ? StatUpArrow : StatDownArrow;
  var defaultAriaLabel = type === "increase" ? "increased by" : "decreased by";
  var label = ariaLabel || defaultAriaLabel;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_visually_hidden__WEBPACK_IMPORTED_MODULE_4__.VisuallyHidden, null, label), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconComponent, _extends({
    "aria-hidden": true
  }, rest, {
    __css: styles.icon
  })));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  StatArrow.displayName = "StatArrow";
}

var Stat = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useMultiStyleConfig)("Stat", props);

  var statStyles = _extends({
    position: "relative",
    flex: "1 1 0%"
  }, styles.container);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.omitThemingProps)(props),
      className = _omitThemingProps.className,
      children = _omitThemingProps.children,
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.div, _extends({
    ref: ref
  }, rest, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-stat", className),
    __css: statStyles
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("dl", null, children)));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Stat.displayName = "Stat";
}

var StatGroup = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.div, _extends({}, props, {
    ref: ref,
    role: "group",
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-stat__group", props.className),
    __css: {
      display: "flex",
      flexWrap: "wrap",
      justifyContent: "space-around",
      alignItems: "flex-start"
    }
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  StatGroup.displayName = "StatGroup";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/switch/dist/chakra-ui-switch.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@chakra-ui/switch/dist/chakra-ui-switch.esm.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Switch": () => (/* binding */ Switch)
/* harmony export */ });
/* harmony import */ var _chakra_ui_checkbox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/checkbox */ "./node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");





function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["spacing", "children"];
var Switch = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useMultiStyleConfig)("Switch", props);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.omitThemingProps)(props),
      _omitThemingProps$spa = _omitThemingProps.spacing,
      spacing = _omitThemingProps$spa === void 0 ? "0.5rem" : _omitThemingProps$spa,
      children = _omitThemingProps.children,
      ownProps = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);

  var _useCheckbox = (0,_chakra_ui_checkbox__WEBPACK_IMPORTED_MODULE_2__.useCheckbox)(ownProps),
      state = _useCheckbox.state,
      getInputProps = _useCheckbox.getInputProps,
      getCheckboxProps = _useCheckbox.getCheckboxProps,
      getRootProps = _useCheckbox.getRootProps,
      getLabelProps = _useCheckbox.getLabelProps;

  var containerStyles = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return _extends({
      display: "inline-block",
      position: "relative",
      verticalAlign: "middle",
      lineHeight: "normal"
    }, styles.container);
  }, [styles.container]);
  var trackStyles = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return _extends({
      display: "inline-flex",
      flexShrink: 0,
      justifyContent: "flex-start",
      boxSizing: "content-box",
      cursor: "pointer"
    }, styles.track);
  }, [styles.track]);
  var labelStyles = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return _extends({
      userSelect: "none",
      marginStart: spacing
    }, styles.label);
  }, [spacing, styles.label]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.label, _extends({}, getRootProps(), {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-switch", props.className),
    __css: containerStyles
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("input", _extends({
    className: "chakra-switch__input"
  }, getInputProps({}, ref))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.span, _extends({}, getCheckboxProps(), {
    className: "chakra-switch__track",
    __css: trackStyles
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.span, {
    __css: styles.thumb,
    className: "chakra-switch__thumb",
    "data-checked": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(state.isChecked),
    "data-hover": (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(state.isHovered)
  })), children && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.span, _extends({
    className: "chakra-switch__label"
  }, getLabelProps(), {
    __css: labelStyles
  }), children));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  Switch.displayName = "Switch";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/table/dist/chakra-ui-table.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@chakra-ui/table/dist/chakra-ui-table.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Table": () => (/* binding */ Table),
/* harmony export */   "TableCaption": () => (/* binding */ TableCaption),
/* harmony export */   "TableContainer": () => (/* binding */ TableContainer),
/* harmony export */   "Tbody": () => (/* binding */ Tbody),
/* harmony export */   "Td": () => (/* binding */ Td),
/* harmony export */   "Tfoot": () => (/* binding */ Tfoot),
/* harmony export */   "Th": () => (/* binding */ Th),
/* harmony export */   "Thead": () => (/* binding */ Thead),
/* harmony export */   "Tr": () => (/* binding */ Tr)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");




function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["overflow", "overflowX", "className"],
    _excluded2 = ["className"],
    _excluded3 = ["placement"],
    _excluded4 = ["isNumeric"],
    _excluded5 = ["isNumeric"];
var TableContainer = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var _ref;

  var overflow = props.overflow,
      overflowX = props.overflowX,
      className = props.className,
      rest = _objectWithoutPropertiesLoose(props, _excluded);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.div, _extends({
    ref: ref,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-table__container", className)
  }, rest, {
    __css: {
      display: "block",
      whiteSpace: "nowrap",
      WebkitOverflowScrolling: "touch",
      overflowX: (_ref = overflow != null ? overflow : overflowX) != null ? _ref : "auto",
      overflowY: "hidden",
      maxWidth: "100%"
    }
  }));
});
var Table = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useMultiStyleConfig)("Table", props);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.omitThemingProps)(props),
      className = _omitThemingProps.className,
      tableProps = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.table, _extends({
    role: "table",
    ref: ref,
    __css: styles.table,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.cx)("chakra-table", className)
  }, tableProps)));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Table.displayName = "Table";
}

var TableCaption = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var _props$placement = props.placement,
      placement = _props$placement === void 0 ? "bottom" : _props$placement,
      rest = _objectWithoutPropertiesLoose(props, _excluded3);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.caption, _extends({}, rest, {
    ref: ref,
    __css: _extends({}, styles.caption, {
      captionSide: placement
    })
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  TableCaption.displayName = "TableCaption";
}

var Thead = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.thead, _extends({}, props, {
    ref: ref,
    __css: styles.thead
  }));
});
var Tbody = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.tbody, _extends({}, props, {
    ref: ref,
    __css: styles.tbody
  }));
});
var Tfoot = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.tfoot, _extends({}, props, {
    ref: ref,
    __css: styles.tfoot
  }));
});
var Th = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (_ref2, ref) {
  var isNumeric = _ref2.isNumeric,
      rest = _objectWithoutPropertiesLoose(_ref2, _excluded4);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.th, _extends({}, rest, {
    ref: ref,
    __css: styles.th,
    "data-is-numeric": isNumeric
  }));
});
var Tr = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.tr, _extends({
    role: "row"
  }, props, {
    ref: ref,
    __css: styles.tr
  }));
});
var Td = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (_ref3, ref) {
  var isNumeric = _ref3.isNumeric,
      rest = _objectWithoutPropertiesLoose(_ref3, _excluded5);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.td, _extends({
    role: "gridcell"
  }, rest, {
    ref: ref,
    __css: styles.td,
    "data-is-numeric": isNumeric
  }));
});




/***/ }),

/***/ "./node_modules/@chakra-ui/tabs/dist/chakra-ui-tabs.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@chakra-ui/tabs/dist/chakra-ui-tabs.esm.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Tab": () => (/* binding */ Tab),
/* harmony export */   "TabIndicator": () => (/* binding */ TabIndicator),
/* harmony export */   "TabList": () => (/* binding */ TabList),
/* harmony export */   "TabPanel": () => (/* binding */ TabPanel),
/* harmony export */   "TabPanels": () => (/* binding */ TabPanels),
/* harmony export */   "Tabs": () => (/* binding */ Tabs),
/* harmony export */   "TabsDescendantsProvider": () => (/* binding */ TabsDescendantsProvider),
/* harmony export */   "TabsProvider": () => (/* binding */ TabsProvider),
/* harmony export */   "useTab": () => (/* binding */ useTab),
/* harmony export */   "useTabIndicator": () => (/* binding */ useTabIndicator),
/* harmony export */   "useTabList": () => (/* binding */ useTabList),
/* harmony export */   "useTabPanel": () => (/* binding */ useTabPanel),
/* harmony export */   "useTabPanels": () => (/* binding */ useTabPanels),
/* harmony export */   "useTabs": () => (/* binding */ useTabs),
/* harmony export */   "useTabsContext": () => (/* binding */ useTabsContext),
/* harmony export */   "useTabsDescendant": () => (/* binding */ useTabsDescendant),
/* harmony export */   "useTabsDescendants": () => (/* binding */ useTabsDescendants),
/* harmony export */   "useTabsDescendantsContext": () => (/* binding */ useTabsDescendantsContext)
/* harmony export */ });
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_clickable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/clickable */ "./node_modules/@chakra-ui/clickable/dist/chakra-ui-clickable.esm.js");
/* harmony import */ var _chakra_ui_descendant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/descendant */ "./node_modules/@chakra-ui/descendant/dist/chakra-ui-descendant.esm.js");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");
/* harmony import */ var _chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react-utils */ "./node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js");








function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded$1 = ["defaultIndex", "onChange", "index", "isManual", "isLazy", "lazyBehavior", "orientation", "direction"],
    _excluded2$1 = ["isDisabled", "isFocusable"],
    _excluded3 = ["isSelected", "id", "children"];
/* -------------------------------------------------------------------------------------------------
 * Create context to track descendants and their indices
 * -----------------------------------------------------------------------------------------------*/

var _createDescendantCont = (0,_chakra_ui_descendant__WEBPACK_IMPORTED_MODULE_1__.createDescendantContext)(),
    TabsDescendantsProvider = _createDescendantCont[0],
    useTabsDescendantsContext = _createDescendantCont[1],
    useTabsDescendants = _createDescendantCont[2],
    useTabsDescendant = _createDescendantCont[3];

/**
 * Tabs hooks that provides all the states, and accessibility
 * helpers to keep all things working properly.
 *
 * Its returned object will be passed unto a Context Provider
 * so all child components can read from it.
 * There is no document link yet
 * @see Docs https://chakra-ui.com/docs/components/useTabs
 */
function useTabs(props) {
  var defaultIndex = props.defaultIndex,
      onChange = props.onChange,
      index = props.index,
      isManual = props.isManual,
      isLazy = props.isLazy,
      _props$lazyBehavior = props.lazyBehavior,
      lazyBehavior = _props$lazyBehavior === void 0 ? "unmount" : _props$lazyBehavior,
      _props$orientation = props.orientation,
      orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation,
      _props$direction = props.direction,
      direction = _props$direction === void 0 ? "ltr" : _props$direction,
      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$1);
  /**
   * We use this to keep track of the index of the focused tab.
   *
   * Tabs can be automatically activated, this means selection follows focus.
   * When we navigate with the arrow keys, we move focus and selection to next/prev tab
   *
   * Tabs can also be manually activated, this means selection does not follow focus.
   * When we navigate with the arrow keys, we only move focus NOT selection. The user
   * will need not manually activate the tab using `Enter` or `Space`.
   *
   * This is why we need to keep track of the `focusedIndex` and `selectedIndex`
   */


  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultIndex != null ? defaultIndex : 0),
      focusedIndex = _React$useState[0],
      setFocusedIndex = _React$useState[1];

  var _useControllableState = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useControllableState)({
    defaultValue: defaultIndex != null ? defaultIndex : 0,
    value: index,
    onChange: onChange
  }),
      selectedIndex = _useControllableState[0],
      setSelectedIndex = _useControllableState[1];
  /**
   * Sync focused `index` with controlled `selectedIndex` (which is the `props.index`)
   */


  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    if (index != null) {
      setFocusedIndex(index);
    }
  }, [index]);
  /**
   * Think of `useDescendants` as a register for the tab nodes.
   */

  var descendants = useTabsDescendants();
  /**
   * Generate a unique id or use user-provided id for the tabs widget
   */

  var id = (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useId)(props.id, "tabs");
  return {
    id: id,
    selectedIndex: selectedIndex,
    focusedIndex: focusedIndex,
    setSelectedIndex: setSelectedIndex,
    setFocusedIndex: setFocusedIndex,
    isManual: isManual,
    isLazy: isLazy,
    lazyBehavior: lazyBehavior,
    orientation: orientation,
    descendants: descendants,
    direction: direction,
    htmlProps: htmlProps
  };
}

var _createContext = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.createContext)({
  name: "TabsContext",
  errorMessage: "useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />"
}),
    TabsProvider = _createContext[0],
    useTabsContext = _createContext[1];

/**
 * Tabs hook to manage multiple tab buttons,
 * and ensures only one tab is selected per time.
 *
 * @param props props object for the tablist
 */
function useTabList(props) {
  var _useTabsContext = useTabsContext(),
      focusedIndex = _useTabsContext.focusedIndex,
      orientation = _useTabsContext.orientation,
      direction = _useTabsContext.direction;

  var descendants = useTabsDescendantsContext();
  var onKeyDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
    var _keyMap;

    var nextTab = function nextTab() {
      var next = descendants.nextEnabled(focusedIndex);
      if (next) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.focus)(next.node);
    };

    var prevTab = function prevTab() {
      var prev = descendants.prevEnabled(focusedIndex);
      if (prev) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.focus)(prev.node);
    };

    var firstTab = function firstTab() {
      var first = descendants.firstEnabled();
      if (first) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.focus)(first.node);
    };

    var lastTab = function lastTab() {
      var last = descendants.lastEnabled();
      if (last) (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.focus)(last.node);
    };

    var isHorizontal = orientation === "horizontal";
    var isVertical = orientation === "vertical";
    var eventKey = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.normalizeEventKey)(event);
    var ArrowStart = direction === "ltr" ? "ArrowLeft" : "ArrowRight";
    var ArrowEnd = direction === "ltr" ? "ArrowRight" : "ArrowLeft";
    var keyMap = (_keyMap = {}, _keyMap[ArrowStart] = function () {
      return isHorizontal && prevTab();
    }, _keyMap[ArrowEnd] = function () {
      return isHorizontal && nextTab();
    }, _keyMap.ArrowDown = function ArrowDown() {
      return isVertical && nextTab();
    }, _keyMap.ArrowUp = function ArrowUp() {
      return isVertical && prevTab();
    }, _keyMap.Home = firstTab, _keyMap.End = lastTab, _keyMap);
    var action = keyMap[eventKey];

    if (action) {
      event.preventDefault();
      action(event);
    }
  }, [descendants, focusedIndex, orientation, direction]);
  return _extends({}, props, {
    role: "tablist",
    "aria-orientation": orientation,
    onKeyDown: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.callAllHandlers)(props.onKeyDown, onKeyDown)
  });
}

/**
 * Tabs hook to manage each tab button.
 *
 * A tab can be disabled and focusable, or both,
 * hence the use of `useClickable` to handle this scenario
 */
function useTab(props) {
  var isDisabled = props.isDisabled,
      isFocusable = props.isFocusable,
      htmlProps = _objectWithoutPropertiesLoose(props, _excluded2$1);

  var _useTabsContext2 = useTabsContext(),
      setSelectedIndex = _useTabsContext2.setSelectedIndex,
      isManual = _useTabsContext2.isManual,
      id = _useTabsContext2.id,
      setFocusedIndex = _useTabsContext2.setFocusedIndex,
      selectedIndex = _useTabsContext2.selectedIndex;

  var _useTabsDescendant = useTabsDescendant({
    disabled: isDisabled && !isFocusable
  }),
      index = _useTabsDescendant.index,
      register = _useTabsDescendant.register;

  var isSelected = index === selectedIndex;

  var onClick = function onClick() {
    setSelectedIndex(index);
  };

  var onFocus = function onFocus() {
    setFocusedIndex(index);
    var isDisabledButFocusable = isDisabled && isFocusable;
    var shouldSelect = !isManual && !isDisabledButFocusable;

    if (shouldSelect) {
      setSelectedIndex(index);
    }
  };

  var clickableProps = (0,_chakra_ui_clickable__WEBPACK_IMPORTED_MODULE_5__.useClickable)(_extends({}, htmlProps, {
    ref: (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(register, props.ref),
    isDisabled: isDisabled,
    isFocusable: isFocusable,
    onClick: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.callAllHandlers)(props.onClick, onClick)
  }));
  var type = "button";
  return _extends({}, clickableProps, {
    id: makeTabId(id, index),
    role: "tab",
    tabIndex: isSelected ? 0 : -1,
    type: type,
    "aria-selected": isSelected,
    "aria-controls": makeTabPanelId(id, index),
    onFocus: isDisabled ? undefined : (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.callAllHandlers)(props.onFocus, onFocus)
  });
}

/**
 * Tabs hook for managing the visibility of multiple tab panels.
 *
 * Since only one panel can be show at a time, we use `cloneElement`
 * to inject `selected` panel to each TabPanel.
 *
 * It returns a cloned version of its children with
 * all functionality included.
 */
function useTabPanels(props) {
  var context = useTabsContext();
  var id = context.id,
      selectedIndex = context.selectedIndex;
  var validChildren = (0,_chakra_ui_react_utils__WEBPACK_IMPORTED_MODULE_3__.getValidChildren)(props.children);
  var children = validChildren.map(function (child, index) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
      isSelected: index === selectedIndex,
      id: makeTabPanelId(id, index),
      // Refers to the associated tab element, and also provides an accessible name to the tab panel.
      "aria-labelledby": makeTabId(id, index)
    });
  });
  return _extends({}, props, {
    children: children
  });
}
/**
 * Tabs hook for managing the visible/hidden states
 * of the tab panel.
 *
 * @param props props object for the tab panel
 */

function useTabPanel(props) {
  var isSelected = props.isSelected,
      id = props.id,
      children = props.children,
      htmlProps = _objectWithoutPropertiesLoose(props, _excluded3);

  var _useTabsContext3 = useTabsContext(),
      isLazy = _useTabsContext3.isLazy,
      lazyBehavior = _useTabsContext3.lazyBehavior;

  var hasBeenSelected = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);

  if (isSelected) {
    hasBeenSelected.current = true;
  }

  var shouldRenderChildren = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.determineLazyBehavior)({
    hasBeenSelected: hasBeenSelected.current,
    isSelected: isSelected,
    isLazy: isLazy,
    lazyBehavior: lazyBehavior
  });
  return _extends({
    // Puts the tabpanel in the page `Tab` sequence.
    tabIndex: 0
  }, htmlProps, {
    children: shouldRenderChildren ? children : null,
    role: "tabpanel",
    hidden: !isSelected,
    id: id
  });
}
/**
 * Tabs hook to show an animated indicators that
 * follows the active tab.
 *
 * The way we do it is by measuring the DOM Rect (or dimensions)
 * of the active tab, and return that as CSS style for
 * the indicator.
 */

function useTabIndicator() {
  var context = useTabsContext();
  var descendants = useTabsDescendantsContext();
  var selectedIndex = context.selectedIndex,
      orientation = context.orientation;
  var isHorizontal = orientation === "horizontal";
  var isVertical = orientation === "vertical"; // Get the clientRect of the selected tab

  var _React$useState2 = react__WEBPACK_IMPORTED_MODULE_0__.useState(function () {
    if (isHorizontal) return {
      left: 0,
      width: 0
    };
    if (isVertical) return {
      top: 0,
      height: 0
    };
    return undefined;
  }),
      rect = _React$useState2[0],
      setRect = _React$useState2[1];

  var _React$useState3 = react__WEBPACK_IMPORTED_MODULE_0__.useState(false),
      hasMeasured = _React$useState3[0],
      setHasMeasured = _React$useState3[1]; // Update the selected tab rect when the selectedIndex changes


  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_2__.useSafeLayoutEffect)(function () {
    if ((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(selectedIndex)) return undefined;
    var tab = descendants.item(selectedIndex);
    if ((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(tab)) return undefined; // Horizontal Tab: Calculate width and left distance

    if (isHorizontal) {
      setRect({
        left: tab.node.offsetLeft,
        width: tab.node.offsetWidth
      });
    } // Vertical Tab: Calculate height and top distance


    if (isVertical) {
      setRect({
        top: tab.node.offsetTop,
        height: tab.node.offsetHeight
      });
    } // Prevent unwanted transition from 0 to measured rect
    // by setting the measured state in the next tick


    var id = requestAnimationFrame(function () {
      setHasMeasured(true);
    });
    return function () {
      if (id) {
        cancelAnimationFrame(id);
      }
    };
  }, [selectedIndex, isHorizontal, isVertical, descendants]);
  return _extends({
    position: "absolute",
    transitionProperty: "left, right, top, bottom",
    transitionDuration: hasMeasured ? "200ms" : "0ms",
    transitionTimingFunction: "cubic-bezier(0, 0, 0.2, 1)"
  }, rect);
}

function makeTabId(id, index) {
  return id + "--tab-" + index;
}

function makeTabPanelId(id, index) {
  return id + "--tabpanel-" + index;
}

var _excluded = ["children", "className"],
    _excluded2 = ["htmlProps", "descendants"];

/**
 * Tabs
 *
 * Provides context and logic for all tabs components.
 */
var Tabs = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useMultiStyleConfig)("Tabs", props);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.omitThemingProps)(props),
      children = _omitThemingProps.children,
      className = _omitThemingProps.className,
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);

  var _useTabs = useTabs(rest),
      htmlProps = _useTabs.htmlProps,
      descendants = _useTabs.descendants,
      ctx = _objectWithoutPropertiesLoose(_useTabs, _excluded2);

  var context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return ctx;
  }, [ctx]);
  var rootProps = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.omit)(htmlProps, ["isFitted"]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(TabsDescendantsProvider, {
    value: descendants
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(TabsProvider, {
    value: context
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.chakra.div, _extends({
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-tabs", className),
    ref: ref
  }, rootProps, {
    __css: styles.root
  }), children))));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  Tabs.displayName = "Tabs";
}

/**
 * Tab button used to activate a specific tab panel. It renders a `button`,
 * and is responsible for automatic and manual selection modes.
 */
var Tab = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useStyles)();
  var tabProps = useTab(_extends({}, props, {
    ref: ref
  }));

  var tabStyles = _extends({
    outline: "0",
    display: "flex",
    alignItems: "center",
    justifyContent: "center"
  }, styles.tab);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.chakra.button, _extends({}, tabProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-tabs__tab", props.className),
    __css: tabStyles
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  Tab.displayName = "Tab";
}

/**
 * TabList is used to manage a list of tab buttons. It renders a `div` by default,
 * and is responsible the keyboard interaction between tabs.
 */
var TabList = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var tablistProps = useTabList(_extends({}, props, {
    ref: ref
  }));
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useStyles)();

  var tablistStyles = _extends({
    display: "flex"
  }, styles.tablist);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.chakra.div, _extends({}, tablistProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-tabs__tablist", props.className),
    __css: tablistStyles
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  TabList.displayName = "TabList";
}

/**
 * TabPanel
 * Used to render the content for a specific tab.
 */
var TabPanel = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var panelProps = useTabPanel(_extends({}, props, {
    ref: ref
  }));
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.chakra.div, _extends({
    outline: "0"
  }, panelProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-tabs__tab-panel", props.className),
    __css: styles.tabpanel
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  TabPanel.displayName = "TabPanel";
}

/**
 * TabPanel
 *
 * Used to manage the rendering of multiple tab panels. It uses
 * `cloneElement` to hide/show tab panels.
 *
 * It renders a `div` by default.
 */
var TabPanels = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var panelsProps = useTabPanels(props);
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.chakra.div, _extends({}, panelsProps, {
    width: "100%",
    ref: ref,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-tabs__tab-panels", props.className),
    __css: styles.tabpanels
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  TabPanels.displayName = "TabPanels";
}

/**
 * TabIndicator
 *
 * Used to render an active tab indicator that animates between
 * selected tabs.
 */
var TabIndicator = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(function (props, ref) {
  var indicatorStyle = useTabIndicator();

  var style = _extends({}, props.style, indicatorStyle);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_6__.chakra.div, _extends({
    ref: ref
  }, props, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.cx)("chakra-tabs__tab-indicator", props.className),
    style: style,
    __css: styles.indicator
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.__DEV__) {
  TabIndicator.displayName = "TabIndicator";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/tag/dist/chakra-ui-tag.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@chakra-ui/tag/dist/chakra-ui-tag.esm.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Tag": () => (/* binding */ Tag),
/* harmony export */   "TagCloseButton": () => (/* binding */ TagCloseButton),
/* harmony export */   "TagLabel": () => (/* binding */ TagLabel),
/* harmony export */   "TagLeftIcon": () => (/* binding */ TagLeftIcon),
/* harmony export */   "TagRightIcon": () => (/* binding */ TagRightIcon)
/* harmony export */ });
/* harmony import */ var _chakra_ui_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/icon */ "./node_modules/@chakra-ui/icon/dist/chakra-ui-icon.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");





function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var _excluded = ["isDisabled", "children"];

/**
 * The tag component is used to label or categorize UI elements.
 * To style the tag globally, change the styles in `theme.components.Tag`
 * @see Docs https://chakra-ui.com/tag
 */
var Tag = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useMultiStyleConfig)("Tag", props);
  var ownProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.omitThemingProps)(props);

  var containerStyles = _extends({
    display: "inline-flex",
    verticalAlign: "top",
    alignItems: "center",
    maxWidth: "100%"
  }, styles.container);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.StylesProvider, {
    value: styles
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.span, _extends({
    ref: ref
  }, ownProps, {
    __css: containerStyles
  })));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  Tag.displayName = "Tag";
}

var TagLabel = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.span, _extends({
    ref: ref,
    isTruncated: true
  }, props, {
    __css: styles.label
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  TagLabel.displayName = "TagLabel";
}

var TagLeftIcon = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_3__.Icon, _extends({
    ref: ref,
    verticalAlign: "top",
    marginEnd: "0.5rem"
  }, props));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  TagLeftIcon.displayName = "TagLeftIcon";
}

var TagRightIcon = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_3__.Icon, _extends({
    ref: ref,
    verticalAlign: "top",
    marginStart: "0.5rem"
  }, props));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  TagRightIcon.displayName = "TagRightIcon";
}

var TagCloseIcon = function TagCloseIcon(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_icon__WEBPACK_IMPORTED_MODULE_3__.Icon, _extends({
    verticalAlign: "inherit",
    viewBox: "0 0 512 512"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "currentColor",
    d: "M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z"
  }));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  TagCloseIcon.displayName = "TagCloseIcon";
}

/**
 * TagCloseButton is used to close "remove" the tag
 * @see Docs https://chakra-ui.com/tag
 */
var TagCloseButton = function TagCloseButton(props) {
  var isDisabled = props.isDisabled,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, _excluded);

  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyles)();

  var btnStyles = _extends({
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    outline: "0"
  }, styles.closeButton);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.button, _extends({}, rest, {
    type: "button",
    "aria-label": "close",
    disabled: isDisabled,
    __css: btnStyles
  }), children || /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(TagCloseIcon, null));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__.__DEV__) {
  TagCloseButton.displayName = "TagCloseButton";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Textarea": () => (/* binding */ Textarea)
/* harmony export */ });
/* harmony import */ var _chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/form-control */ "./node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");





function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["className", "rows"];

/**
 * Textarea is used to enter an amount of text that's longer than a single line
 * @see Docs https://chakra-ui.com/textarea
 */
var Textarea = /*#__PURE__*/(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (props, ref) {
  var styles = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.useStyleConfig)("Textarea", props);

  var _omitThemingProps = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.omitThemingProps)(props),
      className = _omitThemingProps.className,
      rows = _omitThemingProps.rows,
      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);

  var textareaProps = (0,_chakra_ui_form_control__WEBPACK_IMPORTED_MODULE_2__.useFormControl)(rest);
  var omitted = ["h", "minH", "height", "minHeight"];
  var textareaStyles = rows ? (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.omit)(styles, omitted) : styles;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.chakra.textarea, _extends({
    ref: ref,
    rows: rows
  }, textareaProps, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.cx)("chakra-textarea", className),
    __css: textareaStyles
  }));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_3__.__DEV__) {
  Textarea.displayName = "Textarea";
}




/***/ }),

/***/ "./node_modules/@chakra-ui/theme-tools/dist/chakra-ui-theme-tools.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@chakra-ui/theme-tools/dist/chakra-ui-theme-tools.esm.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "runIfFn": () => (/* reexport safe */ _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_0__.runIfFn),
/* harmony export */   "Anatomy": () => (/* binding */ Anatomy),
/* harmony export */   "addPrefix": () => (/* binding */ addPrefix),
/* harmony export */   "anatomy": () => (/* binding */ anatomy),
/* harmony export */   "blacken": () => (/* binding */ blacken),
/* harmony export */   "calc": () => (/* binding */ calc),
/* harmony export */   "complementary": () => (/* binding */ complementary),
/* harmony export */   "contrast": () => (/* binding */ contrast),
/* harmony export */   "createBreakpoints": () => (/* binding */ createBreakpoints),
/* harmony export */   "cssVar": () => (/* binding */ cssVar),
/* harmony export */   "darken": () => (/* binding */ darken),
/* harmony export */   "generateStripe": () => (/* binding */ generateStripe),
/* harmony export */   "getColor": () => (/* binding */ getColor),
/* harmony export */   "isAccessible": () => (/* binding */ isAccessible),
/* harmony export */   "isDark": () => (/* binding */ isDark),
/* harmony export */   "isDecimal": () => (/* binding */ isDecimal),
/* harmony export */   "isLight": () => (/* binding */ isLight),
/* harmony export */   "lighten": () => (/* binding */ lighten),
/* harmony export */   "mode": () => (/* binding */ mode),
/* harmony export */   "orient": () => (/* binding */ orient),
/* harmony export */   "randomColor": () => (/* binding */ randomColor),
/* harmony export */   "toVar": () => (/* binding */ toVar),
/* harmony export */   "toVarRef": () => (/* binding */ toVarRef),
/* harmony export */   "tone": () => (/* binding */ tone),
/* harmony export */   "transparentize": () => (/* binding */ transparentize),
/* harmony export */   "whiten": () => (/* binding */ whiten)
/* harmony export */ });
/* harmony import */ var _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ctrl/tinycolor */ "./node_modules/@ctrl/tinycolor/dist/module/index.js");
/* harmony import */ var _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ctrl/tinycolor */ "./node_modules/@ctrl/tinycolor/dist/module/readability.js");
/* harmony import */ var _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ctrl/tinycolor */ "./node_modules/@ctrl/tinycolor/dist/module/random.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");




/**
 * Get the color raw value from theme
 * @param theme - the theme object
 * @param color - the color path ("green.200")
 * @param fallback - the fallback color
 */

var getColor = function getColor(theme, color, fallback) {
  var hex = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_0__.memoizedGet)(theme, "colors." + color, color);

  var _TinyColor = new _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_1__.TinyColor(hex),
      isValid = _TinyColor.isValid;

  return isValid ? hex : fallback;
};
/**
 * Determines if the tone of given color is "light" or "dark"
 * @param color - the color in hex, rgb, or hsl
 */

var tone = function tone(color) {
  return function (theme) {
    var hex = getColor(theme, color);
    var isDark = new _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_1__.TinyColor(hex).isDark();
    return isDark ? "dark" : "light";
  };
};
/**
 * Determines if a color tone is "dark"
 * @param color - the color in hex, rgb, or hsl
 */

var isDark = function isDark(color) {
  return function (theme) {
    return tone(color)(theme) === "dark";
  };
};
/**
 * Determines if a color tone is "light"
 * @param color - the color in hex, rgb, or hsl
 */

var isLight = function isLight(color) {
  return function (theme) {
    return tone(color)(theme) === "light";
  };
};
/**
 * Make a color transparent
 * @param color - the color in hex, rgb, or hsl
 * @param opacity - the amount of opacity the color should have (0-1)
 */

var transparentize = function transparentize(color, opacity) {
  return function (theme) {
    var raw = getColor(theme, color);
    return new _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_1__.TinyColor(raw).setAlpha(opacity).toRgbString();
  };
};
/**
 * Add white to a color
 * @param color - the color in hex, rgb, or hsl
 * @param amount - the amount white to add (0-100)
 */

var whiten = function whiten(color, amount) {
  return function (theme) {
    var raw = getColor(theme, color);
    return new _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_1__.TinyColor(raw).mix("#fff", amount).toHexString();
  };
};
/**
 * Add black to a color
 * @param color - the color in hex, rgb, or hsl
 * @param amount - the amount black to add (0-100)
 */

var blacken = function blacken(color, amount) {
  return function (theme) {
    var raw = getColor(theme, color);
    return new _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_1__.TinyColor(raw).mix("#000", amount).toHexString();
  };
};
/**
 * Darken a specified color
 * @param color - the color in hex, rgb, or hsl
 * @param amount - the amount to darken (0-100)
 */

var darken = function darken(color, amount) {
  return function (theme) {
    var raw = getColor(theme, color);
    return new _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_1__.TinyColor(raw).darken(amount).toHexString();
  };
};
/**
 * Lighten a specified color
 * @param color - the color in hex, rgb, or hsl
 * @param amount - the amount to lighten (0-100)
 */

var lighten = function lighten(color, amount) {
  return function (theme) {
    return new _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_1__.TinyColor(getColor(theme, color)).lighten(amount).toHexString();
  };
};
/**
 * Checks the contract ratio of between 2 colors,
 * based on the Web Content Accessibility Guidelines (Version 2.0).
 *
 * @param fg - the foreground or text color
 * @param bg - the background color
 */

var contrast = function contrast(fg, bg) {
  return function (theme) {
    return (0,_ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_2__.readability)(getColor(theme, bg), getColor(theme, fg));
  };
};
/**
 * Checks if a color meets the Web Content Accessibility
 * Guidelines (Version 2.0) for constract ratio.
 *
 * @param fg - the foreground or text color
 * @param bg - the background color
 */

var isAccessible = function isAccessible(textColor, bgColor, options) {
  return function (theme) {
    return (0,_ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_2__.isReadable)(getColor(theme, bgColor), getColor(theme, textColor), options);
  };
};
var complementary = function complementary(color) {
  return function (theme) {
    return new _ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_1__.TinyColor(getColor(theme, color)).complement().toHexString();
  };
};
function generateStripe(size, color) {
  if (size === void 0) {
    size = "1rem";
  }

  if (color === void 0) {
    color = "rgba(255, 255, 255, 0.15)";
  }

  return {
    backgroundImage: "linear-gradient(\n    45deg,\n    " + color + " 25%,\n    transparent 25%,\n    transparent 50%,\n    " + color + " 50%,\n    " + color + " 75%,\n    transparent 75%,\n    transparent\n  )",
    backgroundSize: size + " " + size
  };
}
function randomColor(opts) {
  var fallback = (0,_ctrl_tinycolor__WEBPACK_IMPORTED_MODULE_3__.random)().toHexString();

  if (!opts || (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_0__.isEmptyObject)(opts)) {
    return fallback;
  }

  if (opts.string && opts.colors) {
    return randomColorFromList(opts.string, opts.colors);
  }

  if (opts.string && !opts.colors) {
    return randomColorFromString(opts.string);
  }

  if (opts.colors && !opts.string) {
    return randomFromList(opts.colors);
  }

  return fallback;
}

function randomColorFromString(str) {
  var hash = 0;
  if (str.length === 0) return hash.toString();

  for (var i = 0; i < str.length; i += 1) {
    hash = str.charCodeAt(i) + ((hash << 5) - hash);
    hash = hash & hash;
  }

  var color = "#";

  for (var j = 0; j < 3; j += 1) {
    var value = hash >> j * 8 & 255;
    color += ("00" + value.toString(16)).substr(-2);
  }

  return color;
}

function randomColorFromList(str, list) {
  var index = 0;
  if (str.length === 0) return list[0];

  for (var i = 0; i < str.length; i += 1) {
    index = str.charCodeAt(i) + ((index << 5) - index);
    index = index & index;
  }

  index = (index % list.length + list.length) % list.length;
  return list[index];
}

function randomFromList(list) {
  return list[Math.floor(Math.random() * list.length)];
}

function mode(light, dark) {
  return function (props) {
    return props.colorMode === "dark" ? dark : light;
  };
}
function orient(options) {
  var orientation = options.orientation,
      vertical = options.vertical,
      horizontal = options.horizontal;
  if (!orientation) return {};
  return orientation === "vertical" ? vertical : horizontal;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var createBreakpoints = function createBreakpoints(config) {
  (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_0__.warn)({
    condition: true,
    message: ["[chakra-ui]: createBreakpoints(...) will be deprecated pretty soon", "simply pass the breakpoints as an object. Remove the createBreakpoint(..) call"].join("")
  });
  return _extends({
    base: "0em"
  }, config);
};

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

/**
 * Used to define the anatomy/parts of a component in a way that provides
 * a consistent API for `className`, css selector and `theming`.
 */

var Anatomy = /*#__PURE__*/function () {
  function Anatomy(name) {
    var _this = this;

    this.map = {};
    this.called = false;

    this.assert = function () {
      if (!_this.called) {
        _this.called = true;
        return;
      }

      throw new Error("[anatomy] .part(...) should only be called once. Did you mean to use .extend(...) ?");
    };

    this.parts = function () {
      _this.assert();

      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }

      for (var _i = 0, _values = values; _i < _values.length; _i++) {
        var part = _values[_i];
        _this.map[part] = _this.toPart(part);
      }

      return _this;
    };

    this.extend = function () {
      for (var _len2 = arguments.length, parts = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        parts[_key2] = arguments[_key2];
      }

      for (var _i2 = 0, _parts = parts; _i2 < _parts.length; _i2++) {
        var part = _parts[_i2];
        if (part in _this.map) continue;
        _this.map[part] = _this.toPart(part);
      }

      return _this;
    };

    this.toPart = function (part) {
      var el = ["container", "root"].includes(part != null ? part : "") ? [_this.name] : [_this.name, part];
      var attr = el.filter(Boolean).join("__");
      var className = "chakra-" + attr;
      var partObj = {
        className: className,
        selector: "." + className,
        toString: function toString() {
          return part;
        }
      };
      return partObj;
    };

    this.__type = {};
  }
  /**
   * Prevents user from calling `.parts` multiple times.
   * It should only be called once.
   */


  _createClass(Anatomy, [{
    key: "selectors",
    get:
    /**
     * Get all selectors for the component anatomy
     */
    function get() {
      var value = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_0__.fromEntries)(Object.entries(this.map).map(function (_ref) {
        var key = _ref[0],
            part = _ref[1];
        return [key, part.selector];
      }));
      return value;
    }
    /**
     * Get all classNames for the component anatomy
     */

  }, {
    key: "classNames",
    get: function get() {
      var value = (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_0__.fromEntries)(Object.entries(this.map).map(function (_ref2) {
        var key = _ref2[0],
            part = _ref2[1];
        return [key, part.className];
      }));
      return value;
    }
    /**
     * Get all parts as array of string
     */

  }, {
    key: "keys",
    get: function get() {
      return Object.keys(this.map);
    }
    /**
     * Creates the part object for the given part
     */

  }]);

  return Anatomy;
}();
function anatomy(name) {
  return new Anatomy(name);
}

function toRef(operand) {
  if ((0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(operand) && operand.reference) {
    return operand.reference;
  }

  return String(operand);
}

var toExpr = function toExpr(operator) {
  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    operands[_key - 1] = arguments[_key];
  }

  return operands.map(toRef).join(" " + operator + " ").replace(/calc/g, "");
};

var _add = function add() {
  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    operands[_key2] = arguments[_key2];
  }

  return "calc(" + toExpr.apply(void 0, ["+"].concat(operands)) + ")";
};

var _subtract = function subtract() {
  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    operands[_key3] = arguments[_key3];
  }

  return "calc(" + toExpr.apply(void 0, ["-"].concat(operands)) + ")";
};

var _multiply = function multiply() {
  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    operands[_key4] = arguments[_key4];
  }

  return "calc(" + toExpr.apply(void 0, ["*"].concat(operands)) + ")";
};

var _divide = function divide() {
  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    operands[_key5] = arguments[_key5];
  }

  return "calc(" + toExpr.apply(void 0, ["/"].concat(operands)) + ")";
};

var _negate = function negate(x) {
  var value = toRef(x);

  if (value != null && !Number.isNaN(parseFloat(value))) {
    return String(value).startsWith("-") ? String(value).slice(1) : "-" + value;
  }

  return _multiply(value, -1);
};

var calc = Object.assign(function (x) {
  return {
    add: function add() {
      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        operands[_key6] = arguments[_key6];
      }

      return calc(_add.apply(void 0, [x].concat(operands)));
    },
    subtract: function subtract() {
      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        operands[_key7] = arguments[_key7];
      }

      return calc(_subtract.apply(void 0, [x].concat(operands)));
    },
    multiply: function multiply() {
      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        operands[_key8] = arguments[_key8];
      }

      return calc(_multiply.apply(void 0, [x].concat(operands)));
    },
    divide: function divide() {
      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        operands[_key9] = arguments[_key9];
      }

      return calc(_divide.apply(void 0, [x].concat(operands)));
    },
    negate: function negate() {
      return calc(_negate(x));
    },
    toString: function toString() {
      return x.toString();
    }
  };
}, {
  add: _add,
  subtract: _subtract,
  multiply: _multiply,
  divide: _divide,
  negate: _negate
});

function isDecimal(value) {
  return !Number.isInteger(parseFloat(value.toString()));
}

function replaceWhiteSpace(value, replaceValue) {
  if (replaceValue === void 0) {
    replaceValue = "-";
  }

  return value.replace(/\s+/g, replaceValue);
}

function escape(value) {
  var valueStr = replaceWhiteSpace(value.toString());
  if (valueStr.includes("\\.")) return value;
  return isDecimal(value) ? valueStr.replace(".", "\\.") : value;
}

function addPrefix(value, prefix) {
  if (prefix === void 0) {
    prefix = "";
  }

  return [prefix, escape(value)].filter(Boolean).join("-");
}
function toVarRef(name, fallback) {
  return "var(" + escape(name) + (fallback ? ", " + fallback : "") + ")";
}
function toVar(value, prefix) {
  if (prefix === void 0) {
    prefix = "";
  }

  return "--" + addPrefix(value, prefix);
}
function cssVar(name, options) {
  var cssVariable = toVar(name, options == null ? void 0 : options.prefix);
  return {
    variable: cssVariable,
    reference: toVarRef(cssVariable, getFallback(options == null ? void 0 : options.fallback))
  };
}

function getFallback(fallback) {
  if (typeof fallback === "string") return fallback;
  return fallback == null ? void 0 : fallback.reference;
}




/***/ }),

/***/ "./node_modules/@chakra-ui/theme/dist/chakra-ui-theme.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@chakra-ui/theme/dist/chakra-ui-theme.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ theme),
/* harmony export */   "isChakraTheme": () => (/* binding */ isChakraTheme),
/* harmony export */   "requiredChakraThemeKeys": () => (/* binding */ requiredChakraThemeKeys),
/* harmony export */   "theme": () => (/* binding */ theme)
/* harmony export */ });
/* harmony import */ var _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chakra-ui/anatomy */ "./node_modules/@chakra-ui/anatomy/dist/chakra-ui-anatomy.esm.js");
/* harmony import */ var _chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/theme-tools */ "./node_modules/@chakra-ui/theme-tools/dist/chakra-ui-theme-tools.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/lodash.mergewith/index.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");





function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var baseStyleContainer$3 = {
  borderTopWidth: "1px",
  borderColor: "inherit",
  _last: {
    borderBottomWidth: "1px"
  }
};
var baseStyleButton$1 = {
  transitionProperty: "common",
  transitionDuration: "normal",
  fontSize: "1rem",
  _focus: {
    boxShadow: "outline"
  },
  _hover: {
    bg: "blackAlpha.50"
  },
  _disabled: {
    opacity: 0.4,
    cursor: "not-allowed"
  },
  px: 4,
  py: 2
};
var baseStylePanel = {
  pt: 2,
  px: 4,
  pb: 5
};
var baseStyleIcon$5 = {
  fontSize: "1.25em"
};
var baseStyle$D = {
  container: baseStyleContainer$3,
  button: baseStyleButton$1,
  panel: baseStylePanel,
  icon: baseStyleIcon$5
};
var Accordion = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.accordionAnatomy.keys,
  baseStyle: baseStyle$D
};

var baseStyle$C = {
  container: {
    px: 4,
    py: 3
  },
  title: {
    fontWeight: "bold",
    lineHeight: 6,
    marginEnd: 2
  },
  description: {
    lineHeight: 6
  },
  icon: {
    flexShrink: 0,
    marginEnd: 3,
    w: 5,
    h: 6
  }
};

function getBg(props) {
  var theme = props.theme,
      c = props.colorScheme;
  var lightBg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, c + ".100", c);
  var darkBg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.transparentize)(c + ".200", 0.16)(theme);
  return (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(lightBg, darkBg)(props);
}

var variantSubtle$1 = function variantSubtle(props) {
  var c = props.colorScheme;
  return {
    container: {
      bg: getBg(props)
    },
    icon: {
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props)
    }
  };
};

var variantLeftAccent = function variantLeftAccent(props) {
  var c = props.colorScheme;
  return {
    container: {
      paddingStart: 3,
      borderStartWidth: "4px",
      borderStartColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props),
      bg: getBg(props)
    },
    icon: {
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props)
    }
  };
};

var variantTopAccent = function variantTopAccent(props) {
  var c = props.colorScheme;
  return {
    container: {
      pt: 2,
      borderTopWidth: "4px",
      borderTopColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props),
      bg: getBg(props)
    },
    icon: {
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props)
    }
  };
};

var variantSolid$3 = function variantSolid(props) {
  var c = props.colorScheme;
  return {
    container: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props),
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.900")(props)
    }
  };
};

var variants$b = {
  subtle: variantSubtle$1,
  "left-accent": variantLeftAccent,
  "top-accent": variantTopAccent,
  solid: variantSolid$3
};
var defaultProps$n = {
  variant: "subtle",
  colorScheme: "blue"
};
var Alert = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.alertAnatomy.keys,
  baseStyle: baseStyle$C,
  variants: variants$b,
  defaultProps: defaultProps$n
};

var spacing = {
  px: "1px",
  0.5: "0.125rem",
  1: "0.25rem",
  1.5: "0.375rem",
  2: "0.5rem",
  2.5: "0.625rem",
  3: "0.75rem",
  3.5: "0.875rem",
  4: "1rem",
  5: "1.25rem",
  6: "1.5rem",
  7: "1.75rem",
  8: "2rem",
  9: "2.25rem",
  10: "2.5rem",
  12: "3rem",
  14: "3.5rem",
  16: "4rem",
  20: "5rem",
  24: "6rem",
  28: "7rem",
  32: "8rem",
  36: "9rem",
  40: "10rem",
  44: "11rem",
  48: "12rem",
  52: "13rem",
  56: "14rem",
  60: "15rem",
  64: "16rem",
  72: "18rem",
  80: "20rem",
  96: "24rem"
};
/**
 * @deprecated
 * Spacing tokens are a part of DefaultChakraTheme['sizes']
 */

var largeSizes = {
  max: "max-content",
  min: "min-content",
  full: "100%",
  "3xs": "14rem",
  "2xs": "16rem",
  xs: "20rem",
  sm: "24rem",
  md: "28rem",
  lg: "32rem",
  xl: "36rem",
  "2xl": "42rem",
  "3xl": "48rem",
  "4xl": "56rem",
  "5xl": "64rem",
  "6xl": "72rem",
  "7xl": "80rem",
  "8xl": "90rem"
};
var container = {
  sm: "640px",
  md: "768px",
  lg: "1024px",
  xl: "1280px"
};

var sizes$l = _extends({}, spacing, largeSizes, {
  container: container
});
/**
 * @deprecated
 * You can derive the Sizes type from the DefaultChakraTheme
 *
 * type Sizes = DefaultChakraTheme['sizes']
 */


var sizes$m = sizes$l;

var baseStyleBadge = function baseStyleBadge(props) {
  return {
    transform: "translate(25%, 25%)",
    borderRadius: "full",
    border: "0.2em solid",
    borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.800")(props)
  };
};

var baseStyleExcessLabel = function baseStyleExcessLabel(props) {
  return {
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.400")(props)
  };
};

var baseStyleContainer$2 = function baseStyleContainer(props) {
  var name = props.name,
      theme = props.theme;
  var bg = name ? (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.randomColor)({
    string: name
  }) : "gray.400";
  var isBgDark = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.isDark)(bg)(theme);
  var color = "white";
  if (!isBgDark) color = "gray.800";
  var borderColor = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.800")(props);
  return {
    bg: bg,
    color: color,
    borderColor: borderColor,
    verticalAlign: "top"
  };
};

var baseStyle$B = function baseStyle(props) {
  return {
    badge: baseStyleBadge(props),
    excessLabel: baseStyleExcessLabel(props),
    container: baseStyleContainer$2(props)
  };
};

function getSize$3(size) {
  var themeSize = sizes$m[size];
  return {
    container: {
      width: size,
      height: size,
      fontSize: "calc(" + (themeSize != null ? themeSize : size) + " / 2.5)"
    },
    excessLabel: {
      width: size,
      height: size
    },
    label: {
      fontSize: "calc(" + (themeSize != null ? themeSize : size) + " / 2.5)",
      lineHeight: size !== "100%" ? themeSize != null ? themeSize : size : undefined
    }
  };
}

var sizes$k = {
  "2xs": getSize$3("4"),
  xs: getSize$3("6"),
  sm: getSize$3("8"),
  md: getSize$3("12"),
  lg: getSize$3("16"),
  xl: getSize$3("24"),
  "2xl": getSize$3("32"),
  full: getSize$3("100%")
};
var defaultProps$m = {
  size: "md"
};
var Avatar = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.avatarAnatomy.keys,
  baseStyle: baseStyle$B,
  sizes: sizes$k,
  defaultProps: defaultProps$m
};

var baseStyle$A = {
  px: 1,
  textTransform: "uppercase",
  fontSize: "xs",
  borderRadius: "sm",
  fontWeight: "bold"
};

var variantSolid$2 = function variantSolid(props) {
  var c = props.colorScheme,
      theme = props.theme;
  var dark = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.transparentize)(c + ".500", 0.6)(theme);
  return {
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", dark)(props),
    color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "whiteAlpha.800")(props)
  };
};

var variantSubtle = function variantSubtle(props) {
  var c = props.colorScheme,
      theme = props.theme;
  var darkBg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.transparentize)(c + ".200", 0.16)(theme);
  return {
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".100", darkBg)(props),
    color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".800", c + ".200")(props)
  };
};

var variantOutline$2 = function variantOutline(props) {
  var c = props.colorScheme,
      theme = props.theme;
  var darkColor = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.transparentize)(c + ".200", 0.8)(theme);
  var lightColor = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, c + ".500");
  var color = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(lightColor, darkColor)(props);
  return {
    color: color,
    boxShadow: "inset 0 0 0px 1px " + color
  };
};

var variants$a = {
  solid: variantSolid$2,
  subtle: variantSubtle,
  outline: variantOutline$2
};
var defaultProps$l = {
  variant: "subtle",
  colorScheme: "gray"
};
var Badge = {
  baseStyle: baseStyle$A,
  variants: variants$a,
  defaultProps: defaultProps$l
};

var baseStyleLink = {
  transitionProperty: "common",
  transitionDuration: "fast",
  transitionTimingFunction: "ease-out",
  cursor: "pointer",
  textDecoration: "none",
  outline: "none",
  color: "inherit",
  _hover: {
    textDecoration: "underline"
  },
  _focus: {
    boxShadow: "outline"
  }
};
var baseStyle$z = {
  link: baseStyleLink
};
var Breadcrumb = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.breadcrumbAnatomy.keys,
  baseStyle: baseStyle$z
};

var baseStyle$y = {
  lineHeight: "1.2",
  borderRadius: "md",
  fontWeight: "semibold",
  transitionProperty: "common",
  transitionDuration: "normal",
  _focus: {
    boxShadow: "outline"
  },
  _disabled: {
    opacity: 0.4,
    cursor: "not-allowed",
    boxShadow: "none"
  },
  _hover: {
    _disabled: {
      bg: "initial"
    }
  }
};

var variantGhost = function variantGhost(props) {
  var c = props.colorScheme,
      theme = props.theme;

  if (c === "gray") {
    return {
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("inherit", "whiteAlpha.900")(props),
      _hover: {
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "whiteAlpha.200")(props)
      },
      _active: {
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.300")(props)
      }
    };
  }

  var darkHoverBg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.transparentize)(c + ".200", 0.12)(theme);
  var darkActiveBg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.transparentize)(c + ".200", 0.24)(theme);
  return {
    color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".600", c + ".200")(props),
    bg: "transparent",
    _hover: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".50", darkHoverBg)(props)
    },
    _active: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".100", darkActiveBg)(props)
    }
  };
};

var variantOutline$1 = function variantOutline(props) {
  var c = props.colorScheme;
  var borderColor = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.300")(props);
  return _extends({
    border: "1px solid",
    borderColor: c === "gray" ? borderColor : "currentColor"
  }, variantGhost(props));
};

/** Accessible color overrides for less accessible colors. */
var accessibleColorMap = {
  yellow: {
    bg: "yellow.400",
    color: "black",
    hoverBg: "yellow.500",
    activeBg: "yellow.600"
  },
  cyan: {
    bg: "cyan.400",
    color: "black",
    hoverBg: "cyan.500",
    activeBg: "cyan.600"
  }
};

var variantSolid$1 = function variantSolid(props) {
  var _accessibleColorMap$c;

  var c = props.colorScheme;

  if (c === "gray") {
    var _bg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "whiteAlpha.200")(props);

    return {
      bg: _bg,
      _hover: {
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.300")(props),
        _disabled: {
          bg: _bg
        }
      },
      _active: {
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.300", "whiteAlpha.400")(props)
      }
    };
  }

  var _ref = (_accessibleColorMap$c = accessibleColorMap[c]) != null ? _accessibleColorMap$c : {},
      _ref$bg = _ref.bg,
      bg = _ref$bg === void 0 ? c + ".500" : _ref$bg,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? "white" : _ref$color,
      _ref$hoverBg = _ref.hoverBg,
      hoverBg = _ref$hoverBg === void 0 ? c + ".600" : _ref$hoverBg,
      _ref$activeBg = _ref.activeBg,
      activeBg = _ref$activeBg === void 0 ? c + ".700" : _ref$activeBg;

  var background = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(bg, c + ".200")(props);
  return {
    bg: background,
    color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(color, "gray.800")(props),
    _hover: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(hoverBg, c + ".300")(props),
      _disabled: {
        bg: background
      }
    },
    _active: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(activeBg, c + ".400")(props)
    }
  };
};

var variantLink = function variantLink(props) {
  var c = props.colorScheme;
  return {
    padding: 0,
    height: "auto",
    lineHeight: "normal",
    verticalAlign: "baseline",
    color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props),
    _hover: {
      textDecoration: "underline",
      _disabled: {
        textDecoration: "none"
      }
    },
    _active: {
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".700", c + ".500")(props)
    }
  };
};

var variantUnstyled$2 = {
  bg: "none",
  color: "inherit",
  display: "inline",
  lineHeight: "inherit",
  m: 0,
  p: 0
};
var variants$9 = {
  ghost: variantGhost,
  outline: variantOutline$1,
  solid: variantSolid$1,
  link: variantLink,
  unstyled: variantUnstyled$2
};
var sizes$j = {
  lg: {
    h: 12,
    minW: 12,
    fontSize: "lg",
    px: 6
  },
  md: {
    h: 10,
    minW: 10,
    fontSize: "md",
    px: 4
  },
  sm: {
    h: 8,
    minW: 8,
    fontSize: "sm",
    px: 3
  },
  xs: {
    h: 6,
    minW: 6,
    fontSize: "xs",
    px: 2
  }
};
var defaultProps$k = {
  variant: "solid",
  size: "md",
  colorScheme: "gray"
};
var Button = {
  baseStyle: baseStyle$y,
  variants: variants$9,
  sizes: sizes$j,
  defaultProps: defaultProps$k
};

var baseStyleControl$1 = function baseStyleControl(props) {
  var c = props.colorScheme;
  return {
    w: "100%",
    transitionProperty: "box-shadow",
    transitionDuration: "normal",
    border: "2px solid",
    borderRadius: "sm",
    borderColor: "inherit",
    color: "white",
    _checked: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props),
      borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props),
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.900")(props),
      _hover: {
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".600", c + ".300")(props),
        borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".600", c + ".300")(props)
      },
      _disabled: {
        borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "transparent")(props),
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.300")(props),
        color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.500", "whiteAlpha.500")(props)
      }
    },
    _indeterminate: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props),
      borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props),
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.900")(props)
    },
    _disabled: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "whiteAlpha.100")(props),
      borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "transparent")(props)
    },
    _focus: {
      boxShadow: "outline"
    },
    _invalid: {
      borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("red.500", "red.300")(props)
    }
  };
};

var baseStyleLabel$3 = {
  userSelect: "none",
  _disabled: {
    opacity: 0.4
  }
};
var baseStyleIcon$4 = {
  transitionProperty: "transform",
  transitionDuration: "normal"
};

var baseStyle$x = function baseStyle(props) {
  return {
    icon: baseStyleIcon$4,
    control: baseStyleControl$1(props),
    label: baseStyleLabel$3
  };
};

var sizes$i = {
  sm: {
    control: {
      h: 3,
      w: 3
    },
    label: {
      fontSize: "sm"
    },
    icon: {
      fontSize: "0.45rem"
    }
  },
  md: {
    control: {
      w: 4,
      h: 4
    },
    label: {
      fontSize: "md"
    },
    icon: {
      fontSize: "0.625rem"
    }
  },
  lg: {
    control: {
      w: 5,
      h: 5
    },
    label: {
      fontSize: "lg"
    },
    icon: {
      fontSize: "0.625rem"
    }
  }
};
var defaultProps$j = {
  size: "md",
  colorScheme: "blue"
};
var Checkbox = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.checkboxAnatomy.keys,
  baseStyle: baseStyle$x,
  sizes: sizes$i,
  defaultProps: defaultProps$j
};

var _lg$1, _md$1, _sm$1;
var $size$1 = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("close-button-size");

var baseStyle$w = function baseStyle(props) {
  var hoverBg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("blackAlpha.100", "whiteAlpha.100")(props);
  var activeBg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("blackAlpha.200", "whiteAlpha.200")(props);
  return {
    w: [$size$1.reference],
    h: [$size$1.reference],
    borderRadius: "md",
    transitionProperty: "common",
    transitionDuration: "normal",
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed",
      boxShadow: "none"
    },
    _hover: {
      bg: hoverBg
    },
    _active: {
      bg: activeBg
    },
    _focus: {
      boxShadow: "outline"
    }
  };
};

var sizes$h = {
  lg: (_lg$1 = {}, _lg$1[$size$1.variable] = "40px", _lg$1.fontSize = "16px", _lg$1),
  md: (_md$1 = {}, _md$1[$size$1.variable] = "32px", _md$1.fontSize = "12px", _md$1),
  sm: (_sm$1 = {}, _sm$1[$size$1.variable] = "24px", _sm$1.fontSize = "10px", _sm$1)
};
var defaultProps$i = {
  size: "md"
};
var CloseButton = {
  baseStyle: baseStyle$w,
  sizes: sizes$h,
  defaultProps: defaultProps$i
};

var variants$8 = Badge.variants,
    defaultProps$h = Badge.defaultProps;
var baseStyle$v = {
  fontFamily: "mono",
  fontSize: "sm",
  px: "0.2em",
  borderRadius: "sm"
};
var Code = {
  baseStyle: baseStyle$v,
  variants: variants$8,
  defaultProps: defaultProps$h
};

var baseStyle$u = {
  w: "100%",
  mx: "auto",
  maxW: "60ch",
  px: "1rem"
};
var Container = {
  baseStyle: baseStyle$u
};

var baseStyle$t = {
  opacity: 0.6,
  borderColor: "inherit"
};
var variantSolid = {
  borderStyle: "solid"
};
var variantDashed = {
  borderStyle: "dashed"
};
var variants$7 = {
  solid: variantSolid,
  dashed: variantDashed
};
var defaultProps$g = {
  variant: "solid"
};
var Divider = {
  baseStyle: baseStyle$t,
  variants: variants$7,
  defaultProps: defaultProps$g
};

/**
 * Since the `maxWidth` prop references theme.sizes internally,
 * we can leverage that to size our modals.
 */

function getSize$2(value) {
  if (value === "full") {
    return {
      dialog: {
        maxW: "100vw",
        h: "100vh"
      }
    };
  }

  return {
    dialog: {
      maxW: value
    }
  };
}

var baseStyleOverlay$1 = {
  bg: "blackAlpha.600",
  zIndex: "overlay"
};
var baseStyleDialogContainer$1 = {
  display: "flex",
  zIndex: "modal",
  justifyContent: "center"
};

var baseStyleDialog$1 = function baseStyleDialog(props) {
  var isFullHeight = props.isFullHeight;
  return _extends({}, isFullHeight && {
    height: "100vh"
  }, {
    zIndex: "modal",
    maxH: "100vh",
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.700")(props),
    color: "inherit",
    boxShadow: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("lg", "dark-lg")(props)
  });
};

var baseStyleHeader$2 = {
  px: 6,
  py: 4,
  fontSize: "xl",
  fontWeight: "semibold"
};
var baseStyleCloseButton$3 = {
  position: "absolute",
  top: 2,
  insetEnd: 3
};
var baseStyleBody$2 = {
  px: 6,
  py: 2,
  flex: 1,
  overflow: "auto"
};
var baseStyleFooter$2 = {
  px: 6,
  py: 4
};

var baseStyle$s = function baseStyle(props) {
  return {
    overlay: baseStyleOverlay$1,
    dialogContainer: baseStyleDialogContainer$1,
    dialog: baseStyleDialog$1(props),
    header: baseStyleHeader$2,
    closeButton: baseStyleCloseButton$3,
    body: baseStyleBody$2,
    footer: baseStyleFooter$2
  };
};

var sizes$g = {
  xs: getSize$2("xs"),
  sm: getSize$2("md"),
  md: getSize$2("lg"),
  lg: getSize$2("2xl"),
  xl: getSize$2("4xl"),
  full: getSize$2("full")
};
var defaultProps$f = {
  size: "xs"
};
var Drawer = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.drawerAnatomy.keys,
  baseStyle: baseStyle$s,
  sizes: sizes$g,
  defaultProps: defaultProps$f
};

var baseStylePreview = {
  borderRadius: "md",
  py: "3px",
  transitionProperty: "common",
  transitionDuration: "normal"
};
var baseStyleInput = {
  borderRadius: "md",
  py: "3px",
  transitionProperty: "common",
  transitionDuration: "normal",
  width: "full",
  _focus: {
    boxShadow: "outline"
  },
  _placeholder: {
    opacity: 0.6
  }
};
var baseStyle$r = {
  preview: baseStylePreview,
  input: baseStyleInput
};
var Editable = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.editableAnatomy.keys,
  baseStyle: baseStyle$r
};

var baseStyleRequiredIndicator = function baseStyleRequiredIndicator(props) {
  return {
    marginStart: 1,
    color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("red.500", "red.300")(props)
  };
};

var baseStyleHelperText = function baseStyleHelperText(props) {
  return {
    mt: 2,
    color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.500", "whiteAlpha.600")(props),
    lineHeight: "normal",
    fontSize: "sm"
  };
};

var baseStyle$q = function baseStyle(props) {
  return {
    container: {
      width: "100%",
      position: "relative"
    },
    requiredIndicator: baseStyleRequiredIndicator(props),
    helperText: baseStyleHelperText(props)
  };
};

var Form = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.formAnatomy.keys,
  baseStyle: baseStyle$q
};

var baseStyle$p = {
  fontSize: "md",
  marginEnd: 3,
  mb: 2,
  fontWeight: "medium",
  transitionProperty: "common",
  transitionDuration: "normal",
  opacity: 1,
  _disabled: {
    opacity: 0.4
  }
};
var FormLabel = {
  baseStyle: baseStyle$p
};

var baseStyle$o = {
  fontFamily: "heading",
  fontWeight: "bold"
};
var sizes$f = {
  "4xl": {
    fontSize: ["6xl", null, "7xl"],
    lineHeight: 1
  },
  "3xl": {
    fontSize: ["5xl", null, "6xl"],
    lineHeight: 1
  },
  "2xl": {
    fontSize: ["4xl", null, "5xl"],
    lineHeight: [1.2, null, 1]
  },
  xl: {
    fontSize: ["3xl", null, "4xl"],
    lineHeight: [1.33, null, 1.2]
  },
  lg: {
    fontSize: ["2xl", null, "3xl"],
    lineHeight: [1.33, null, 1.2]
  },
  md: {
    fontSize: "xl",
    lineHeight: 1.2
  },
  sm: {
    fontSize: "md",
    lineHeight: 1.2
  },
  xs: {
    fontSize: "sm",
    lineHeight: 1.2
  }
};
var defaultProps$e = {
  size: "xl"
};
var Heading = {
  baseStyle: baseStyle$o,
  sizes: sizes$f,
  defaultProps: defaultProps$e
};

var baseStyle$n = {
  field: {
    width: "100%",
    minWidth: 0,
    outline: 0,
    position: "relative",
    appearance: "none",
    transitionProperty: "common",
    transitionDuration: "normal"
  }
};
var size = {
  lg: {
    fontSize: "lg",
    px: 4,
    h: 12,
    borderRadius: "md"
  },
  md: {
    fontSize: "md",
    px: 4,
    h: 10,
    borderRadius: "md"
  },
  sm: {
    fontSize: "sm",
    px: 3,
    h: 8,
    borderRadius: "sm"
  },
  xs: {
    fontSize: "xs",
    px: 2,
    h: 6,
    borderRadius: "sm"
  }
};
var sizes$e = {
  lg: {
    field: size.lg,
    addon: size.lg
  },
  md: {
    field: size.md,
    addon: size.md
  },
  sm: {
    field: size.sm,
    addon: size.sm
  },
  xs: {
    field: size.xs,
    addon: size.xs
  }
};

function getDefaults(props) {
  var fc = props.focusBorderColor,
      ec = props.errorBorderColor;
  return {
    focusBorderColor: fc || (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("blue.500", "blue.300")(props),
    errorBorderColor: ec || (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("red.500", "red.300")(props)
  };
}

var variantOutline = function variantOutline(props) {
  var theme = props.theme;

  var _getDefaults = getDefaults(props),
      fc = _getDefaults.focusBorderColor,
      ec = _getDefaults.errorBorderColor;

  return {
    field: {
      border: "1px solid",
      borderColor: "inherit",
      bg: "inherit",
      _hover: {
        borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.300", "whiteAlpha.400")(props)
      },
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _disabled: {
        opacity: 0.4,
        cursor: "not-allowed"
      },
      _invalid: {
        borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, ec),
        boxShadow: "0 0 0 1px " + (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, ec)
      },
      _focus: {
        zIndex: 1,
        borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, fc),
        boxShadow: "0 0 0 1px " + (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, fc)
      }
    },
    addon: {
      border: "1px solid",
      borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("inherit", "whiteAlpha.50")(props),
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "whiteAlpha.300")(props)
    }
  };
};

var variantFilled = function variantFilled(props) {
  var theme = props.theme;

  var _getDefaults2 = getDefaults(props),
      fc = _getDefaults2.focusBorderColor,
      ec = _getDefaults2.errorBorderColor;

  return {
    field: {
      border: "2px solid",
      borderColor: "transparent",
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "whiteAlpha.50")(props),
      _hover: {
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.100")(props)
      },
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _disabled: {
        opacity: 0.4,
        cursor: "not-allowed"
      },
      _invalid: {
        borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, ec)
      },
      _focus: {
        bg: "transparent",
        borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, fc)
      }
    },
    addon: {
      border: "2px solid",
      borderColor: "transparent",
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "whiteAlpha.50")(props)
    }
  };
};

var variantFlushed = function variantFlushed(props) {
  var theme = props.theme;

  var _getDefaults3 = getDefaults(props),
      fc = _getDefaults3.focusBorderColor,
      ec = _getDefaults3.errorBorderColor;

  return {
    field: {
      borderBottom: "1px solid",
      borderColor: "inherit",
      borderRadius: 0,
      px: 0,
      bg: "transparent",
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _invalid: {
        borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, ec),
        boxShadow: "0px 1px 0px 0px " + (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, ec)
      },
      _focus: {
        borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, fc),
        boxShadow: "0px 1px 0px 0px " + (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, fc)
      }
    },
    addon: {
      borderBottom: "2px solid",
      borderColor: "inherit",
      borderRadius: 0,
      px: 0,
      bg: "transparent"
    }
  };
};

var variantUnstyled$1 = {
  field: {
    bg: "transparent",
    px: 0,
    height: "auto"
  },
  addon: {
    bg: "transparent",
    px: 0,
    height: "auto"
  }
};
var variants$6 = {
  outline: variantOutline,
  filled: variantFilled,
  flushed: variantFlushed,
  unstyled: variantUnstyled$1
};
var defaultProps$d = {
  size: "md",
  variant: "outline"
};
var Input = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.inputAnatomy.keys,
  baseStyle: baseStyle$n,
  sizes: sizes$e,
  variants: variants$6,
  defaultProps: defaultProps$d
};

var baseStyle$m = function baseStyle(props) {
  return {
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "whiteAlpha")(props),
    borderRadius: "md",
    borderWidth: "1px",
    borderBottomWidth: "3px",
    fontSize: "0.8em",
    fontWeight: "bold",
    lineHeight: "normal",
    px: "0.4em",
    whiteSpace: "nowrap"
  };
};

var Kbd = {
  baseStyle: baseStyle$m
};

var baseStyle$l = {
  transitionProperty: "common",
  transitionDuration: "fast",
  transitionTimingFunction: "ease-out",
  cursor: "pointer",
  textDecoration: "none",
  outline: "none",
  color: "inherit",
  _hover: {
    textDecoration: "underline"
  },
  _focus: {
    boxShadow: "outline"
  }
};
var Link = {
  baseStyle: baseStyle$l
};

var baseStyleIcon$3 = {
  marginEnd: "0.5rem",
  display: "inline",
  verticalAlign: "text-bottom"
};
var baseStyle$k = {
  container: {},
  item: {},
  icon: baseStyleIcon$3
};
var List = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.listAnatomy.keys,
  baseStyle: baseStyle$k
};

var baseStyleList = function baseStyleList(props) {
  return {
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("#fff", "gray.700")(props),
    boxShadow: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("sm", "dark-lg")(props),
    color: "inherit",
    minW: "3xs",
    py: "2",
    zIndex: 1,
    borderRadius: "md",
    borderWidth: "1px"
  };
};

var baseStyleItem = function baseStyleItem(props) {
  return {
    py: "0.4rem",
    px: "0.8rem",
    transitionProperty: "background",
    transitionDuration: "ultra-fast",
    transitionTimingFunction: "ease-in",
    _focus: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "whiteAlpha.100")(props)
    },
    _active: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.200")(props)
    },
    _expanded: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "whiteAlpha.100")(props)
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    }
  };
};

var baseStyleGroupTitle = {
  mx: 4,
  my: 2,
  fontWeight: "semibold",
  fontSize: "sm"
};
var baseStyleCommand = {
  opacity: 0.6
};
var baseStyleDivider = {
  border: 0,
  borderBottom: "1px solid",
  borderColor: "inherit",
  my: "0.5rem",
  opacity: 0.6
};
var baseStyleButton = {
  transitionProperty: "common",
  transitionDuration: "normal"
};

var baseStyle$j = function baseStyle(props) {
  return {
    button: baseStyleButton,
    list: baseStyleList(props),
    item: baseStyleItem(props),
    groupTitle: baseStyleGroupTitle,
    command: baseStyleCommand,
    divider: baseStyleDivider
  };
};

var Menu = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.menuAnatomy.keys,
  baseStyle: baseStyle$j
};

var baseStyleOverlay = {
  bg: "blackAlpha.600",
  zIndex: "modal"
};

var baseStyleDialogContainer = function baseStyleDialogContainer(props) {
  var isCentered = props.isCentered,
      scrollBehavior = props.scrollBehavior;
  return {
    display: "flex",
    zIndex: "modal",
    justifyContent: "center",
    alignItems: isCentered ? "center" : "flex-start",
    overflow: scrollBehavior === "inside" ? "hidden" : "auto"
  };
};

var baseStyleDialog = function baseStyleDialog(props) {
  var scrollBehavior = props.scrollBehavior;
  return {
    borderRadius: "md",
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.700")(props),
    color: "inherit",
    my: "3.75rem",
    zIndex: "modal",
    maxH: scrollBehavior === "inside" ? "calc(100% - 7.5rem)" : undefined,
    boxShadow: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("lg", "dark-lg")(props)
  };
};

var baseStyleHeader$1 = {
  px: 6,
  py: 4,
  fontSize: "xl",
  fontWeight: "semibold"
};
var baseStyleCloseButton$2 = {
  position: "absolute",
  top: 2,
  insetEnd: 3
};

var baseStyleBody$1 = function baseStyleBody(props) {
  var scrollBehavior = props.scrollBehavior;
  return {
    px: 6,
    py: 2,
    flex: 1,
    overflow: scrollBehavior === "inside" ? "auto" : undefined
  };
};

var baseStyleFooter$1 = {
  px: 6,
  py: 4
};

var baseStyle$i = function baseStyle(props) {
  return {
    overlay: baseStyleOverlay,
    dialogContainer: baseStyleDialogContainer(props),
    dialog: baseStyleDialog(props),
    header: baseStyleHeader$1,
    closeButton: baseStyleCloseButton$2,
    body: baseStyleBody$1(props),
    footer: baseStyleFooter$1
  };
};
/**
 * Since the `maxWidth` prop references theme.sizes internally,
 * we can leverage that to size our modals.
 */


function getSize$1(value) {
  if (value === "full") {
    return {
      dialog: {
        maxW: "100vw",
        minH: "100vh",
        my: 0
      }
    };
  }

  return {
    dialog: {
      maxW: value
    }
  };
}

var sizes$d = {
  xs: getSize$1("xs"),
  sm: getSize$1("sm"),
  md: getSize$1("md"),
  lg: getSize$1("lg"),
  xl: getSize$1("xl"),
  "2xl": getSize$1("2xl"),
  "3xl": getSize$1("3xl"),
  "4xl": getSize$1("4xl"),
  "5xl": getSize$1("5xl"),
  "6xl": getSize$1("6xl"),
  full: getSize$1("full")
};
var defaultProps$c = {
  size: "md"
};
var Modal = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.modalAnatomy.keys,
  baseStyle: baseStyle$i,
  sizes: sizes$d,
  defaultProps: defaultProps$c
};

var typography = {
  letterSpacings: {
    tighter: "-0.05em",
    tight: "-0.025em",
    normal: "0",
    wide: "0.025em",
    wider: "0.05em",
    widest: "0.1em"
  },
  lineHeights: {
    normal: "normal",
    none: 1,
    shorter: 1.25,
    "short": 1.375,
    base: 1.5,
    tall: 1.625,
    taller: "2",
    "3": ".75rem",
    "4": "1rem",
    "5": "1.25rem",
    "6": "1.5rem",
    "7": "1.75rem",
    "8": "2rem",
    "9": "2.25rem",
    "10": "2.5rem"
  },
  fontWeights: {
    hairline: 100,
    thin: 200,
    light: 300,
    normal: 400,
    medium: 500,
    semibold: 600,
    bold: 700,
    extrabold: 800,
    black: 900
  },
  fonts: {
    heading: "-apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"",
    body: "-apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"",
    mono: "SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace"
  },
  fontSizes: {
    xs: "0.75rem",
    sm: "0.875rem",
    md: "1rem",
    lg: "1.125rem",
    xl: "1.25rem",
    "2xl": "1.5rem",
    "3xl": "1.875rem",
    "4xl": "2.25rem",
    "5xl": "3rem",
    "6xl": "3.75rem",
    "7xl": "4.5rem",
    "8xl": "6rem",
    "9xl": "8rem"
  }
};
/**
 * @deprecated
 * You can derive the Typography type from the DefaultChakraTheme
 *
 * type Typography = Pick<
 *   DefaultChakraTheme,
 *   | "letterSpacings"
 *   | "lineHeights"
 *   | "fontWeights"
 *   | "fonts"
 *   | "fontSizes"
 *  >
 */

var typography$1 = typography;

var _baseStyleRoot, _Input$baseStyle$fiel, _Input$baseStyle;
var variants$5 = Input.variants,
    defaultProps$b = Input.defaultProps;
var $stepperWidth = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("number-input-stepper-width");
var $inputPadding = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("number-input-input-padding");
var inputPaddingValue = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.calc)($stepperWidth).add("0.5rem").toString();
var baseStyleRoot$1 = (_baseStyleRoot = {}, _baseStyleRoot[$stepperWidth.variable] = "24px", _baseStyleRoot[$inputPadding.variable] = inputPaddingValue, _baseStyleRoot);
var baseStyleField$1 = (_Input$baseStyle$fiel = (_Input$baseStyle = Input.baseStyle) == null ? void 0 : _Input$baseStyle.field) != null ? _Input$baseStyle$fiel : {};
var baseStyleStepperGroup = {
  width: [$stepperWidth.reference]
};

var baseStyleStepper = function baseStyleStepper(props) {
  return {
    borderStart: "1px solid",
    borderStartColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("inherit", "whiteAlpha.300")(props),
    color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("inherit", "whiteAlpha.800")(props),
    _active: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.300")(props)
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    }
  };
};

var baseStyle$h = function baseStyle(props) {
  return {
    root: baseStyleRoot$1,
    field: baseStyleField$1,
    stepperGroup: baseStyleStepperGroup,
    stepper: baseStyleStepper(props)
  };
};

function getSize(size) {
  var _sizeStyle$field$font, _sizeStyle$field;

  var sizeStyle = Input.sizes[size];
  var radius = {
    lg: "md",
    md: "md",
    sm: "sm",
    xs: "sm"
  };

  var _fontSize = (_sizeStyle$field$font = (_sizeStyle$field = sizeStyle.field) == null ? void 0 : _sizeStyle$field.fontSize) != null ? _sizeStyle$field$font : "md";

  var fontSize = typography$1.fontSizes[_fontSize.toString()];

  return {
    field: _extends({}, sizeStyle.field, {
      paddingInlineEnd: $inputPadding.reference,
      verticalAlign: "top"
    }),
    stepper: {
      fontSize: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.calc)(fontSize).multiply(0.75).toString(),
      _first: {
        borderTopEndRadius: radius[size]
      },
      _last: {
        borderBottomEndRadius: radius[size],
        mt: "-1px",
        borderTopWidth: 1
      }
    }
  };
}

var sizes$c = {
  xs: getSize("xs"),
  sm: getSize("sm"),
  md: getSize("md"),
  lg: getSize("lg")
};
var NumberInput = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.numberInputAnatomy.keys,
  baseStyle: baseStyle$h,
  sizes: sizes$c,
  variants: variants$5,
  defaultProps: defaultProps$b
};

var _Input$variants$unsty$1;

var baseStyle$g = _extends({}, Input.baseStyle.field, {
  textAlign: "center"
});

var sizes$b = {
  lg: {
    fontSize: "lg",
    w: 12,
    h: 12,
    borderRadius: "md"
  },
  md: {
    fontSize: "md",
    w: 10,
    h: 10,
    borderRadius: "md"
  },
  sm: {
    fontSize: "sm",
    w: 8,
    h: 8,
    borderRadius: "sm"
  },
  xs: {
    fontSize: "xs",
    w: 6,
    h: 6,
    borderRadius: "sm"
  }
};
var variants$4 = {
  outline: function outline(props) {
    var _Input$variants$outli;

    return (_Input$variants$outli = Input.variants.outline(props).field) != null ? _Input$variants$outli : {};
  },
  flushed: function flushed(props) {
    var _Input$variants$flush;

    return (_Input$variants$flush = Input.variants.flushed(props).field) != null ? _Input$variants$flush : {};
  },
  filled: function filled(props) {
    var _Input$variants$fille;

    return (_Input$variants$fille = Input.variants.filled(props).field) != null ? _Input$variants$fille : {};
  },
  unstyled: (_Input$variants$unsty$1 = Input.variants.unstyled.field) != null ? _Input$variants$unsty$1 : {}
};
var defaultProps$a = Input.defaultProps;
var PinInput = {
  baseStyle: baseStyle$g,
  sizes: sizes$b,
  variants: variants$4,
  defaultProps: defaultProps$a
};

var $popperBg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("popper-bg");
var $arrowBg$1 = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("popper-arrow-bg");
var $arrowShadowColor = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("popper-arrow-shadow-color");
var baseStylePopper = {
  zIndex: 10
};

var baseStyleContent = function baseStyleContent(props) {
  var _ref;

  var bg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.700")(props);
  var shadowColor = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.300")(props);
  return _ref = {}, _ref[$popperBg.variable] = "colors." + bg, _ref.bg = $popperBg.reference, _ref[$arrowBg$1.variable] = $popperBg.reference, _ref[$arrowShadowColor.variable] = "colors." + shadowColor, _ref.width = "xs", _ref.border = "1px solid", _ref.borderColor = "inherit", _ref.borderRadius = "md", _ref.boxShadow = "sm", _ref.zIndex = "inherit", _ref._focus = {
    outline: 0,
    boxShadow: "outline"
  }, _ref;
};

var baseStyleHeader = {
  px: 3,
  py: 2,
  borderBottomWidth: "1px"
};
var baseStyleBody = {
  px: 3,
  py: 2
};
var baseStyleFooter = {
  px: 3,
  py: 2,
  borderTopWidth: "1px"
};
var baseStyleCloseButton$1 = {
  position: "absolute",
  borderRadius: "md",
  top: 1,
  insetEnd: 2,
  padding: 2
};

var baseStyle$f = function baseStyle(props) {
  return {
    popper: baseStylePopper,
    content: baseStyleContent(props),
    header: baseStyleHeader,
    body: baseStyleBody,
    footer: baseStyleFooter,
    arrow: {},
    closeButton: baseStyleCloseButton$1
  };
};

var Popover = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.popoverAnatomy.keys,
  baseStyle: baseStyle$f
};

function filledStyle(props) {
  var c = props.colorScheme,
      t = props.theme,
      isIndeterminate = props.isIndeterminate,
      hasStripe = props.hasStripe;
  var stripeStyle = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)((0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.generateStripe)(), (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.generateStripe)("1rem", "rgba(0,0,0,0.1)"))(props);
  var bgColor = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props);
  var gradient = "linear-gradient(\n    to right,\n    transparent 0%,\n    " + (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(t, bgColor) + " 50%,\n    transparent 100%\n  )";
  var addStripe = !isIndeterminate && hasStripe;
  return _extends({}, addStripe && stripeStyle, isIndeterminate ? {
    bgImage: gradient
  } : {
    bgColor: bgColor
  });
}

var baseStyleLabel$2 = {
  lineHeight: "1",
  fontSize: "0.25em",
  fontWeight: "bold",
  color: "white"
};

var baseStyleTrack$2 = function baseStyleTrack(props) {
  return {
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "whiteAlpha.300")(props)
  };
};

var baseStyleFilledTrack$1 = function baseStyleFilledTrack(props) {
  return _extends({
    transitionProperty: "common",
    transitionDuration: "slow"
  }, filledStyle(props));
};

var baseStyle$e = function baseStyle(props) {
  return {
    label: baseStyleLabel$2,
    filledTrack: baseStyleFilledTrack$1(props),
    track: baseStyleTrack$2(props)
  };
};

var sizes$a = {
  xs: {
    track: {
      h: "0.25rem"
    }
  },
  sm: {
    track: {
      h: "0.5rem"
    }
  },
  md: {
    track: {
      h: "0.75rem"
    }
  },
  lg: {
    track: {
      h: "1rem"
    }
  }
};
var defaultProps$9 = {
  size: "md",
  colorScheme: "blue"
};
var Progress = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.progressAnatomy.keys,
  sizes: sizes$a,
  baseStyle: baseStyle$e,
  defaultProps: defaultProps$9
};

var baseStyleControl = function baseStyleControl(props) {
  var _Checkbox$baseStyle = Checkbox.baseStyle(props),
      _Checkbox$baseStyle$c = _Checkbox$baseStyle.control,
      control = _Checkbox$baseStyle$c === void 0 ? {} : _Checkbox$baseStyle$c;

  return _extends({}, control, {
    borderRadius: "full",
    _checked: _extends({}, control["_checked"], {
      _before: {
        content: "\"\"",
        display: "inline-block",
        pos: "relative",
        w: "50%",
        h: "50%",
        borderRadius: "50%",
        bg: "currentColor"
      }
    })
  });
};

var baseStyle$d = function baseStyle(props) {
  return {
    label: Checkbox.baseStyle(props).label,
    control: baseStyleControl(props)
  };
};

var sizes$9 = {
  md: {
    control: {
      w: 4,
      h: 4
    },
    label: {
      fontSize: "md"
    }
  },
  lg: {
    control: {
      w: 5,
      h: 5
    },
    label: {
      fontSize: "lg"
    }
  },
  sm: {
    control: {
      width: 3,
      height: 3
    },
    label: {
      fontSize: "sm"
    }
  }
};
var defaultProps$8 = {
  size: "md",
  colorScheme: "blue"
};
var Radio = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.radioAnatomy.keys,
  baseStyle: baseStyle$d,
  sizes: sizes$9,
  defaultProps: defaultProps$8
};

var baseStyleField = function baseStyleField(props) {
  return _extends({}, Input.baseStyle.field, {
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.700")(props),
    appearance: "none",
    paddingBottom: "1px",
    lineHeight: "normal",
    "> option, > optgroup": {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.700")(props)
    }
  });
};

var baseStyleIcon$2 = {
  width: "1.5rem",
  height: "100%",
  insetEnd: "0.5rem",
  position: "relative",
  color: "currentColor",
  fontSize: "1.25rem",
  _disabled: {
    opacity: 0.5
  }
};

var baseStyle$c = function baseStyle(props) {
  return {
    field: baseStyleField(props),
    icon: baseStyleIcon$2
  };
};

var iconSpacing = {
  paddingInlineEnd: "2rem"
};
var sizes$8 = _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2___default()({}, Input.sizes, {
  lg: {
    field: iconSpacing
  },
  md: {
    field: iconSpacing
  },
  sm: {
    field: iconSpacing
  },
  xs: {
    field: iconSpacing,
    icon: {
      insetEnd: "0.25rem"
    }
  }
});
var Select = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.selectAnatomy.keys,
  baseStyle: baseStyle$c,
  sizes: sizes$8,
  variants: Input.variants,
  defaultProps: Input.defaultProps
};

var fade = function fade(startColor, endColor) {
  return (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.keyframes)({
    from: {
      borderColor: startColor,
      background: startColor
    },
    to: {
      borderColor: endColor,
      background: endColor
    }
  });
};

var baseStyle$b = function baseStyle(props) {
  var defaultStartColor = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.100", "gray.800")(props);
  var defaultEndColor = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.400", "gray.600")(props);
  var _props$startColor = props.startColor,
      startColor = _props$startColor === void 0 ? defaultStartColor : _props$startColor,
      _props$endColor = props.endColor,
      endColor = _props$endColor === void 0 ? defaultEndColor : _props$endColor,
      speed = props.speed,
      theme = props.theme;
  var start = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, startColor);
  var end = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, endColor);
  return {
    opacity: 0.7,
    borderRadius: "2px",
    borderColor: start,
    background: end,
    animation: speed + "s linear infinite alternate " + fade(start, end)
  };
};

var Skeleton = {
  baseStyle: baseStyle$b
};

var baseStyle$a = function baseStyle(props) {
  return {
    borderRadius: "md",
    fontWeight: "semibold",
    _focus: {
      boxShadow: "outline",
      padding: "1rem",
      position: "fixed",
      top: "1.5rem",
      insetStart: "1.5rem",
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.700")(props)
    }
  };
};

var SkipLink = {
  baseStyle: baseStyle$a
};

function thumbOrientation(props) {
  return (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.orient)({
    orientation: props.orientation,
    vertical: {
      left: "50%",
      transform: "translateX(-50%)",
      _active: {
        transform: "translateX(-50%) scale(1.15)"
      }
    },
    horizontal: {
      top: "50%",
      transform: "translateY(-50%)",
      _active: {
        transform: "translateY(-50%) scale(1.15)"
      }
    }
  });
}

var baseStyleContainer$1 = function baseStyleContainer(props) {
  var orientation = props.orientation;
  return _extends({
    display: "inline-block",
    position: "relative",
    cursor: "pointer",
    _disabled: {
      opacity: 0.6,
      cursor: "default",
      pointerEvents: "none"
    }
  }, (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.orient)({
    orientation: orientation,
    vertical: {
      h: "100%"
    },
    horizontal: {
      w: "100%"
    }
  }));
};

var baseStyleTrack$1 = function baseStyleTrack(props) {
  return {
    overflow: "hidden",
    borderRadius: "sm",
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.200")(props),
    _disabled: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.300", "whiteAlpha.300")(props)
    }
  };
};

var baseStyleThumb$1 = function baseStyleThumb(props) {
  return _extends({
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    position: "absolute",
    outline: 0,
    zIndex: 1,
    borderRadius: "full",
    bg: "white",
    boxShadow: "base",
    border: "1px solid",
    borderColor: "transparent",
    transitionProperty: "transform",
    transitionDuration: "normal",
    _focus: {
      boxShadow: "outline"
    },
    _disabled: {
      bg: "gray.300"
    }
  }, thumbOrientation(props));
};

var baseStyleFilledTrack = function baseStyleFilledTrack(props) {
  var c = props.colorScheme;
  return {
    width: "inherit",
    height: "inherit",
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props)
  };
};

var baseStyle$9 = function baseStyle(props) {
  return {
    container: baseStyleContainer$1(props),
    track: baseStyleTrack$1(props),
    thumb: baseStyleThumb$1(props),
    filledTrack: baseStyleFilledTrack(props)
  };
};

var sizeLg = function sizeLg(props) {
  return {
    thumb: {
      w: "16px",
      h: "16px"
    },
    track: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.orient)({
      orientation: props.orientation,
      horizontal: {
        h: "4px"
      },
      vertical: {
        w: "4px"
      }
    })
  };
};

var sizeMd = function sizeMd(props) {
  return {
    thumb: {
      w: "14px",
      h: "14px"
    },
    track: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.orient)({
      orientation: props.orientation,
      horizontal: {
        h: "4px"
      },
      vertical: {
        w: "4px"
      }
    })
  };
};

var sizeSm = function sizeSm(props) {
  return {
    thumb: {
      w: "10px",
      h: "10px"
    },
    track: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.orient)({
      orientation: props.orientation,
      horizontal: {
        h: "2px"
      },
      vertical: {
        w: "2px"
      }
    })
  };
};

var sizes$7 = {
  lg: sizeLg,
  md: sizeMd,
  sm: sizeSm
};
var defaultProps$7 = {
  size: "md",
  colorScheme: "blue"
};
var Slider = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.sliderAnatomy.keys,
  sizes: sizes$7,
  baseStyle: baseStyle$9,
  defaultProps: defaultProps$7
};

var _xs, _sm, _md, _lg, _xl;
var $size = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("spinner-size");
var baseStyle$8 = {
  width: [$size.reference],
  height: [$size.reference]
};
var sizes$6 = {
  xs: (_xs = {}, _xs[$size.variable] = "0.75rem", _xs),
  sm: (_sm = {}, _sm[$size.variable] = "1rem", _sm),
  md: (_md = {}, _md[$size.variable] = "1.5rem", _md),
  lg: (_lg = {}, _lg[$size.variable] = "2rem", _lg),
  xl: (_xl = {}, _xl[$size.variable] = "3rem", _xl)
};
var defaultProps$6 = {
  size: "md"
};
var Spinner = {
  baseStyle: baseStyle$8,
  sizes: sizes$6,
  defaultProps: defaultProps$6
};

var baseStyleLabel$1 = {
  fontWeight: "medium"
};
var baseStyleHelpText = {
  opacity: 0.8,
  marginBottom: 2
};
var baseStyleNumber = {
  verticalAlign: "baseline",
  fontWeight: "semibold"
};
var baseStyleIcon$1 = {
  marginEnd: 1,
  w: "14px",
  h: "14px",
  verticalAlign: "middle"
};
var baseStyle$7 = {
  container: {},
  label: baseStyleLabel$1,
  helpText: baseStyleHelpText,
  number: baseStyleNumber,
  icon: baseStyleIcon$1
};
var sizes$5 = {
  md: {
    label: {
      fontSize: "sm"
    },
    helpText: {
      fontSize: "sm"
    },
    number: {
      fontSize: "2xl"
    }
  }
};
var defaultProps$5 = {
  size: "md"
};
var Stat = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.statAnatomy.keys,
  baseStyle: baseStyle$7,
  sizes: sizes$5,
  defaultProps: defaultProps$5
};

var _container2, _container3, _container4;
var $width = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("switch-track-width");
var $height = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("switch-track-height");
var $diff = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("switch-track-diff");
var diffValue = _chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.calc.subtract($width, $height);
var $translateX = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("switch-thumb-x");

var baseStyleTrack = function baseStyleTrack(props) {
  var c = props.colorScheme;
  return {
    borderRadius: "full",
    p: "2px",
    width: [$width.reference],
    height: [$height.reference],
    transitionProperty: "common",
    transitionDuration: "fast",
    bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.300", "whiteAlpha.400")(props),
    _focus: {
      boxShadow: "outline"
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    },
    _checked: {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".500", c + ".200")(props)
    }
  };
};

var baseStyleThumb = {
  bg: "white",
  transitionProperty: "transform",
  transitionDuration: "normal",
  borderRadius: "inherit",
  width: [$height.reference],
  height: [$height.reference],
  _checked: {
    transform: "translateX(" + $translateX.reference + ")"
  }
};

var baseStyle$6 = function baseStyle(props) {
  var _rtl, _container;

  return {
    container: (_container = {}, _container[$diff.variable] = diffValue, _container[$translateX.variable] = $diff.reference, _container._rtl = (_rtl = {}, _rtl[$translateX.variable] = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.calc)($diff).negate().toString(), _rtl), _container),
    track: baseStyleTrack(props),
    thumb: baseStyleThumb
  };
};

var sizes$4 = {
  sm: {
    container: (_container2 = {}, _container2[$width.variable] = "1.375rem", _container2[$height.variable] = "0.75rem", _container2)
  },
  md: {
    container: (_container3 = {}, _container3[$width.variable] = "1.875rem", _container3[$height.variable] = "1rem", _container3)
  },
  lg: {
    container: (_container4 = {}, _container4[$width.variable] = "2.875rem", _container4[$height.variable] = "1.5rem", _container4)
  }
};
var defaultProps$4 = {
  size: "md",
  colorScheme: "blue"
};
var Switch = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.switchAnatomy.keys,
  baseStyle: baseStyle$6,
  sizes: sizes$4,
  defaultProps: defaultProps$4
};

var baseStyle$5 = {
  table: {
    fontVariantNumeric: "lining-nums tabular-nums",
    borderCollapse: "collapse",
    width: "full"
  },
  th: {
    fontFamily: "heading",
    fontWeight: "bold",
    textTransform: "uppercase",
    letterSpacing: "wider",
    textAlign: "start"
  },
  td: {
    textAlign: "start"
  },
  caption: {
    mt: 4,
    fontFamily: "heading",
    textAlign: "center",
    fontWeight: "medium"
  }
};
var numericStyles = {
  "&[data-is-numeric=true]": {
    textAlign: "end"
  }
};

var variantSimple = function variantSimple(props) {
  var c = props.colorScheme;
  return {
    th: _extends({
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.600", "gray.400")(props),
      borderBottom: "1px",
      borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".100", c + ".700")(props)
    }, numericStyles),
    td: _extends({
      borderBottom: "1px",
      borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".100", c + ".700")(props)
    }, numericStyles),
    caption: {
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.600", "gray.100")(props)
    },
    tfoot: {
      tr: {
        "&:last-of-type": {
          th: {
            borderBottomWidth: 0
          }
        }
      }
    }
  };
};

var variantStripe = function variantStripe(props) {
  var c = props.colorScheme;
  return {
    th: _extends({
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.600", "gray.400")(props),
      borderBottom: "1px",
      borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".100", c + ".700")(props)
    }, numericStyles),
    td: _extends({
      borderBottom: "1px",
      borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".100", c + ".700")(props)
    }, numericStyles),
    caption: {
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.600", "gray.100")(props)
    },
    tbody: {
      tr: {
        "&:nth-of-type(odd)": {
          "th, td": {
            borderBottomWidth: "1px",
            borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".100", c + ".700")(props)
          },
          td: {
            background: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".100", c + ".700")(props)
          }
        }
      }
    },
    tfoot: {
      tr: {
        "&:last-of-type": {
          th: {
            borderBottomWidth: 0
          }
        }
      }
    }
  };
};

var variants$3 = {
  simple: variantSimple,
  striped: variantStripe,
  unstyled: {}
};
var sizes$3 = {
  sm: {
    th: {
      px: "4",
      py: "1",
      lineHeight: "4",
      fontSize: "xs"
    },
    td: {
      px: "4",
      py: "2",
      fontSize: "sm",
      lineHeight: "4"
    },
    caption: {
      px: "4",
      py: "2",
      fontSize: "xs"
    }
  },
  md: {
    th: {
      px: "6",
      py: "3",
      lineHeight: "4",
      fontSize: "xs"
    },
    td: {
      px: "6",
      py: "4",
      lineHeight: "5"
    },
    caption: {
      px: "6",
      py: "2",
      fontSize: "sm"
    }
  },
  lg: {
    th: {
      px: "8",
      py: "4",
      lineHeight: "5",
      fontSize: "sm"
    },
    td: {
      px: "8",
      py: "5",
      lineHeight: "6"
    },
    caption: {
      px: "6",
      py: "2",
      fontSize: "md"
    }
  }
};
var defaultProps$3 = {
  variant: "simple",
  size: "md",
  colorScheme: "gray"
};
var Table = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.tableAnatomy.keys,
  baseStyle: baseStyle$5,
  variants: variants$3,
  sizes: sizes$3,
  defaultProps: defaultProps$3
};

var baseStyleRoot = function baseStyleRoot(props) {
  var orientation = props.orientation;
  return {
    display: orientation === "vertical" ? "flex" : "block"
  };
};

var baseStyleTab = function baseStyleTab(props) {
  var isFitted = props.isFitted;
  return {
    flex: isFitted ? 1 : undefined,
    transitionProperty: "common",
    transitionDuration: "normal",
    _focus: {
      zIndex: 1,
      boxShadow: "outline"
    }
  };
};

var baseStyleTablist = function baseStyleTablist(props) {
  var _props$align = props.align,
      align = _props$align === void 0 ? "start" : _props$align,
      orientation = props.orientation;
  var alignments = {
    end: "flex-end",
    center: "center",
    start: "flex-start"
  };
  return {
    justifyContent: alignments[align],
    flexDirection: orientation === "vertical" ? "column" : "row"
  };
};

var baseStyleTabpanel = {
  p: 4
};

var baseStyle$4 = function baseStyle(props) {
  return {
    root: baseStyleRoot(props),
    tab: baseStyleTab(props),
    tablist: baseStyleTablist(props),
    tabpanel: baseStyleTabpanel
  };
};

var sizes$2 = {
  sm: {
    tab: {
      py: 1,
      px: 4,
      fontSize: "sm"
    }
  },
  md: {
    tab: {
      fontSize: "md",
      py: 2,
      px: 4
    }
  },
  lg: {
    tab: {
      fontSize: "lg",
      py: 3,
      px: 4
    }
  }
};

var variantLine = function variantLine(props) {
  var _tablist, _tab;

  var c = props.colorScheme,
      orientation = props.orientation;
  var isVertical = orientation === "vertical";
  var borderProp = orientation === "vertical" ? "borderStart" : "borderBottom";
  var marginProp = isVertical ? "marginStart" : "marginBottom";
  return {
    tablist: (_tablist = {}, _tablist[borderProp] = "2px solid", _tablist.borderColor = "inherit", _tablist),
    tab: (_tab = {}, _tab[borderProp] = "2px solid", _tab.borderColor = "transparent", _tab[marginProp] = "-2px", _tab._selected = {
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".600", c + ".300")(props),
      borderColor: "currentColor"
    }, _tab._active = {
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.300")(props)
    }, _tab._disabled = {
      opacity: 0.4,
      cursor: "not-allowed"
    }, _tab)
  };
};

var variantEnclosed = function variantEnclosed(props) {
  var c = props.colorScheme;
  return {
    tab: {
      borderTopRadius: "md",
      border: "1px solid",
      borderColor: "transparent",
      mb: "-1px",
      _selected: {
        color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".600", c + ".300")(props),
        borderColor: "inherit",
        borderBottomColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.800")(props)
      }
    },
    tablist: {
      mb: "-1px",
      borderBottom: "1px solid",
      borderColor: "inherit"
    }
  };
};

var variantEnclosedColored = function variantEnclosedColored(props) {
  var c = props.colorScheme;
  return {
    tab: {
      border: "1px solid",
      borderColor: "inherit",
      bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.50", "whiteAlpha.50")(props),
      mb: "-1px",
      _notLast: {
        marginEnd: "-1px"
      },
      _selected: {
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("#fff", "gray.800")(props),
        color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".600", c + ".300")(props),
        borderColor: "inherit",
        borderTopColor: "currentColor",
        borderBottomColor: "transparent"
      }
    },
    tablist: {
      mb: "-1px",
      borderBottom: "1px solid",
      borderColor: "inherit"
    }
  };
};

var variantSoftRounded = function variantSoftRounded(props) {
  var c = props.colorScheme,
      theme = props.theme;
  return {
    tab: {
      borderRadius: "full",
      fontWeight: "semibold",
      color: "gray.600",
      _selected: {
        color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, c + ".700"),
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.getColor)(theme, c + ".100")
      }
    }
  };
};

var variantSolidRounded = function variantSolidRounded(props) {
  var c = props.colorScheme;
  return {
    tab: {
      borderRadius: "full",
      fontWeight: "semibold",
      color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.600", "inherit")(props),
      _selected: {
        color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("#fff", "gray.800")(props),
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)(c + ".600", c + ".300")(props)
      }
    }
  };
};

var variantUnstyled = {};
var variants$2 = {
  line: variantLine,
  enclosed: variantEnclosed,
  "enclosed-colored": variantEnclosedColored,
  "soft-rounded": variantSoftRounded,
  "solid-rounded": variantSolidRounded,
  unstyled: variantUnstyled
};
var defaultProps$2 = {
  size: "md",
  variant: "line",
  colorScheme: "blue"
};
var Tabs = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.tabsAnatomy.keys,
  baseStyle: baseStyle$4,
  sizes: sizes$2,
  variants: variants$2,
  defaultProps: defaultProps$2
};

var baseStyleContainer = {
  fontWeight: "medium",
  lineHeight: 1.2,
  outline: 0,
  _focus: {
    boxShadow: "outline"
  }
};
var baseStyleLabel = {
  lineHeight: 1.2,
  overflow: "visible"
};
var baseStyleCloseButton = {
  fontSize: "18px",
  w: "1.25rem",
  h: "1.25rem",
  transitionProperty: "common",
  transitionDuration: "normal",
  borderRadius: "full",
  marginStart: "0.375rem",
  marginEnd: "-1",
  opacity: 0.5,
  _disabled: {
    opacity: 0.4
  },
  _focus: {
    boxShadow: "outline",
    bg: "rgba(0, 0, 0, 0.14)"
  },
  _hover: {
    opacity: 0.8
  },
  _active: {
    opacity: 1
  }
};
var baseStyle$3 = {
  container: baseStyleContainer,
  label: baseStyleLabel,
  closeButton: baseStyleCloseButton
};
var sizes$1 = {
  sm: {
    container: {
      minH: "1.25rem",
      minW: "1.25rem",
      fontSize: "xs",
      px: 2,
      borderRadius: "md"
    },
    closeButton: {
      marginEnd: "-2px",
      marginStart: "0.35rem"
    }
  },
  md: {
    container: {
      minH: "1.5rem",
      minW: "1.5rem",
      fontSize: "sm",
      borderRadius: "md",
      px: 2
    }
  },
  lg: {
    container: {
      minH: 8,
      minW: 8,
      fontSize: "md",
      borderRadius: "md",
      px: 3
    }
  }
};
var variants$1 = {
  subtle: function subtle(props) {
    return {
      container: Badge.variants.subtle(props)
    };
  },
  solid: function solid(props) {
    return {
      container: Badge.variants.solid(props)
    };
  },
  outline: function outline(props) {
    return {
      container: Badge.variants.outline(props)
    };
  }
};
var defaultProps$1 = {
  size: "md",
  variant: "subtle",
  colorScheme: "gray"
};
var Tag = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.tagAnatomy.keys,
  variants: variants$1,
  baseStyle: baseStyle$3,
  sizes: sizes$1,
  defaultProps: defaultProps$1
};

var _Input$variants$unsty, _Input$sizes$xs$field, _Input$sizes$sm$field, _Input$sizes$md$field, _Input$sizes$lg$field;

var baseStyle$2 = _extends({}, Input.baseStyle.field, {
  paddingY: "8px",
  minHeight: "80px",
  lineHeight: "short",
  verticalAlign: "top"
});

var variants = {
  outline: function outline(props) {
    var _Input$variants$outli;

    return (_Input$variants$outli = Input.variants.outline(props).field) != null ? _Input$variants$outli : {};
  },
  flushed: function flushed(props) {
    var _Input$variants$flush;

    return (_Input$variants$flush = Input.variants.flushed(props).field) != null ? _Input$variants$flush : {};
  },
  filled: function filled(props) {
    var _Input$variants$fille;

    return (_Input$variants$fille = Input.variants.filled(props).field) != null ? _Input$variants$fille : {};
  },
  unstyled: (_Input$variants$unsty = Input.variants.unstyled.field) != null ? _Input$variants$unsty : {}
};
var sizes = {
  xs: (_Input$sizes$xs$field = Input.sizes.xs.field) != null ? _Input$sizes$xs$field : {},
  sm: (_Input$sizes$sm$field = Input.sizes.sm.field) != null ? _Input$sizes$sm$field : {},
  md: (_Input$sizes$md$field = Input.sizes.md.field) != null ? _Input$sizes$md$field : {},
  lg: (_Input$sizes$lg$field = Input.sizes.lg.field) != null ? _Input$sizes$lg$field : {}
};
var defaultProps = {
  size: "md",
  variant: "outline"
};
var Textarea = {
  baseStyle: baseStyle$2,
  sizes: sizes,
  variants: variants,
  defaultProps: defaultProps
};

var $bg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("tooltip-bg");
var $arrowBg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.cssVar)("popper-arrow-bg");

var baseStyle$1 = function baseStyle(props) {
  var _ref;

  var bg = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.700", "gray.300")(props);
  return _ref = {}, _ref[$bg.variable] = "colors." + bg, _ref.px = "8px", _ref.py = "2px", _ref.bg = [$bg.reference], _ref[$arrowBg.variable] = [$bg.reference], _ref.color = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("whiteAlpha.900", "gray.900")(props), _ref.borderRadius = "sm", _ref.fontWeight = "medium", _ref.fontSize = "sm", _ref.boxShadow = "md", _ref.maxW = "320px", _ref.zIndex = "tooltip", _ref;
};

var Tooltip = {
  baseStyle: baseStyle$1
};

var baseStyleText = function baseStyleText(props) {
  return {
    color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("red.500", "red.300")(props),
    mt: 2,
    fontSize: "sm"
  };
};

var baseStyleIcon = function baseStyleIcon(props) {
  return {
    marginEnd: "0.5em",
    color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("red.500", "red.300")(props)
  };
};

var baseStyle = function baseStyle(props) {
  return {
    text: baseStyleText(props),
    icon: baseStyleIcon(props)
  };
};

var FormError = {
  parts: _chakra_ui_anatomy__WEBPACK_IMPORTED_MODULE_0__.formErrorAnatomy.keys,
  baseStyle: baseStyle
};

var components = {
  Accordion: Accordion,
  Alert: Alert,
  Avatar: Avatar,
  Badge: Badge,
  Breadcrumb: Breadcrumb,
  Button: Button,
  Checkbox: Checkbox,
  CloseButton: CloseButton,
  Code: Code,
  Container: Container,
  Divider: Divider,
  Drawer: Drawer,
  Editable: Editable,
  Form: Form,
  FormLabel: FormLabel,
  Heading: Heading,
  Input: Input,
  Kbd: Kbd,
  Link: Link,
  List: List,
  Menu: Menu,
  Modal: Modal,
  NumberInput: NumberInput,
  PinInput: PinInput,
  Popover: Popover,
  Progress: Progress,
  Radio: Radio,
  Select: Select,
  Skeleton: Skeleton,
  SkipLink: SkipLink,
  Slider: Slider,
  Spinner: Spinner,
  Stat: Stat,
  Switch: Switch,
  Table: Table,
  Tabs: Tabs,
  Tag: Tag,
  Textarea: Textarea,
  Tooltip: Tooltip,
  FormError: FormError
};

var borders = {
  none: 0,
  "1px": "1px solid",
  "2px": "2px solid",
  "4px": "4px solid",
  "8px": "8px solid"
};
var borders$1 = borders;

/**
 * Breakpoints for responsive design
 */

var breakpoints = (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.createBreakpoints)({
  sm: "30em",
  md: "48em",
  lg: "62em",
  xl: "80em",
  "2xl": "96em"
});
var breakpoints$1 = breakpoints;

/**
 * @deprecated
 * You can derive the Colors type from the DefaultChakraTheme:
 *
 * type Colors = DefaultChakraTheme["colors"]
 */
var colors = {
  transparent: "transparent",
  current: "currentColor",
  black: "#000000",
  white: "#FFFFFF",
  whiteAlpha: {
    50: "rgba(255, 255, 255, 0.04)",
    100: "rgba(255, 255, 255, 0.06)",
    200: "rgba(255, 255, 255, 0.08)",
    300: "rgba(255, 255, 255, 0.16)",
    400: "rgba(255, 255, 255, 0.24)",
    500: "rgba(255, 255, 255, 0.36)",
    600: "rgba(255, 255, 255, 0.48)",
    700: "rgba(255, 255, 255, 0.64)",
    800: "rgba(255, 255, 255, 0.80)",
    900: "rgba(255, 255, 255, 0.92)"
  },
  blackAlpha: {
    50: "rgba(0, 0, 0, 0.04)",
    100: "rgba(0, 0, 0, 0.06)",
    200: "rgba(0, 0, 0, 0.08)",
    300: "rgba(0, 0, 0, 0.16)",
    400: "rgba(0, 0, 0, 0.24)",
    500: "rgba(0, 0, 0, 0.36)",
    600: "rgba(0, 0, 0, 0.48)",
    700: "rgba(0, 0, 0, 0.64)",
    800: "rgba(0, 0, 0, 0.80)",
    900: "rgba(0, 0, 0, 0.92)"
  },
  gray: {
    50: "#F7FAFC",
    100: "#EDF2F7",
    200: "#E2E8F0",
    300: "#CBD5E0",
    400: "#A0AEC0",
    500: "#718096",
    600: "#4A5568",
    700: "#2D3748",
    800: "#1A202C",
    900: "#171923"
  },
  red: {
    50: "#FFF5F5",
    100: "#FED7D7",
    200: "#FEB2B2",
    300: "#FC8181",
    400: "#F56565",
    500: "#E53E3E",
    600: "#C53030",
    700: "#9B2C2C",
    800: "#822727",
    900: "#63171B"
  },
  orange: {
    50: "#FFFAF0",
    100: "#FEEBC8",
    200: "#FBD38D",
    300: "#F6AD55",
    400: "#ED8936",
    500: "#DD6B20",
    600: "#C05621",
    700: "#9C4221",
    800: "#7B341E",
    900: "#652B19"
  },
  yellow: {
    50: "#FFFFF0",
    100: "#FEFCBF",
    200: "#FAF089",
    300: "#F6E05E",
    400: "#ECC94B",
    500: "#D69E2E",
    600: "#B7791F",
    700: "#975A16",
    800: "#744210",
    900: "#5F370E"
  },
  green: {
    50: "#F0FFF4",
    100: "#C6F6D5",
    200: "#9AE6B4",
    300: "#68D391",
    400: "#48BB78",
    500: "#38A169",
    600: "#2F855A",
    700: "#276749",
    800: "#22543D",
    900: "#1C4532"
  },
  teal: {
    50: "#E6FFFA",
    100: "#B2F5EA",
    200: "#81E6D9",
    300: "#4FD1C5",
    400: "#38B2AC",
    500: "#319795",
    600: "#2C7A7B",
    700: "#285E61",
    800: "#234E52",
    900: "#1D4044"
  },
  blue: {
    50: "#ebf8ff",
    100: "#bee3f8",
    200: "#90cdf4",
    300: "#63b3ed",
    400: "#4299e1",
    500: "#3182ce",
    600: "#2b6cb0",
    700: "#2c5282",
    800: "#2a4365",
    900: "#1A365D"
  },
  cyan: {
    50: "#EDFDFD",
    100: "#C4F1F9",
    200: "#9DECF9",
    300: "#76E4F7",
    400: "#0BC5EA",
    500: "#00B5D8",
    600: "#00A3C4",
    700: "#0987A0",
    800: "#086F83",
    900: "#065666"
  },
  purple: {
    50: "#FAF5FF",
    100: "#E9D8FD",
    200: "#D6BCFA",
    300: "#B794F4",
    400: "#9F7AEA",
    500: "#805AD5",
    600: "#6B46C1",
    700: "#553C9A",
    800: "#44337A",
    900: "#322659"
  },
  pink: {
    50: "#FFF5F7",
    100: "#FED7E2",
    200: "#FBB6CE",
    300: "#F687B3",
    400: "#ED64A6",
    500: "#D53F8C",
    600: "#B83280",
    700: "#97266D",
    800: "#702459",
    900: "#521B41"
  },
  linkedin: {
    50: "#E8F4F9",
    100: "#CFEDFB",
    200: "#9BDAF3",
    300: "#68C7EC",
    400: "#34B3E4",
    500: "#00A0DC",
    600: "#008CC9",
    700: "#0077B5",
    800: "#005E93",
    900: "#004471"
  },
  facebook: {
    50: "#E8F4F9",
    100: "#D9DEE9",
    200: "#B7C2DA",
    300: "#6482C0",
    400: "#4267B2",
    500: "#385898",
    600: "#314E89",
    700: "#29487D",
    800: "#223B67",
    900: "#1E355B"
  },
  messenger: {
    50: "#D0E6FF",
    100: "#B9DAFF",
    200: "#A2CDFF",
    300: "#7AB8FF",
    400: "#2E90FF",
    500: "#0078FF",
    600: "#0063D1",
    700: "#0052AC",
    800: "#003C7E",
    900: "#002C5C"
  },
  whatsapp: {
    50: "#dffeec",
    100: "#b9f5d0",
    200: "#90edb3",
    300: "#65e495",
    400: "#3cdd78",
    500: "#22c35e",
    600: "#179848",
    700: "#0c6c33",
    800: "#01421c",
    900: "#001803"
  },
  twitter: {
    50: "#E5F4FD",
    100: "#C8E9FB",
    200: "#A8DCFA",
    300: "#83CDF7",
    400: "#57BBF5",
    500: "#1DA1F2",
    600: "#1A94DA",
    700: "#1681BF",
    800: "#136B9E",
    900: "#0D4D71"
  },
  telegram: {
    50: "#E3F2F9",
    100: "#C5E4F3",
    200: "#A2D4EC",
    300: "#7AC1E4",
    400: "#47A9DA",
    500: "#0088CC",
    600: "#007AB8",
    700: "#006BA1",
    800: "#005885",
    900: "#003F5E"
  }
};
var colors$1 = colors;

var radii = {
  none: "0",
  sm: "0.125rem",
  base: "0.25rem",
  md: "0.375rem",
  lg: "0.5rem",
  xl: "0.75rem",
  "2xl": "1rem",
  "3xl": "1.5rem",
  full: "9999px"
};
/**
 * @deprecated
 * You can derive the Radii type from the DefaultChakraTheme
 *
 * type Radii = DefaultChakraTheme['radii']
 */

var radii$1 = radii;

var shadows = {
  xs: "0 0 0 1px rgba(0, 0, 0, 0.05)",
  sm: "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
  base: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",
  md: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
  lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
  xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
  "2xl": "0 25px 50px -12px rgba(0, 0, 0, 0.25)",
  outline: "0 0 0 3px rgba(66, 153, 225, 0.6)",
  inner: "inset 0 2px 4px 0 rgba(0,0,0,0.06)",
  none: "none",
  "dark-lg": "rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px"
};
/**
 * @deprecated
 * You can derive the Shadows type from the DefaultChakraTheme
 *
 * type Shadows = DefaultChakraTheme['shadows']
 */

var shadows$1 = shadows;

var transitionProperty = {
  common: "background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",
  colors: "background-color, border-color, color, fill, stroke",
  dimensions: "width, height",
  position: "left, right, top, bottom",
  background: "background-color, background-image, background-position"
};
var transitionTimingFunction = {
  "ease-in": "cubic-bezier(0.4, 0, 1, 1)",
  "ease-out": "cubic-bezier(0, 0, 0.2, 1)",
  "ease-in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
};
var transitionDuration = {
  "ultra-fast": "50ms",
  faster: "100ms",
  fast: "150ms",
  normal: "200ms",
  slow: "300ms",
  slower: "400ms",
  "ultra-slow": "500ms"
};
var transition = {
  property: transitionProperty,
  easing: transitionTimingFunction,
  duration: transitionDuration
};
var transition$1 = transition;

var zIndices = {
  hide: -1,
  auto: "auto",
  base: 0,
  docked: 10,
  dropdown: 1000,
  sticky: 1100,
  banner: 1200,
  overlay: 1300,
  modal: 1400,
  popover: 1500,
  skipLink: 1600,
  toast: 1700,
  tooltip: 1800
};
/**
 * @deprecated
 * You can derive the ZIndices type from the DefaultChakraTheme
 *
 * type ZIndices = DefaultChakraTheme['zIndices']
 */

var zIndices$1 = zIndices;

var blur = {
  none: 0,
  sm: "4px",
  base: "8px",
  md: "12px",
  lg: "16px",
  xl: "24px",
  "2xl": "40px",
  "3xl": "64px"
};
var blur$1 = blur;

var foundations = _extends({
  breakpoints: breakpoints$1,
  zIndices: zIndices$1,
  radii: radii$1,
  blur: blur$1,
  colors: colors$1
}, typography$1, {
  sizes: sizes$m,
  shadows: shadows$1,
  space: spacing,
  borders: borders$1,
  transition: transition$1
});

var foundations$1 = foundations;

var styles = {
  global: function global(props) {
    return {
      body: {
        fontFamily: "body",
        color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.800", "whiteAlpha.900")(props),
        bg: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("white", "gray.800")(props),
        transitionProperty: "background-color",
        transitionDuration: "normal",
        lineHeight: "base"
      },
      "*::placeholder": {
        color: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.400", "whiteAlpha.400")(props)
      },
      "*, *::before, &::after": {
        borderColor: (0,_chakra_ui_theme_tools__WEBPACK_IMPORTED_MODULE_1__.mode)("gray.200", "whiteAlpha.300")(props),
        wordWrap: "break-word"
      }
    };
  }
};
var styles$1 = styles;

var requiredChakraThemeKeys = ["borders", "breakpoints", "colors", "components", "config", "direction", "fonts", "fontSizes", "fontWeights", "letterSpacings", "lineHeights", "radii", "shadows", "sizes", "space", "styles", "transition", "zIndices"];
function isChakraTheme(unit) {
  if (!(0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_4__.isObject)(unit)) {
    return false;
  }

  return requiredChakraThemeKeys.every(function (propertyName) {
    return Object.prototype.hasOwnProperty.call(unit, propertyName);
  });
}

var direction = "ltr";
var config = {
  useSystemColorMode: false,
  initialColorMode: "light",
  cssVarPrefix: "chakra"
};
var theme = _extends({
  direction: direction
}, foundations$1, {
  components: components,
  styles: styles$1,
  config: config
});




/***/ }),

/***/ "./node_modules/@chakra-ui/toast/dist/chakra-ui-toast.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@chakra-ui/toast/dist/chakra-ui-toast.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createStandaloneToast": () => (/* binding */ createStandaloneToast),
/* harmony export */   "defaultStandaloneParam": () => (/* binding */ defaultStandaloneParam),
/* harmony export */   "toast": () => (/* binding */ toast),
/* harmony export */   "useToast": () => (/* binding */ useToast)
/* harmony export */ });
/* harmony import */ var _chakra_ui_alert__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @chakra-ui/alert */ "./node_modules/@chakra-ui/alert/dist/chakra-ui-alert.esm.js");
/* harmony import */ var _chakra_ui_close_button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @chakra-ui/close-button */ "./node_modules/@chakra-ui/close-button/dist/chakra-ui-close-button.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js");
/* harmony import */ var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @chakra-ui/system */ "./node_modules/@chakra-ui/color-mode/dist/chakra-ui-color-mode.esm.js");
/* harmony import */ var _chakra_ui_theme__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @chakra-ui/theme */ "./node_modules/@chakra-ui/theme/dist/chakra-ui-theme.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs");
/* harmony import */ var _chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/hooks */ "./node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js");
/* harmony import */ var _reach_alert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @reach/alert */ "./node_modules/@reach/alert/dist/reach-alert.esm.js");











function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

/**
 * Given an array of toasts for a specific position.
 * It returns the toast that matches the `id` passed
 */
/**
 * Given the toast manager state, finds the toast that matches
 * the id and return its position and index
 */

function findToast(toasts, id) {
  var position = getToastPosition(toasts, id);
  var index = position ? toasts[position].findIndex(function (toast) {
    return toast.id === id;
  }) : -1;
  return {
    position: position,
    index: index
  };
}
/**
 * Given the toast manager state, finds the position of the toast that
 * matches the `id`
 */

var getToastPosition = function getToastPosition(toasts, id) {
  var _Object$values$flat$f;

  return (_Object$values$flat$f = Object.values(toasts).flat().find(function (toast) {
    return toast.id === id;
  })) == null ? void 0 : _Object$values$flat$f.position;
};
/**
 * Get's the styles to be applied to a toast's container
 * based on its position in the manager
 */

function getToastStyle(position) {
  var isRighty = position.includes("right");
  var isLefty = position.includes("left");
  var alignItems = "center";
  if (isRighty) alignItems = "flex-end";
  if (isLefty) alignItems = "flex-start";
  return {
    display: "flex",
    flexDirection: "column",
    alignItems: alignItems
  };
}

/**
 * @todo After Gerrit refactors this implementation,
 * allow users to change the toast transition direction from
 * a `ToastProvider` component.
 *
 * Here's an API example:
 *
 * ```jsx
 * <ToastProvider
 *   motion={customVariants}
 *   component={CustomToastComponent}
 *   autoCloseTimeout={3000}
 *   toastSpacing={32} // this will control the `margin` value applied
 * >
 * </ToastProvider>
 * ```
 */

var toastMotionVariants = {
  initial: function initial(props) {
    var _ref;

    var position = props.position;
    var dir = ["top", "bottom"].includes(position) ? "y" : "x";
    var factor = ["top-right", "bottom-right"].includes(position) ? 1 : -1;
    if (position === "bottom") factor = 1;
    return _ref = {
      opacity: 0
    }, _ref[dir] = factor * 24, _ref;
  },
  animate: {
    opacity: 1,
    y: 0,
    x: 0,
    scale: 1,
    transition: {
      duration: 0.4,
      ease: [0.4, 0, 0.2, 1]
    }
  },
  exit: {
    opacity: 0,
    scale: 0.85,
    transition: {
      duration: 0.2,
      ease: [0.4, 0, 1, 1]
    }
  }
};
var Toast$1 = function Toast(props) {
  var id = props.id,
      message = props.message,
      onCloseComplete = props.onCloseComplete,
      onRequestRemove = props.onRequestRemove,
      _props$requestClose = props.requestClose,
      requestClose = _props$requestClose === void 0 ? false : _props$requestClose,
      _props$position = props.position,
      position = _props$position === void 0 ? "bottom" : _props$position,
      _props$duration = props.duration,
      duration = _props$duration === void 0 ? 5000 : _props$duration,
      _props$containerStyle = props.containerStyle,
      containerStyle = _props$containerStyle === void 0 ? {} : _props$containerStyle;

  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(duration),
      delay = _React$useState[0],
      setDelay = _React$useState[1];

  var isPresent = (0,framer_motion__WEBPACK_IMPORTED_MODULE_3__.useIsPresent)();
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useUpdateEffect)(function () {
    if (!isPresent) {
      onCloseComplete == null ? void 0 : onCloseComplete();
    }
  }, [isPresent]);
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useUpdateEffect)(function () {
    setDelay(duration);
  }, [duration]);

  var onMouseEnter = function onMouseEnter() {
    return setDelay(null);
  };

  var onMouseLeave = function onMouseLeave() {
    return setDelay(duration);
  };

  var close = function close() {
    if (isPresent) onRequestRemove();
  };

  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    if (isPresent && requestClose) {
      onRequestRemove();
    }
  }, [isPresent, requestClose, onRequestRemove]);
  (0,_chakra_ui_hooks__WEBPACK_IMPORTED_MODULE_4__.useTimeout)(close, delay);
  var style = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return getToastStyle(position);
  }, [position]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_5__.motion.li, {
    layout: true,
    className: "chakra-toast",
    variants: toastMotionVariants,
    initial: "initial",
    animate: "animate",
    exit: "exit",
    onHoverStart: onMouseEnter,
    onHoverEnd: onMouseLeave,
    custom: {
      position: position
    },
    style: style
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_reach_alert__WEBPACK_IMPORTED_MODULE_2__["default"], {
    className: "chakra-toast__inner",
    style: _extends({
      pointerEvents: "auto",
      maxWidth: 560,
      minWidth: 300,
      margin: "0.5rem"
    }, containerStyle)
  }, (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_6__.isFunction)(message) ? message({
    id: id,
    onClose: close
  }) : message));
};

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_6__.__DEV__) {
  Toast$1.displayName = "Toast";
}

/**
 * Manages the creation, and removal of toasts
 * across all corners ("top", "bottom", etc.)
 */
var ToastManager = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(ToastManager, _React$Component);

  /**
   * Static id counter to create unique ids
   * for each toast
   */

  /**
   * State to track all the toast across all positions
   */
  function ToastManager(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.state = {
      top: [],
      "top-left": [],
      "top-right": [],
      "bottom-left": [],
      bottom: [],
      "bottom-right": []
    };

    _this.notify = function (message, options) {
      var toast = _this.createToast(message, options);

      var position = toast.position,
          id = toast.id;

      _this.setState(function (prevToasts) {
        var _extends2;

        var isTop = position.includes("top");
        /**
         * - If the toast is positioned at the top edges, the
         * recent toast stacks on top of the other toasts.
         *
         * - If the toast is positioned at the bottom edges, the recent
         * toast stacks below the other toasts.
         */

        var toasts = isTop ? [toast].concat(prevToasts[position]) : [].concat(prevToasts[position], [toast]);
        return _extends({}, prevToasts, (_extends2 = {}, _extends2[position] = toasts, _extends2));
      });

      return id;
    };

    _this.updateToast = function (id, options) {
      _this.setState(function (prevState) {
        var nextState = _extends({}, prevState);

        var _findToast = findToast(nextState, id),
            position = _findToast.position,
            index = _findToast.index;

        if (position && index !== -1) {
          nextState[position][index] = _extends({}, nextState[position][index], options);
        }

        return nextState;
      });
    };

    _this.closeAll = function (_temp) {
      var _ref = _temp === void 0 ? {} : _temp,
          positions = _ref.positions;

      // only one setState here for perf reasons
      // instead of spamming this.closeToast
      _this.setState(function (prev) {
        var allPositions = ["bottom", "bottom-right", "bottom-left", "top", "top-left", "top-right"];
        var positionsToClose = positions != null ? positions : allPositions;
        return positionsToClose.reduce(function (acc, position) {
          acc[position] = prev[position].map(function (toast) {
            return _extends({}, toast, {
              requestClose: true
            });
          });
          return acc;
        }, {});
      });
    };

    _this.createToast = function (message, options) {
      var _options$id, _options$position;

      ToastManager.counter += 1;
      var id = (_options$id = options.id) != null ? _options$id : ToastManager.counter;
      var position = (_options$position = options.position) != null ? _options$position : "top";
      return {
        id: id,
        message: message,
        position: position,
        duration: options.duration,
        onCloseComplete: options.onCloseComplete,
        onRequestRemove: function onRequestRemove() {
          return _this.removeToast(String(id), position);
        },
        status: options.status,
        requestClose: false,
        containerStyle: options.containerStyle
      };
    };

    _this.closeToast = function (id) {
      _this.setState(function (prevState) {
        var _extends3;

        var position = getToastPosition(prevState, id);
        if (!position) return prevState;
        return _extends({}, prevState, (_extends3 = {}, _extends3[position] = prevState[position].map(function (toast) {
          // id may be string or number
          // eslint-disable-next-line eqeqeq
          if (toast.id == id) {
            return _extends({}, toast, {
              requestClose: true
            });
          }

          return toast;
        }), _extends3));
      });
    };

    _this.removeToast = function (id, position) {
      _this.setState(function (prevState) {
        var _extends4;

        return _extends({}, prevState, (_extends4 = {}, _extends4[position] = prevState[position].filter(function (toast) {
          return toast.id != id;
        }), _extends4));
      });
    };

    _this.isVisible = function (id) {
      var _findToast2 = findToast(_this.state, id),
          position = _findToast2.position;

      return Boolean(position);
    };

    _this.getStyle = function (position) {
      var isTopOrBottom = position === "top" || position === "bottom";
      var margin = isTopOrBottom ? "0 auto" : undefined;
      var top = position.includes("top") ? "env(safe-area-inset-top, 0px)" : undefined;
      var bottom = position.includes("bottom") ? "env(safe-area-inset-bottom, 0px)" : undefined;
      var right = !position.includes("left") ? "env(safe-area-inset-right, 0px)" : undefined;
      var left = !position.includes("right") ? "env(safe-area-inset-left, 0px)" : undefined;
      return {
        position: "fixed",
        zIndex: 5500,
        pointerEvents: "none",
        display: "flex",
        flexDirection: "column",
        margin: margin,
        top: top,
        bottom: bottom,
        right: right,
        left: left
      };
    };

    var methods = {
      notify: _this.notify,
      closeAll: _this.closeAll,
      close: _this.closeToast,
      update: _this.updateToast,
      isActive: _this.isVisible
    };
    props.notify(methods);
    return _this;
  }
  /**
   * Function to actually create a toast and add it
   * to state at the specified position
   */


  var _proto = ToastManager.prototype;

  _proto.render = function render() {
    var _this2 = this;

    return (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_6__.objectKeys)(this.state).map(function (position) {
      var toasts = _this2.state[position];
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul", {
        key: position,
        id: "chakra-toast-manager-" + position,
        style: _this2.getStyle(position)
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_7__.AnimatePresence, {
        initial: false
      }, toasts.map(function (toast) {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Toast$1, _extends({
          key: toast.id
        }, toast));
      })));
    });
  };

  return ToastManager;
}(react__WEBPACK_IMPORTED_MODULE_0__.Component);
ToastManager.counter = 0;

var portalId = "chakra-toast-portal";

var Toaster =
/**
 * Initialize the manager and mount it in the DOM
 * inside the portal node.
 *
 * @todo
 *
 * Update toast constructor to use `PortalManager`'s node or document.body.
 * Once done, we can remove the `zIndex` in `toast.manager.tsx`
 */
function Toaster() {
  var _this = this;

  this.createToast = void 0;
  this.removeAll = void 0;
  this.closeToast = void 0;
  this.updateToast = void 0;
  this.isToastActive = void 0;

  this.bindFunctions = function (methods) {
    _this.createToast = methods.notify;
    _this.removeAll = methods.closeAll;
    _this.closeToast = methods.close;
    _this.updateToast = methods.update;
    _this.isToastActive = methods.isActive;
  };

  this.notify = function (message, options) {
    if (options === void 0) {
      options = {};
    }

    return _this.createToast == null ? void 0 : _this.createToast(message, options);
  };

  this.close = function (id) {
    _this.closeToast == null ? void 0 : _this.closeToast(id);
  };

  this.closeAll = function (options) {
    _this.removeAll == null ? void 0 : _this.removeAll(options);
  };

  this.update = function (id, options) {
    if (options === void 0) {
      options = {};
    }

    _this.updateToast == null ? void 0 : _this.updateToast(id, options);
  };

  this.isActive = function (id) {
    return _this.isToastActive == null ? void 0 : _this.isToastActive(id);
  };

  if (!_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_6__.isBrowser) return;
  var portal;
  var existingPortal = document.getElementById(portalId);

  if (existingPortal) {
    portal = existingPortal;
  } else {
    var _document$body;

    var div = document.createElement("div");
    div.id = portalId;
    (_document$body = document.body) == null ? void 0 : _document$body.appendChild(div);
    portal = div;
  }

  (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.render)( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ToastManager, {
    notify: this.bindFunctions
  }), portal);
};

var toast = new Toaster();

function getToastPlacement(position, dir) {
  var _logical$dir;

  if (!position) return;
  var logicals = {
    "top-start": {
      ltr: "top-left",
      rtl: "top-right"
    },
    "top-end": {
      ltr: "top-right",
      rtl: "top-left"
    },
    "bottom-start": {
      ltr: "bottom-left",
      rtl: "bottom-right"
    },
    "bottom-end": {
      ltr: "bottom-right",
      rtl: "bottom-left"
    }
  };
  var logical = logicals[position];
  return (_logical$dir = logical == null ? void 0 : logical[dir]) != null ? _logical$dir : position;
}

var Toast = function Toast(props) {
  var status = props.status,
      variant = props.variant,
      id = props.id,
      title = props.title,
      isClosable = props.isClosable,
      onClose = props.onClose,
      description = props.description;
  var alertTitleId = typeof id !== "undefined" ? "toast-" + id + "-title" : undefined;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_alert__WEBPACK_IMPORTED_MODULE_8__.Alert, {
    status: status,
    variant: variant,
    id: id,
    alignItems: "start",
    borderRadius: "md",
    boxShadow: "lg",
    paddingEnd: 8,
    textAlign: "start",
    width: "auto",
    "aria-labelledby": alertTitleId
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_alert__WEBPACK_IMPORTED_MODULE_8__.AlertIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_9__.chakra.div, {
    flex: "1",
    maxWidth: "100%"
  }, title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_alert__WEBPACK_IMPORTED_MODULE_8__.AlertTitle, {
    id: alertTitleId
  }, title), description && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_alert__WEBPACK_IMPORTED_MODULE_8__.AlertDescription, {
    display: "block"
  }, description)), isClosable && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_close_button__WEBPACK_IMPORTED_MODULE_10__.CloseButton, {
    size: "sm",
    onClick: onClose,
    position: "absolute",
    insetEnd: 1,
    top: 1
  }));
};

var defaults = {
  duration: 5000,
  position: "bottom",
  variant: "solid"
};
var defaultStandaloneParam = {
  theme: _chakra_ui_theme__WEBPACK_IMPORTED_MODULE_11__["default"],
  colorMode: "light",
  toggleColorMode: _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_6__.noop,
  setColorMode: _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_6__.noop,
  defaultOptions: defaults
};
/**
 * Create a toast from outside of React Components
 */

function createStandaloneToast(_temp) {
  var _ref = _temp === void 0 ? defaultStandaloneParam : _temp,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? defaultStandaloneParam.theme : _ref$theme,
      _ref$colorMode = _ref.colorMode,
      colorMode = _ref$colorMode === void 0 ? defaultStandaloneParam.colorMode : _ref$colorMode,
      _ref$toggleColorMode = _ref.toggleColorMode,
      toggleColorMode = _ref$toggleColorMode === void 0 ? defaultStandaloneParam.toggleColorMode : _ref$toggleColorMode,
      _ref$setColorMode = _ref.setColorMode,
      setColorMode = _ref$setColorMode === void 0 ? defaultStandaloneParam.setColorMode : _ref$setColorMode,
      _ref$defaultOptions = _ref.defaultOptions,
      defaultOptions = _ref$defaultOptions === void 0 ? defaultStandaloneParam.defaultOptions : _ref$defaultOptions;

  var renderWithProviders = function renderWithProviders(props, options) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_9__.ThemeProvider, {
      theme: theme
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_12__.ColorModeContext.Provider, {
      value: {
        colorMode: colorMode,
        setColorMode: setColorMode,
        toggleColorMode: toggleColorMode
      }
    }, (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_6__.isFunction)(options.render) ? options.render(props) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Toast, _extends({}, props, options))));
  };

  var toastImpl = function toastImpl(options) {
    var opts = _extends({}, defaultOptions, options);

    opts.position = getToastPlacement(opts.position, theme.direction);

    var Message = function Message(props) {
      return renderWithProviders(props, opts);
    };

    return toast.notify(Message, opts);
  };

  toastImpl.close = toast.close;
  toastImpl.closeAll = toast.closeAll; // toasts can only be updated if they have a valid id

  toastImpl.update = function (id, options) {
    if (!id) return;

    var opts = _extends({}, defaultOptions, options);

    opts.position = getToastPlacement(opts.position, theme.direction);
    toast.update(id, _extends({}, opts, {
      message: function message(props) {
        return renderWithProviders(props, opts);
      }
    }));
  };

  toastImpl.isActive = toast.isActive;
  return toastImpl;
}
/**
 * React hook used to create a function that can be used
 * to show toasts in an application.
 */

function useToast(options) {
  var _useChakra = (0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_9__.useChakra)(),
      theme = _useChakra.theme,
      setColorMode = _useChakra.setColorMode,
      toggleColorMode = _useChakra.toggleColorMode,
      colorMode = _useChakra.colorMode;

  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {
    return createStandaloneToast({
      theme: theme,
      colorMode: colorMode,
      setColorMode: setColorMode,
      toggleColorMode: toggleColorMode,
      defaultOptions: options
    });
  }, [theme, setColorMode, toggleColorMode, colorMode, options]);
}




/***/ }),

/***/ "./node_modules/@chakra-ui/transition/dist/chakra-ui-transition.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@chakra-ui/transition/dist/chakra-ui-transition.esm.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Collapse": () => (/* binding */ Collapse),
/* harmony export */   "EASINGS": () => (/* binding */ TransitionEasings),
/* harmony export */   "Fade": () => (/* binding */ Fade),
/* harmony export */   "ScaleFade": () => (/* binding */ ScaleFade),
/* harmony export */   "Slide": () => (/* binding */ Slide),
/* harmony export */   "SlideFade": () => (/* binding */ SlideFade),
/* harmony export */   "fadeConfig": () => (/* binding */ fadeConfig),
/* harmony export */   "scaleFadeConfig": () => (/* binding */ scaleFadeConfig),
/* harmony export */   "slideFadeConfig": () => (/* binding */ slideFadeConfig)
/* harmony export */ });
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/utils */ "./node_modules/lodash.mergewith/index.js");
/* harmony import */ var _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs");
/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");




function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var TransitionEasings = {
  ease: [0.25, 0.1, 0.25, 1],
  easeIn: [0.4, 0, 1, 1],
  easeOut: [0, 0, 0.2, 1],
  easeInOut: [0.4, 0, 0.2, 1]
};
var TransitionVariants = {
  scale: {
    enter: {
      scale: 1
    },
    exit: {
      scale: 0.95
    }
  },
  fade: {
    enter: {
      opacity: 1
    },
    exit: {
      opacity: 0
    }
  },
  pushLeft: {
    enter: {
      x: "100%"
    },
    exit: {
      x: "-30%"
    }
  },
  pushRight: {
    enter: {
      x: "-100%"
    },
    exit: {
      x: "30%"
    }
  },
  pushUp: {
    enter: {
      y: "100%"
    },
    exit: {
      y: "-30%"
    }
  },
  pushDown: {
    enter: {
      y: "-100%"
    },
    exit: {
      y: "30%"
    }
  },
  slideLeft: {
    position: {
      left: 0,
      top: 0,
      bottom: 0,
      width: "100%"
    },
    enter: {
      x: 0,
      y: 0
    },
    exit: {
      x: "-100%",
      y: 0
    }
  },
  slideRight: {
    position: {
      right: 0,
      top: 0,
      bottom: 0,
      width: "100%"
    },
    enter: {
      x: 0,
      y: 0
    },
    exit: {
      x: "100%",
      y: 0
    }
  },
  slideUp: {
    position: {
      top: 0,
      left: 0,
      right: 0,
      maxWidth: "100vw"
    },
    enter: {
      x: 0,
      y: 0
    },
    exit: {
      x: 0,
      y: "-100%"
    }
  },
  slideDown: {
    position: {
      bottom: 0,
      left: 0,
      right: 0,
      maxWidth: "100vw"
    },
    enter: {
      x: 0,
      y: 0
    },
    exit: {
      x: 0,
      y: "100%"
    }
  }
};
function slideTransition(options) {
  var _options$direction;

  var side = (_options$direction = options == null ? void 0 : options.direction) != null ? _options$direction : "right";

  switch (side) {
    case "right":
      return TransitionVariants.slideRight;

    case "left":
      return TransitionVariants.slideLeft;

    case "bottom":
      return TransitionVariants.slideDown;

    case "top":
      return TransitionVariants.slideUp;

    default:
      return TransitionVariants.slideRight;
  }
}
var TransitionDefaults = {
  enter: {
    duration: 0.2,
    ease: TransitionEasings.easeOut
  },
  exit: {
    duration: 0.1,
    ease: TransitionEasings.easeIn
  }
};
var withDelay = {
  enter: function enter(transition, delay) {
    return _extends({}, transition, {
      delay: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(delay) ? delay : delay == null ? void 0 : delay["enter"]
    });
  },
  exit: function exit(transition, delay) {
    return _extends({}, transition, {
      delay: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(delay) ? delay : delay == null ? void 0 : delay["exit"]
    });
  }
};

var _excluded$4 = ["in", "unmountOnExit", "animateOpacity", "startingHeight", "endingHeight", "style", "className", "transition", "transitionEnd"];

var isNumeric = function isNumeric(value) {
  return value != null && parseInt(value.toString(), 10) > 0;
};

var defaultTransitions = {
  exit: {
    height: {
      duration: 0.2,
      ease: TransitionEasings.ease
    },
    opacity: {
      duration: 0.3,
      ease: TransitionEasings.ease
    }
  },
  enter: {
    height: {
      duration: 0.3,
      ease: TransitionEasings.ease
    },
    opacity: {
      duration: 0.4,
      ease: TransitionEasings.ease
    }
  }
};
var variants$4 = {
  exit: function exit(_ref) {
    var _transition$exit;

    var animateOpacity = _ref.animateOpacity,
        startingHeight = _ref.startingHeight,
        transition = _ref.transition,
        transitionEnd = _ref.transitionEnd,
        delay = _ref.delay;
    return _extends({}, animateOpacity && {
      opacity: isNumeric(startingHeight) ? 1 : 0
    }, {
      overflow: "hidden",
      height: startingHeight,
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,
      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(defaultTransitions.exit, delay)
    });
  },
  enter: function enter(_ref2) {
    var _transition$enter;

    var animateOpacity = _ref2.animateOpacity,
        endingHeight = _ref2.endingHeight,
        transition = _ref2.transition,
        transitionEnd = _ref2.transitionEnd,
        delay = _ref2.delay;
    return _extends({}, animateOpacity && {
      opacity: 1
    }, {
      height: endingHeight,
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,
      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(defaultTransitions.enter, delay)
    });
  }
};
var Collapse = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) {
  var isOpen = props["in"],
      unmountOnExit = props.unmountOnExit,
      _props$animateOpacity = props.animateOpacity,
      animateOpacity = _props$animateOpacity === void 0 ? true : _props$animateOpacity,
      _props$startingHeight = props.startingHeight,
      startingHeight = _props$startingHeight === void 0 ? 0 : _props$startingHeight,
      _props$endingHeight = props.endingHeight,
      endingHeight = _props$endingHeight === void 0 ? "auto" : _props$endingHeight,
      style = props.style,
      className = props.className,
      transition = props.transition,
      transitionEnd = props.transitionEnd,
      rest = _objectWithoutPropertiesLoose(props, _excluded$4);

  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(false),
      mounted = _React$useState[0],
      setMounted = _React$useState[1];

  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    var timeout = setTimeout(function () {
      setMounted(true);
    });
    return function () {
      return clearTimeout(timeout);
    };
  }, []);
  /**
   * Warn 🚨: `startingHeight` and `unmountOnExit` are mutually exclusive
   *
   * If you specify a starting height, the collapsed needs to be mounted
   * for the height to take effect.
   */

  (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.warn)({
    condition: Boolean(startingHeight > 0 && unmountOnExit),
    message: "startingHeight and unmountOnExit are mutually exclusive. You can't use them together"
  });
  var hasStartingHeight = parseFloat(startingHeight.toString()) > 0;
  var custom = {
    startingHeight: startingHeight,
    endingHeight: endingHeight,
    animateOpacity: animateOpacity,
    transition: !mounted ? {
      enter: {
        duration: 0
      }
    } : transition,
    transitionEnd: _chakra_ui_utils__WEBPACK_IMPORTED_MODULE_2___default()(transitionEnd, {
      enter: {
        overflow: "initial"
      },
      exit: unmountOnExit ? undefined : {
        display: hasStartingHeight ? "block" : "none"
      }
    })
  };
  var show = unmountOnExit ? isOpen : true;
  var animate = isOpen || unmountOnExit ? "enter" : "exit";
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_3__.AnimatePresence, {
    initial: false,
    custom: custom
  }, show && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, _extends({
    ref: ref
  }, rest, {
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.cx)("chakra-collapse", className),
    style: _extends({
      overflow: "hidden",
      display: "block"
    }, style),
    custom: custom,
    variants: variants$4,
    initial: unmountOnExit ? "exit" : false,
    animate: animate,
    exit: "exit"
  })));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.__DEV__) {
  Collapse.displayName = "Collapse";
}

var _excluded$3 = ["unmountOnExit", "in", "className", "transition", "transitionEnd", "delay"];
var variants$3 = {
  enter: function enter(_temp) {
    var _transition$enter;

    var _ref = _temp === void 0 ? {} : _temp,
        transition = _ref.transition,
        transitionEnd = _ref.transitionEnd,
        delay = _ref.delay;

    return {
      opacity: 1,
      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter
    };
  },
  exit: function exit(_temp2) {
    var _transition$exit;

    var _ref2 = _temp2 === void 0 ? {} : _temp2,
        transition = _ref2.transition,
        transitionEnd = _ref2.transitionEnd,
        delay = _ref2.delay;

    return {
      opacity: 0,
      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit
    };
  }
};
var fadeConfig = {
  initial: "exit",
  animate: "enter",
  exit: "exit",
  variants: variants$3
};
var Fade = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) {
  var unmountOnExit = props.unmountOnExit,
      isOpen = props["in"],
      className = props.className,
      transition = props.transition,
      transitionEnd = props.transitionEnd,
      delay = props.delay,
      rest = _objectWithoutPropertiesLoose(props, _excluded$3);

  var animate = isOpen || unmountOnExit ? "enter" : "exit";
  var show = unmountOnExit ? isOpen && unmountOnExit : true;
  var custom = {
    transition: transition,
    transitionEnd: transitionEnd,
    delay: delay
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_3__.AnimatePresence, {
    custom: custom
  }, show && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, _extends({
    ref: ref,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.cx)("chakra-fade", className),
    custom: custom
  }, fadeConfig, {
    animate: animate
  }, rest)));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.__DEV__) {
  Fade.displayName = "Fade";
}

var _excluded$2 = ["unmountOnExit", "in", "reverse", "initialScale", "className", "transition", "transitionEnd", "delay"];
var variants$2 = {
  exit: function exit(_ref) {
    var _transition$exit;

    var reverse = _ref.reverse,
        initialScale = _ref.initialScale,
        transition = _ref.transition,
        transitionEnd = _ref.transitionEnd,
        delay = _ref.delay;
    return _extends({
      opacity: 0
    }, reverse ? {
      scale: initialScale,
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit
    } : {
      transitionEnd: _extends({
        scale: initialScale
      }, transitionEnd == null ? void 0 : transitionEnd.exit)
    }, {
      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay)
    });
  },
  enter: function enter(_ref2) {
    var _transition$enter;

    var transitionEnd = _ref2.transitionEnd,
        transition = _ref2.transition,
        delay = _ref2.delay;
    return {
      opacity: 1,
      scale: 1,
      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter
    };
  }
};
var scaleFadeConfig = {
  initial: "exit",
  animate: "enter",
  exit: "exit",
  variants: variants$2
};
var ScaleFade = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) {
  var unmountOnExit = props.unmountOnExit,
      isOpen = props["in"],
      _props$reverse = props.reverse,
      reverse = _props$reverse === void 0 ? true : _props$reverse,
      _props$initialScale = props.initialScale,
      initialScale = _props$initialScale === void 0 ? 0.95 : _props$initialScale,
      className = props.className,
      transition = props.transition,
      transitionEnd = props.transitionEnd,
      delay = props.delay,
      rest = _objectWithoutPropertiesLoose(props, _excluded$2);

  var show = unmountOnExit ? isOpen && unmountOnExit : true;
  var animate = isOpen || unmountOnExit ? "enter" : "exit";
  var custom = {
    initialScale: initialScale,
    reverse: reverse,
    transition: transition,
    transitionEnd: transitionEnd,
    delay: delay
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_3__.AnimatePresence, {
    custom: custom
  }, show && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, _extends({
    ref: ref,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.cx)("chakra-offset-slide", className)
  }, scaleFadeConfig, {
    animate: animate,
    custom: custom
  }, rest)));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.__DEV__) {
  ScaleFade.displayName = "ScaleFade";
}

var _excluded$1 = ["direction", "style", "unmountOnExit", "in", "className", "transition", "transitionEnd", "delay"];
var defaultTransition = {
  exit: {
    duration: 0.15,
    ease: TransitionEasings.easeInOut
  },
  enter: {
    type: "spring",
    damping: 25,
    stiffness: 180
  }
};
var variants$1 = {
  exit: function exit(_ref) {
    var _transition$exit;

    var direction = _ref.direction,
        transition = _ref.transition,
        transitionEnd = _ref.transitionEnd,
        delay = _ref.delay;

    var _slideTransition = slideTransition({
      direction: direction
    }),
        exitStyles = _slideTransition.exit;

    return _extends({}, exitStyles, {
      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(defaultTransition.exit, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit
    });
  },
  enter: function enter(_ref2) {
    var _transition$enter;

    var direction = _ref2.direction,
        transitionEnd = _ref2.transitionEnd,
        transition = _ref2.transition,
        delay = _ref2.delay;

    var _slideTransition2 = slideTransition({
      direction: direction
    }),
        enterStyles = _slideTransition2.enter;

    return _extends({}, enterStyles, {
      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(defaultTransition.enter, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter
    });
  }
};
var Slide = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) {
  var _props$direction = props.direction,
      direction = _props$direction === void 0 ? "right" : _props$direction,
      style = props.style,
      unmountOnExit = props.unmountOnExit,
      isOpen = props["in"],
      className = props.className,
      transition = props.transition,
      transitionEnd = props.transitionEnd,
      delay = props.delay,
      rest = _objectWithoutPropertiesLoose(props, _excluded$1);

  var transitionStyles = slideTransition({
    direction: direction
  });
  var computedStyle = Object.assign({
    position: "fixed"
  }, transitionStyles.position, style);
  var show = unmountOnExit ? isOpen && unmountOnExit : true;
  var animate = isOpen || unmountOnExit ? "enter" : "exit";
  var custom = {
    transitionEnd: transitionEnd,
    transition: transition,
    direction: direction,
    delay: delay
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_3__.AnimatePresence, {
    custom: custom
  }, show && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, _extends({}, rest, {
    ref: ref,
    initial: "exit",
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.cx)("chakra-slide", className),
    animate: animate,
    exit: "exit",
    custom: custom,
    variants: variants$1,
    style: computedStyle
  })));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.__DEV__) {
  Slide.displayName = "Slide";
}

var _excluded = ["unmountOnExit", "in", "reverse", "className", "offsetX", "offsetY", "transition", "transitionEnd", "delay"];
var variants = {
  initial: function initial(_ref) {
    var _transition$exit;

    var offsetX = _ref.offsetX,
        offsetY = _ref.offsetY,
        transition = _ref.transition,
        transitionEnd = _ref.transitionEnd,
        delay = _ref.delay;
    return {
      opacity: 0,
      x: offsetX,
      y: offsetY,
      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit
    };
  },
  enter: function enter(_ref2) {
    var _transition$enter;

    var transition = _ref2.transition,
        transitionEnd = _ref2.transitionEnd,
        delay = _ref2.delay;
    return {
      opacity: 1,
      x: 0,
      y: 0,
      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter
    };
  },
  exit: function exit(_ref3) {
    var _transition$exit2;

    var offsetY = _ref3.offsetY,
        offsetX = _ref3.offsetX,
        transition = _ref3.transition,
        transitionEnd = _ref3.transitionEnd,
        reverse = _ref3.reverse,
        delay = _ref3.delay;
    var offset = {
      x: offsetX,
      y: offsetY
    };
    return _extends({
      opacity: 0,
      transition: (_transition$exit2 = transition == null ? void 0 : transition.exit) != null ? _transition$exit2 : withDelay.exit(TransitionDefaults.exit, delay)
    }, reverse ? _extends({}, offset, {
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit
    }) : {
      transitionEnd: _extends({}, offset, transitionEnd == null ? void 0 : transitionEnd.exit)
    });
  }
};
var slideFadeConfig = {
  initial: "initial",
  animate: "enter",
  exit: "exit",
  variants: variants
};
var SlideFade = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) {
  var unmountOnExit = props.unmountOnExit,
      isOpen = props["in"],
      _props$reverse = props.reverse,
      reverse = _props$reverse === void 0 ? true : _props$reverse,
      className = props.className,
      _props$offsetX = props.offsetX,
      offsetX = _props$offsetX === void 0 ? 0 : _props$offsetX,
      _props$offsetY = props.offsetY,
      offsetY = _props$offsetY === void 0 ? 8 : _props$offsetY,
      transition = props.transition,
      transitionEnd = props.transitionEnd,
      delay = props.delay,
      rest = _objectWithoutPropertiesLoose(props, _excluded);

  var show = unmountOnExit ? isOpen && unmountOnExit : true;
  var animate = isOpen || unmountOnExit ? "enter" : "exit";
  var custom = {
    offsetX: offsetX,
    offsetY: offsetY,
    reverse: reverse,
    transition: transition,
    transitionEnd: transitionEnd,
    delay: delay
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_3__.AnimatePresence, {
    custom: custom
  }, show && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, _extends({
    ref: ref,
    className: (0,_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.cx)("chakra-offset-slide", className),
    custom: custom
  }, slideFadeConfig, {
    animate: animate
  }, rest)));
});

if (_chakra_ui_utils__WEBPACK_IMPORTED_MODULE_1__.__DEV__) {
  SlideFade.displayName = "SlideFade";
}




/***/ }),

/***/ "./node_modules/@ctrl/tinycolor/dist/module/conversion.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ctrl/tinycolor/dist/module/conversion.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rgbToRgb": () => (/* binding */ rgbToRgb),
/* harmony export */   "rgbToHsl": () => (/* binding */ rgbToHsl),
/* harmony export */   "hslToRgb": () => (/* binding */ hslToRgb),
/* harmony export */   "rgbToHsv": () => (/* binding */ rgbToHsv),
/* harmony export */   "hsvToRgb": () => (/* binding */ hsvToRgb),
/* harmony export */   "rgbToHex": () => (/* binding */ rgbToHex),
/* harmony export */   "rgbaToHex": () => (/* binding */ rgbaToHex),
/* harmony export */   "rgbaToArgbHex": () => (/* binding */ rgbaToArgbHex),
/* harmony export */   "convertDecimalToHex": () => (/* binding */ convertDecimalToHex),
/* harmony export */   "convertHexToDecimal": () => (/* binding */ convertHexToDecimal),
/* harmony export */   "parseIntFromHex": () => (/* binding */ parseIntFromHex),
/* harmony export */   "numberInputToObject": () => (/* binding */ numberInputToObject)
/* harmony export */ });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@ctrl/tinycolor/dist/module/util.js");

// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>
/**
 * Handle bounds / percentage checking to conform to CSS color spec
 * <http://www.w3.org/TR/css3-color/>
 * *Assumes:* r, g, b in [0, 255] or [0, 1]
 * *Returns:* { r, g, b } in [0, 255]
 */
function rgbToRgb(r, g, b) {
    return {
        r: (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(r, 255) * 255,
        g: (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(g, 255) * 255,
        b: (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(b, 255) * 255,
    };
}
/**
 * Converts an RGB color value to HSL.
 * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
 * *Returns:* { h, s, l } in [0,1]
 */
function rgbToHsl(r, g, b) {
    r = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(r, 255);
    g = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(g, 255);
    b = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(b, 255);
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var h = 0;
    var s = 0;
    var l = (max + min) / 2;
    if (max === min) {
        s = 0;
        h = 0; // achromatic
    }
    else {
        var d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch (max) {
            case r:
                h = (g - b) / d + (g < b ? 6 : 0);
                break;
            case g:
                h = (b - r) / d + 2;
                break;
            case b:
                h = (r - g) / d + 4;
                break;
            default:
                break;
        }
        h /= 6;
    }
    return { h: h, s: s, l: l };
}
function hue2rgb(p, q, t) {
    if (t < 0) {
        t += 1;
    }
    if (t > 1) {
        t -= 1;
    }
    if (t < 1 / 6) {
        return p + (q - p) * (6 * t);
    }
    if (t < 1 / 2) {
        return q;
    }
    if (t < 2 / 3) {
        return p + (q - p) * (2 / 3 - t) * 6;
    }
    return p;
}
/**
 * Converts an HSL color value to RGB.
 *
 * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
 * *Returns:* { r, g, b } in the set [0, 255]
 */
function hslToRgb(h, s, l) {
    var r;
    var g;
    var b;
    h = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(h, 360);
    s = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(s, 100);
    l = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(l, 100);
    if (s === 0) {
        // achromatic
        g = l;
        b = l;
        r = l;
    }
    else {
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        r = hue2rgb(p, q, h + 1 / 3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1 / 3);
    }
    return { r: r * 255, g: g * 255, b: b * 255 };
}
/**
 * Converts an RGB color value to HSV
 *
 * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
 * *Returns:* { h, s, v } in [0,1]
 */
function rgbToHsv(r, g, b) {
    r = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(r, 255);
    g = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(g, 255);
    b = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(b, 255);
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var h = 0;
    var v = max;
    var d = max - min;
    var s = max === 0 ? 0 : d / max;
    if (max === min) {
        h = 0; // achromatic
    }
    else {
        switch (max) {
            case r:
                h = (g - b) / d + (g < b ? 6 : 0);
                break;
            case g:
                h = (b - r) / d + 2;
                break;
            case b:
                h = (r - g) / d + 4;
                break;
            default:
                break;
        }
        h /= 6;
    }
    return { h: h, s: s, v: v };
}
/**
 * Converts an HSV color value to RGB.
 *
 * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
 * *Returns:* { r, g, b } in the set [0, 255]
 */
function hsvToRgb(h, s, v) {
    h = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(h, 360) * 6;
    s = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(s, 100);
    v = (0,_util__WEBPACK_IMPORTED_MODULE_0__.bound01)(v, 100);
    var i = Math.floor(h);
    var f = h - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);
    var mod = i % 6;
    var r = [v, q, p, p, t, v][mod];
    var g = [t, v, v, q, p, p][mod];
    var b = [p, p, t, v, v, q][mod];
    return { r: r * 255, g: g * 255, b: b * 255 };
}
/**
 * Converts an RGB color to hex
 *
 * Assumes r, g, and b are contained in the set [0, 255]
 * Returns a 3 or 6 character hex
 */
function rgbToHex(r, g, b, allow3Char) {
    var hex = [
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(Math.round(r).toString(16)),
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(Math.round(g).toString(16)),
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(Math.round(b).toString(16)),
    ];
    // Return a 3 character hex if possible
    if (allow3Char &&
        hex[0].startsWith(hex[0].charAt(1)) &&
        hex[1].startsWith(hex[1].charAt(1)) &&
        hex[2].startsWith(hex[2].charAt(1))) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }
    return hex.join('');
}
/**
 * Converts an RGBA color plus alpha transparency to hex
 *
 * Assumes r, g, b are contained in the set [0, 255] and
 * a in [0, 1]. Returns a 4 or 8 character rgba hex
 */
// eslint-disable-next-line max-params
function rgbaToHex(r, g, b, a, allow4Char) {
    var hex = [
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(Math.round(r).toString(16)),
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(Math.round(g).toString(16)),
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(Math.round(b).toString(16)),
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(convertDecimalToHex(a)),
    ];
    // Return a 4 character hex if possible
    if (allow4Char &&
        hex[0].startsWith(hex[0].charAt(1)) &&
        hex[1].startsWith(hex[1].charAt(1)) &&
        hex[2].startsWith(hex[2].charAt(1)) &&
        hex[3].startsWith(hex[3].charAt(1))) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
    }
    return hex.join('');
}
/**
 * Converts an RGBA color to an ARGB Hex8 string
 * Rarely used, but required for "toFilter()"
 */
function rgbaToArgbHex(r, g, b, a) {
    var hex = [
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(convertDecimalToHex(a)),
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(Math.round(r).toString(16)),
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(Math.round(g).toString(16)),
        (0,_util__WEBPACK_IMPORTED_MODULE_0__.pad2)(Math.round(b).toString(16)),
    ];
    return hex.join('');
}
/** Converts a decimal to a hex value */
function convertDecimalToHex(d) {
    return Math.round(parseFloat(d) * 255).toString(16);
}
/** Converts a hex value to a decimal */
function convertHexToDecimal(h) {
    return parseIntFromHex(h) / 255;
}
/** Parse a base-16 hex value into a base-10 integer */
function parseIntFromHex(val) {
    return parseInt(val, 16);
}
function numberInputToObject(color) {
    return {
        r: color >> 16,
        g: (color & 0xff00) >> 8,
        b: color & 0xff,
    };
}


/***/ }),

/***/ "./node_modules/@ctrl/tinycolor/dist/module/css-color-names.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ctrl/tinycolor/dist/module/css-color-names.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "names": () => (/* binding */ names)
/* harmony export */ });
// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json
/**
 * @hidden
 */
var names = {
    aliceblue: '#f0f8ff',
    antiquewhite: '#faebd7',
    aqua: '#00ffff',
    aquamarine: '#7fffd4',
    azure: '#f0ffff',
    beige: '#f5f5dc',
    bisque: '#ffe4c4',
    black: '#000000',
    blanchedalmond: '#ffebcd',
    blue: '#0000ff',
    blueviolet: '#8a2be2',
    brown: '#a52a2a',
    burlywood: '#deb887',
    cadetblue: '#5f9ea0',
    chartreuse: '#7fff00',
    chocolate: '#d2691e',
    coral: '#ff7f50',
    cornflowerblue: '#6495ed',
    cornsilk: '#fff8dc',
    crimson: '#dc143c',
    cyan: '#00ffff',
    darkblue: '#00008b',
    darkcyan: '#008b8b',
    darkgoldenrod: '#b8860b',
    darkgray: '#a9a9a9',
    darkgreen: '#006400',
    darkgrey: '#a9a9a9',
    darkkhaki: '#bdb76b',
    darkmagenta: '#8b008b',
    darkolivegreen: '#556b2f',
    darkorange: '#ff8c00',
    darkorchid: '#9932cc',
    darkred: '#8b0000',
    darksalmon: '#e9967a',
    darkseagreen: '#8fbc8f',
    darkslateblue: '#483d8b',
    darkslategray: '#2f4f4f',
    darkslategrey: '#2f4f4f',
    darkturquoise: '#00ced1',
    darkviolet: '#9400d3',
    deeppink: '#ff1493',
    deepskyblue: '#00bfff',
    dimgray: '#696969',
    dimgrey: '#696969',
    dodgerblue: '#1e90ff',
    firebrick: '#b22222',
    floralwhite: '#fffaf0',
    forestgreen: '#228b22',
    fuchsia: '#ff00ff',
    gainsboro: '#dcdcdc',
    ghostwhite: '#f8f8ff',
    goldenrod: '#daa520',
    gold: '#ffd700',
    gray: '#808080',
    green: '#008000',
    greenyellow: '#adff2f',
    grey: '#808080',
    honeydew: '#f0fff0',
    hotpink: '#ff69b4',
    indianred: '#cd5c5c',
    indigo: '#4b0082',
    ivory: '#fffff0',
    khaki: '#f0e68c',
    lavenderblush: '#fff0f5',
    lavender: '#e6e6fa',
    lawngreen: '#7cfc00',
    lemonchiffon: '#fffacd',
    lightblue: '#add8e6',
    lightcoral: '#f08080',
    lightcyan: '#e0ffff',
    lightgoldenrodyellow: '#fafad2',
    lightgray: '#d3d3d3',
    lightgreen: '#90ee90',
    lightgrey: '#d3d3d3',
    lightpink: '#ffb6c1',
    lightsalmon: '#ffa07a',
    lightseagreen: '#20b2aa',
    lightskyblue: '#87cefa',
    lightslategray: '#778899',
    lightslategrey: '#778899',
    lightsteelblue: '#b0c4de',
    lightyellow: '#ffffe0',
    lime: '#00ff00',
    limegreen: '#32cd32',
    linen: '#faf0e6',
    magenta: '#ff00ff',
    maroon: '#800000',
    mediumaquamarine: '#66cdaa',
    mediumblue: '#0000cd',
    mediumorchid: '#ba55d3',
    mediumpurple: '#9370db',
    mediumseagreen: '#3cb371',
    mediumslateblue: '#7b68ee',
    mediumspringgreen: '#00fa9a',
    mediumturquoise: '#48d1cc',
    mediumvioletred: '#c71585',
    midnightblue: '#191970',
    mintcream: '#f5fffa',
    mistyrose: '#ffe4e1',
    moccasin: '#ffe4b5',
    navajowhite: '#ffdead',
    navy: '#000080',
    oldlace: '#fdf5e6',
    olive: '#808000',
    olivedrab: '#6b8e23',
    orange: '#ffa500',
    orangered: '#ff4500',
    orchid: '#da70d6',
    palegoldenrod: '#eee8aa',
    palegreen: '#98fb98',
    paleturquoise: '#afeeee',
    palevioletred: '#db7093',
    papayawhip: '#ffefd5',
    peachpuff: '#ffdab9',
    peru: '#cd853f',
    pink: '#ffc0cb',
    plum: '#dda0dd',
    powderblue: '#b0e0e6',
    purple: '#800080',
    rebeccapurple: '#663399',
    red: '#ff0000',
    rosybrown: '#bc8f8f',
    royalblue: '#4169e1',
    saddlebrown: '#8b4513',
    salmon: '#fa8072',
    sandybrown: '#f4a460',
    seagreen: '#2e8b57',
    seashell: '#fff5ee',
    sienna: '#a0522d',
    silver: '#c0c0c0',
    skyblue: '#87ceeb',
    slateblue: '#6a5acd',
    slategray: '#708090',
    slategrey: '#708090',
    snow: '#fffafa',
    springgreen: '#00ff7f',
    steelblue: '#4682b4',
    tan: '#d2b48c',
    teal: '#008080',
    thistle: '#d8bfd8',
    tomato: '#ff6347',
    turquoise: '#40e0d0',
    violet: '#ee82ee',
    wheat: '#f5deb3',
    white: '#ffffff',
    whitesmoke: '#f5f5f5',
    yellow: '#ffff00',
    yellowgreen: '#9acd32',
};


/***/ }),

/***/ "./node_modules/@ctrl/tinycolor/dist/module/format-input.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ctrl/tinycolor/dist/module/format-input.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "inputToRGB": () => (/* binding */ inputToRGB),
/* harmony export */   "stringInputToObject": () => (/* binding */ stringInputToObject),
/* harmony export */   "isValidCSSUnit": () => (/* binding */ isValidCSSUnit)
/* harmony export */ });
/* harmony import */ var _conversion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conversion */ "./node_modules/@ctrl/tinycolor/dist/module/conversion.js");
/* harmony import */ var _css_color_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css-color-names */ "./node_modules/@ctrl/tinycolor/dist/module/css-color-names.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/@ctrl/tinycolor/dist/module/util.js");



/**
 * Given a string or object, convert that input to RGB
 *
 * Possible string inputs:
 * ```
 * "red"
 * "#f00" or "f00"
 * "#ff0000" or "ff0000"
 * "#ff000000" or "ff000000"
 * "rgb 255 0 0" or "rgb (255, 0, 0)"
 * "rgb 1.0 0 0" or "rgb (1, 0, 0)"
 * "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
 * "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
 * "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
 * "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
 * "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
 * ```
 */
function inputToRGB(color) {
    var rgb = { r: 0, g: 0, b: 0 };
    var a = 1;
    var s = null;
    var v = null;
    var l = null;
    var ok = false;
    var format = false;
    if (typeof color === 'string') {
        color = stringInputToObject(color);
    }
    if (typeof color === 'object') {
        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
            rgb = (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.rgbToRgb)(color.r, color.g, color.b);
            ok = true;
            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
            s = (0,_util__WEBPACK_IMPORTED_MODULE_1__.convertToPercentage)(color.s);
            v = (0,_util__WEBPACK_IMPORTED_MODULE_1__.convertToPercentage)(color.v);
            rgb = (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.hsvToRgb)(color.h, s, v);
            ok = true;
            format = 'hsv';
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
            s = (0,_util__WEBPACK_IMPORTED_MODULE_1__.convertToPercentage)(color.s);
            l = (0,_util__WEBPACK_IMPORTED_MODULE_1__.convertToPercentage)(color.l);
            rgb = (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.hslToRgb)(color.h, s, l);
            ok = true;
            format = 'hsl';
        }
        if (Object.prototype.hasOwnProperty.call(color, 'a')) {
            a = color.a;
        }
    }
    a = (0,_util__WEBPACK_IMPORTED_MODULE_1__.boundAlpha)(a);
    return {
        ok: ok,
        format: color.format || format,
        r: Math.min(255, Math.max(rgb.r, 0)),
        g: Math.min(255, Math.max(rgb.g, 0)),
        b: Math.min(255, Math.max(rgb.b, 0)),
        a: a,
    };
}
// <http://www.w3.org/TR/css3-values/#integers>
var CSS_INTEGER = '[-\\+]?\\d+%?';
// <http://www.w3.org/TR/css3-values/#number-value>
var CSS_NUMBER = '[-\\+]?\\d*\\.\\d+%?';
// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.
var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
// Actual matching.
// Parentheses and commas are optional, but not required.
// Whitespace can take the place of commas or opening paren
var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
var matchers = {
    CSS_UNIT: new RegExp(CSS_UNIT),
    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),
    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),
    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),
    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),
    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),
    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
};
/**
 * Permissive string parsing.  Take in a number of formats, and output an object
 * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
 */
function stringInputToObject(color) {
    color = color.trim().toLowerCase();
    if (color.length === 0) {
        return false;
    }
    var named = false;
    if (_css_color_names__WEBPACK_IMPORTED_MODULE_2__.names[color]) {
        color = _css_color_names__WEBPACK_IMPORTED_MODULE_2__.names[color];
        named = true;
    }
    else if (color === 'transparent') {
        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };
    }
    // Try to match string input using regular expressions.
    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
    // Just return an object and let the conversion functions handle that.
    // This way the result will be the same whether the tinycolor is initialized with string or object.
    var match = matchers.rgb.exec(color);
    if (match) {
        return { r: match[1], g: match[2], b: match[3] };
    }
    match = matchers.rgba.exec(color);
    if (match) {
        return { r: match[1], g: match[2], b: match[3], a: match[4] };
    }
    match = matchers.hsl.exec(color);
    if (match) {
        return { h: match[1], s: match[2], l: match[3] };
    }
    match = matchers.hsla.exec(color);
    if (match) {
        return { h: match[1], s: match[2], l: match[3], a: match[4] };
    }
    match = matchers.hsv.exec(color);
    if (match) {
        return { h: match[1], s: match[2], v: match[3] };
    }
    match = matchers.hsva.exec(color);
    if (match) {
        return { h: match[1], s: match[2], v: match[3], a: match[4] };
    }
    match = matchers.hex8.exec(color);
    if (match) {
        return {
            r: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[1]),
            g: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[2]),
            b: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[3]),
            a: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.convertHexToDecimal)(match[4]),
            format: named ? 'name' : 'hex8',
        };
    }
    match = matchers.hex6.exec(color);
    if (match) {
        return {
            r: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[1]),
            g: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[2]),
            b: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[3]),
            format: named ? 'name' : 'hex',
        };
    }
    match = matchers.hex4.exec(color);
    if (match) {
        return {
            r: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[1] + match[1]),
            g: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[2] + match[2]),
            b: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[3] + match[3]),
            a: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.convertHexToDecimal)(match[4] + match[4]),
            format: named ? 'name' : 'hex8',
        };
    }
    match = matchers.hex3.exec(color);
    if (match) {
        return {
            r: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[1] + match[1]),
            g: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[2] + match[2]),
            b: (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.parseIntFromHex)(match[3] + match[3]),
            format: named ? 'name' : 'hex',
        };
    }
    return false;
}
/**
 * Check to see if it looks like a CSS unit
 * (see `matchers` above for definition).
 */
function isValidCSSUnit(color) {
    return Boolean(matchers.CSS_UNIT.exec(String(color)));
}


/***/ }),

/***/ "./node_modules/@ctrl/tinycolor/dist/module/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ctrl/tinycolor/dist/module/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TinyColor": () => (/* binding */ TinyColor),
/* harmony export */   "tinycolor": () => (/* binding */ tinycolor)
/* harmony export */ });
/* harmony import */ var _conversion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conversion */ "./node_modules/@ctrl/tinycolor/dist/module/conversion.js");
/* harmony import */ var _css_color_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./css-color-names */ "./node_modules/@ctrl/tinycolor/dist/module/css-color-names.js");
/* harmony import */ var _format_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./format-input */ "./node_modules/@ctrl/tinycolor/dist/module/format-input.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "./node_modules/@ctrl/tinycolor/dist/module/util.js");




var TinyColor = /** @class */ (function () {
    function TinyColor(color, opts) {
        if (color === void 0) { color = ''; }
        if (opts === void 0) { opts = {}; }
        var _a;
        // If input is already a tinycolor, return itself
        if (color instanceof TinyColor) {
            // eslint-disable-next-line no-constructor-return
            return color;
        }
        if (typeof color === 'number') {
            color = (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.numberInputToObject)(color);
        }
        this.originalInput = color;
        var rgb = (0,_format_input__WEBPACK_IMPORTED_MODULE_1__.inputToRGB)(color);
        this.originalInput = color;
        this.r = rgb.r;
        this.g = rgb.g;
        this.b = rgb.b;
        this.a = rgb.a;
        this.roundA = Math.round(100 * this.a) / 100;
        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;
        this.gradientType = opts.gradientType;
        // Don't let the range of [0,255] come back in [0,1].
        // Potentially lose a little bit of precision here, but will fix issues where
        // .5 gets interpreted as half of the total, instead of half of 1
        // If it was supposed to be 128, this was already taken care of by `inputToRgb`
        if (this.r < 1) {
            this.r = Math.round(this.r);
        }
        if (this.g < 1) {
            this.g = Math.round(this.g);
        }
        if (this.b < 1) {
            this.b = Math.round(this.b);
        }
        this.isValid = rgb.ok;
    }
    TinyColor.prototype.isDark = function () {
        return this.getBrightness() < 128;
    };
    TinyColor.prototype.isLight = function () {
        return !this.isDark();
    };
    /**
     * Returns the perceived brightness of the color, from 0-255.
     */
    TinyColor.prototype.getBrightness = function () {
        // http://www.w3.org/TR/AERT#color-contrast
        var rgb = this.toRgb();
        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
    };
    /**
     * Returns the perceived luminance of a color, from 0-1.
     */
    TinyColor.prototype.getLuminance = function () {
        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
        var rgb = this.toRgb();
        var R;
        var G;
        var B;
        var RsRGB = rgb.r / 255;
        var GsRGB = rgb.g / 255;
        var BsRGB = rgb.b / 255;
        if (RsRGB <= 0.03928) {
            R = RsRGB / 12.92;
        }
        else {
            // eslint-disable-next-line prefer-exponentiation-operator
            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
        }
        if (GsRGB <= 0.03928) {
            G = GsRGB / 12.92;
        }
        else {
            // eslint-disable-next-line prefer-exponentiation-operator
            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
        }
        if (BsRGB <= 0.03928) {
            B = BsRGB / 12.92;
        }
        else {
            // eslint-disable-next-line prefer-exponentiation-operator
            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
        }
        return 0.2126 * R + 0.7152 * G + 0.0722 * B;
    };
    /**
     * Returns the alpha value of a color, from 0-1.
     */
    TinyColor.prototype.getAlpha = function () {
        return this.a;
    };
    /**
     * Sets the alpha value on the current color.
     *
     * @param alpha - The new alpha value. The accepted range is 0-1.
     */
    TinyColor.prototype.setAlpha = function (alpha) {
        this.a = (0,_util__WEBPACK_IMPORTED_MODULE_2__.boundAlpha)(alpha);
        this.roundA = Math.round(100 * this.a) / 100;
        return this;
    };
    /**
     * Returns the object as a HSVA object.
     */
    TinyColor.prototype.toHsv = function () {
        var hsv = (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.rgbToHsv)(this.r, this.g, this.b);
        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };
    };
    /**
     * Returns the hsva values interpolated into a string with the following format:
     * "hsva(xxx, xxx, xxx, xx)".
     */
    TinyColor.prototype.toHsvString = function () {
        var hsv = (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.rgbToHsv)(this.r, this.g, this.b);
        var h = Math.round(hsv.h * 360);
        var s = Math.round(hsv.s * 100);
        var v = Math.round(hsv.v * 100);
        return this.a === 1 ? "hsv(" + h + ", " + s + "%, " + v + "%)" : "hsva(" + h + ", " + s + "%, " + v + "%, " + this.roundA + ")";
    };
    /**
     * Returns the object as a HSLA object.
     */
    TinyColor.prototype.toHsl = function () {
        var hsl = (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.rgbToHsl)(this.r, this.g, this.b);
        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };
    };
    /**
     * Returns the hsla values interpolated into a string with the following format:
     * "hsla(xxx, xxx, xxx, xx)".
     */
    TinyColor.prototype.toHslString = function () {
        var hsl = (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.rgbToHsl)(this.r, this.g, this.b);
        var h = Math.round(hsl.h * 360);
        var s = Math.round(hsl.s * 100);
        var l = Math.round(hsl.l * 100);
        return this.a === 1 ? "hsl(" + h + ", " + s + "%, " + l + "%)" : "hsla(" + h + ", " + s + "%, " + l + "%, " + this.roundA + ")";
    };
    /**
     * Returns the hex value of the color.
     * @param allow3Char will shorten hex value to 3 char if possible
     */
    TinyColor.prototype.toHex = function (allow3Char) {
        if (allow3Char === void 0) { allow3Char = false; }
        return (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.rgbToHex)(this.r, this.g, this.b, allow3Char);
    };
    /**
     * Returns the hex value of the color -with a # appened.
     * @param allow3Char will shorten hex value to 3 char if possible
     */
    TinyColor.prototype.toHexString = function (allow3Char) {
        if (allow3Char === void 0) { allow3Char = false; }
        return '#' + this.toHex(allow3Char);
    };
    /**
     * Returns the hex 8 value of the color.
     * @param allow4Char will shorten hex value to 4 char if possible
     */
    TinyColor.prototype.toHex8 = function (allow4Char) {
        if (allow4Char === void 0) { allow4Char = false; }
        return (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.rgbaToHex)(this.r, this.g, this.b, this.a, allow4Char);
    };
    /**
     * Returns the hex 8 value of the color -with a # appened.
     * @param allow4Char will shorten hex value to 4 char if possible
     */
    TinyColor.prototype.toHex8String = function (allow4Char) {
        if (allow4Char === void 0) { allow4Char = false; }
        return '#' + this.toHex8(allow4Char);
    };
    /**
     * Returns the object as a RGBA object.
     */
    TinyColor.prototype.toRgb = function () {
        return {
            r: Math.round(this.r),
            g: Math.round(this.g),
            b: Math.round(this.b),
            a: this.a,
        };
    };
    /**
     * Returns the RGBA values interpolated into a string with the following format:
     * "RGBA(xxx, xxx, xxx, xx)".
     */
    TinyColor.prototype.toRgbString = function () {
        var r = Math.round(this.r);
        var g = Math.round(this.g);
        var b = Math.round(this.b);
        return this.a === 1 ? "rgb(" + r + ", " + g + ", " + b + ")" : "rgba(" + r + ", " + g + ", " + b + ", " + this.roundA + ")";
    };
    /**
     * Returns the object as a RGBA object.
     */
    TinyColor.prototype.toPercentageRgb = function () {
        var fmt = function (x) { return Math.round((0,_util__WEBPACK_IMPORTED_MODULE_2__.bound01)(x, 255) * 100) + "%"; };
        return {
            r: fmt(this.r),
            g: fmt(this.g),
            b: fmt(this.b),
            a: this.a,
        };
    };
    /**
     * Returns the RGBA relative values interpolated into a string
     */
    TinyColor.prototype.toPercentageRgbString = function () {
        var rnd = function (x) { return Math.round((0,_util__WEBPACK_IMPORTED_MODULE_2__.bound01)(x, 255) * 100); };
        return this.a === 1
            ? "rgb(" + rnd(this.r) + "%, " + rnd(this.g) + "%, " + rnd(this.b) + "%)"
            : "rgba(" + rnd(this.r) + "%, " + rnd(this.g) + "%, " + rnd(this.b) + "%, " + this.roundA + ")";
    };
    /**
     * The 'real' name of the color -if there is one.
     */
    TinyColor.prototype.toName = function () {
        if (this.a === 0) {
            return 'transparent';
        }
        if (this.a < 1) {
            return false;
        }
        var hex = '#' + (0,_conversion__WEBPACK_IMPORTED_MODULE_0__.rgbToHex)(this.r, this.g, this.b, false);
        for (var _i = 0, _a = Object.entries(_css_color_names__WEBPACK_IMPORTED_MODULE_3__.names); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (hex === value) {
                return key;
            }
        }
        return false;
    };
    TinyColor.prototype.toString = function (format) {
        var formatSet = Boolean(format);
        format = format !== null && format !== void 0 ? format : this.format;
        var formattedString = false;
        var hasAlpha = this.a < 1 && this.a >= 0;
        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');
        if (needsAlphaFormat) {
            // Special case for "transparent", all other non-alpha formats
            // will return rgba when there is transparency.
            if (format === 'name' && this.a === 0) {
                return this.toName();
            }
            return this.toRgbString();
        }
        if (format === 'rgb') {
            formattedString = this.toRgbString();
        }
        if (format === 'prgb') {
            formattedString = this.toPercentageRgbString();
        }
        if (format === 'hex' || format === 'hex6') {
            formattedString = this.toHexString();
        }
        if (format === 'hex3') {
            formattedString = this.toHexString(true);
        }
        if (format === 'hex4') {
            formattedString = this.toHex8String(true);
        }
        if (format === 'hex8') {
            formattedString = this.toHex8String();
        }
        if (format === 'name') {
            formattedString = this.toName();
        }
        if (format === 'hsl') {
            formattedString = this.toHslString();
        }
        if (format === 'hsv') {
            formattedString = this.toHsvString();
        }
        return formattedString || this.toHexString();
    };
    TinyColor.prototype.toNumber = function () {
        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
    };
    TinyColor.prototype.clone = function () {
        return new TinyColor(this.toString());
    };
    /**
     * Lighten the color a given amount. Providing 100 will always return white.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.lighten = function (amount) {
        if (amount === void 0) { amount = 10; }
        var hsl = this.toHsl();
        hsl.l += amount / 100;
        hsl.l = (0,_util__WEBPACK_IMPORTED_MODULE_2__.clamp01)(hsl.l);
        return new TinyColor(hsl);
    };
    /**
     * Brighten the color a given amount, from 0 to 100.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.brighten = function (amount) {
        if (amount === void 0) { amount = 10; }
        var rgb = this.toRgb();
        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
        return new TinyColor(rgb);
    };
    /**
     * Darken the color a given amount, from 0 to 100.
     * Providing 100 will always return black.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.darken = function (amount) {
        if (amount === void 0) { amount = 10; }
        var hsl = this.toHsl();
        hsl.l -= amount / 100;
        hsl.l = (0,_util__WEBPACK_IMPORTED_MODULE_2__.clamp01)(hsl.l);
        return new TinyColor(hsl);
    };
    /**
     * Mix the color with pure white, from 0 to 100.
     * Providing 0 will do nothing, providing 100 will always return white.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.tint = function (amount) {
        if (amount === void 0) { amount = 10; }
        return this.mix('white', amount);
    };
    /**
     * Mix the color with pure black, from 0 to 100.
     * Providing 0 will do nothing, providing 100 will always return black.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.shade = function (amount) {
        if (amount === void 0) { amount = 10; }
        return this.mix('black', amount);
    };
    /**
     * Desaturate the color a given amount, from 0 to 100.
     * Providing 100 will is the same as calling greyscale
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.desaturate = function (amount) {
        if (amount === void 0) { amount = 10; }
        var hsl = this.toHsl();
        hsl.s -= amount / 100;
        hsl.s = (0,_util__WEBPACK_IMPORTED_MODULE_2__.clamp01)(hsl.s);
        return new TinyColor(hsl);
    };
    /**
     * Saturate the color a given amount, from 0 to 100.
     * @param amount - valid between 1-100
     */
    TinyColor.prototype.saturate = function (amount) {
        if (amount === void 0) { amount = 10; }
        var hsl = this.toHsl();
        hsl.s += amount / 100;
        hsl.s = (0,_util__WEBPACK_IMPORTED_MODULE_2__.clamp01)(hsl.s);
        return new TinyColor(hsl);
    };
    /**
     * Completely desaturates a color into greyscale.
     * Same as calling `desaturate(100)`
     */
    TinyColor.prototype.greyscale = function () {
        return this.desaturate(100);
    };
    /**
     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
     * Values outside of this range will be wrapped into this range.
     */
    TinyColor.prototype.spin = function (amount) {
        var hsl = this.toHsl();
        var hue = (hsl.h + amount) % 360;
        hsl.h = hue < 0 ? 360 + hue : hue;
        return new TinyColor(hsl);
    };
    /**
     * Mix the current color a given amount with another color, from 0 to 100.
     * 0 means no mixing (return current color).
     */
    TinyColor.prototype.mix = function (color, amount) {
        if (amount === void 0) { amount = 50; }
        var rgb1 = this.toRgb();
        var rgb2 = new TinyColor(color).toRgb();
        var p = amount / 100;
        var rgba = {
            r: (rgb2.r - rgb1.r) * p + rgb1.r,
            g: (rgb2.g - rgb1.g) * p + rgb1.g,
            b: (rgb2.b - rgb1.b) * p + rgb1.b,
            a: (rgb2.a - rgb1.a) * p + rgb1.a,
        };
        return new TinyColor(rgba);
    };
    TinyColor.prototype.analogous = function (results, slices) {
        if (results === void 0) { results = 6; }
        if (slices === void 0) { slices = 30; }
        var hsl = this.toHsl();
        var part = 360 / slices;
        var ret = [this];
        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {
            hsl.h = (hsl.h + part) % 360;
            ret.push(new TinyColor(hsl));
        }
        return ret;
    };
    /**
     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js
     */
    TinyColor.prototype.complement = function () {
        var hsl = this.toHsl();
        hsl.h = (hsl.h + 180) % 360;
        return new TinyColor(hsl);
    };
    TinyColor.prototype.monochromatic = function (results) {
        if (results === void 0) { results = 6; }
        var hsv = this.toHsv();
        var h = hsv.h;
        var s = hsv.s;
        var v = hsv.v;
        var res = [];
        var modification = 1 / results;
        while (results--) {
            res.push(new TinyColor({ h: h, s: s, v: v }));
            v = (v + modification) % 1;
        }
        return res;
    };
    TinyColor.prototype.splitcomplement = function () {
        var hsl = this.toHsl();
        var h = hsl.h;
        return [
            this,
            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),
            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),
        ];
    };
    /**
     * Compute how the color would appear on a background
     */
    TinyColor.prototype.onBackground = function (background) {
        var fg = this.toRgb();
        var bg = new TinyColor(background).toRgb();
        return new TinyColor({
            r: bg.r + (fg.r - bg.r) * fg.a,
            g: bg.g + (fg.g - bg.g) * fg.a,
            b: bg.b + (fg.b - bg.b) * fg.a,
        });
    };
    /**
     * Alias for `polyad(3)`
     */
    TinyColor.prototype.triad = function () {
        return this.polyad(3);
    };
    /**
     * Alias for `polyad(4)`
     */
    TinyColor.prototype.tetrad = function () {
        return this.polyad(4);
    };
    /**
     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)
     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...
     */
    TinyColor.prototype.polyad = function (n) {
        var hsl = this.toHsl();
        var h = hsl.h;
        var result = [this];
        var increment = 360 / n;
        for (var i = 1; i < n; i++) {
            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));
        }
        return result;
    };
    /**
     * compare color vs current color
     */
    TinyColor.prototype.equals = function (color) {
        return this.toRgbString() === new TinyColor(color).toRgbString();
    };
    return TinyColor;
}());

// kept for backwards compatability with v1
function tinycolor(color, opts) {
    if (color === void 0) { color = ''; }
    if (opts === void 0) { opts = {}; }
    return new TinyColor(color, opts);
}


/***/ }),

/***/ "./node_modules/@ctrl/tinycolor/dist/module/random.js":
/*!************************************************************!*\
  !*** ./node_modules/@ctrl/tinycolor/dist/module/random.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "random": () => (/* binding */ random),
/* harmony export */   "bounds": () => (/* binding */ bounds)
/* harmony export */ });
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/@ctrl/tinycolor/dist/module/index.js");
// randomColor by David Merfield under the CC0 license
// https://github.com/davidmerfield/randomColor/

function random(options) {
    if (options === void 0) { options = {}; }
    // Check if we need to generate multiple colors
    if (options.count !== undefined &&
        options.count !== null) {
        var totalColors = options.count;
        var colors = [];
        options.count = undefined;
        while (totalColors > colors.length) {
            // Since we're generating multiple colors,
            // incremement the seed. Otherwise we'd just
            // generate the same color each time...
            options.count = null;
            if (options.seed) {
                options.seed += 1;
            }
            colors.push(random(options));
        }
        options.count = totalColors;
        return colors;
    }
    // First we pick a hue (H)
    var h = pickHue(options.hue, options.seed);
    // Then use H to determine saturation (S)
    var s = pickSaturation(h, options);
    // Then use S and H to determine brightness (B).
    var v = pickBrightness(h, s, options);
    var res = { h: h, s: s, v: v };
    if (options.alpha !== undefined) {
        res.a = options.alpha;
    }
    // Then we return the HSB color in the desired format
    return new _index__WEBPACK_IMPORTED_MODULE_0__.TinyColor(res);
}
function pickHue(hue, seed) {
    var hueRange = getHueRange(hue);
    var res = randomWithin(hueRange, seed);
    // Instead of storing red as two seperate ranges,
    // we group them, using negative numbers
    if (res < 0) {
        res = 360 + res;
    }
    return res;
}
function pickSaturation(hue, options) {
    if (options.hue === 'monochrome') {
        return 0;
    }
    if (options.luminosity === 'random') {
        return randomWithin([0, 100], options.seed);
    }
    var saturationRange = getColorInfo(hue).saturationRange;
    var sMin = saturationRange[0];
    var sMax = saturationRange[1];
    switch (options.luminosity) {
        case 'bright':
            sMin = 55;
            break;
        case 'dark':
            sMin = sMax - 10;
            break;
        case 'light':
            sMax = 55;
            break;
        default:
            break;
    }
    return randomWithin([sMin, sMax], options.seed);
}
function pickBrightness(H, S, options) {
    var bMin = getMinimumBrightness(H, S);
    var bMax = 100;
    switch (options.luminosity) {
        case 'dark':
            bMax = bMin + 20;
            break;
        case 'light':
            bMin = (bMax + bMin) / 2;
            break;
        case 'random':
            bMin = 0;
            bMax = 100;
            break;
        default:
            break;
    }
    return randomWithin([bMin, bMax], options.seed);
}
function getMinimumBrightness(H, S) {
    var lowerBounds = getColorInfo(H).lowerBounds;
    for (var i = 0; i < lowerBounds.length - 1; i++) {
        var s1 = lowerBounds[i][0];
        var v1 = lowerBounds[i][1];
        var s2 = lowerBounds[i + 1][0];
        var v2 = lowerBounds[i + 1][1];
        if (S >= s1 && S <= s2) {
            var m = (v2 - v1) / (s2 - s1);
            var b = v1 - m * s1;
            return m * S + b;
        }
    }
    return 0;
}
function getHueRange(colorInput) {
    var num = parseInt(colorInput, 10);
    if (!Number.isNaN(num) && num < 360 && num > 0) {
        return [num, num];
    }
    if (typeof colorInput === 'string') {
        var namedColor = bounds.find(function (n) { return n.name === colorInput; });
        if (namedColor) {
            var color = defineColor(namedColor);
            if (color.hueRange) {
                return color.hueRange;
            }
        }
        var parsed = new _index__WEBPACK_IMPORTED_MODULE_0__.TinyColor(colorInput);
        if (parsed.isValid) {
            var hue = parsed.toHsv().h;
            return [hue, hue];
        }
    }
    return [0, 360];
}
function getColorInfo(hue) {
    // Maps red colors to make picking hue easier
    if (hue >= 334 && hue <= 360) {
        hue -= 360;
    }
    for (var _i = 0, bounds_1 = bounds; _i < bounds_1.length; _i++) {
        var bound = bounds_1[_i];
        var color = defineColor(bound);
        if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {
            return color;
        }
    }
    throw Error('Color not found');
}
function randomWithin(range, seed) {
    if (seed === undefined) {
        return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));
    }
    // Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/
    var max = range[1] || 1;
    var min = range[0] || 0;
    seed = (seed * 9301 + 49297) % 233280;
    var rnd = seed / 233280.0;
    return Math.floor(min + rnd * (max - min));
}
function defineColor(bound) {
    var sMin = bound.lowerBounds[0][0];
    var sMax = bound.lowerBounds[bound.lowerBounds.length - 1][0];
    var bMin = bound.lowerBounds[bound.lowerBounds.length - 1][1];
    var bMax = bound.lowerBounds[0][1];
    return {
        name: bound.name,
        hueRange: bound.hueRange,
        lowerBounds: bound.lowerBounds,
        saturationRange: [sMin, sMax],
        brightnessRange: [bMin, bMax],
    };
}
/**
 * @hidden
 */
var bounds = [
    {
        name: 'monochrome',
        hueRange: null,
        lowerBounds: [
            [0, 0],
            [100, 0],
        ],
    },
    {
        name: 'red',
        hueRange: [-26, 18],
        lowerBounds: [
            [20, 100],
            [30, 92],
            [40, 89],
            [50, 85],
            [60, 78],
            [70, 70],
            [80, 60],
            [90, 55],
            [100, 50],
        ],
    },
    {
        name: 'orange',
        hueRange: [19, 46],
        lowerBounds: [
            [20, 100],
            [30, 93],
            [40, 88],
            [50, 86],
            [60, 85],
            [70, 70],
            [100, 70],
        ],
    },
    {
        name: 'yellow',
        hueRange: [47, 62],
        lowerBounds: [
            [25, 100],
            [40, 94],
            [50, 89],
            [60, 86],
            [70, 84],
            [80, 82],
            [90, 80],
            [100, 75],
        ],
    },
    {
        name: 'green',
        hueRange: [63, 178],
        lowerBounds: [
            [30, 100],
            [40, 90],
            [50, 85],
            [60, 81],
            [70, 74],
            [80, 64],
            [90, 50],
            [100, 40],
        ],
    },
    {
        name: 'blue',
        hueRange: [179, 257],
        lowerBounds: [
            [20, 100],
            [30, 86],
            [40, 80],
            [50, 74],
            [60, 60],
            [70, 52],
            [80, 44],
            [90, 39],
            [100, 35],
        ],
    },
    {
        name: 'purple',
        hueRange: [258, 282],
        lowerBounds: [
            [20, 100],
            [30, 87],
            [40, 79],
            [50, 70],
            [60, 65],
            [70, 59],
            [80, 52],
            [90, 45],
            [100, 42],
        ],
    },
    {
        name: 'pink',
        hueRange: [283, 334],
        lowerBounds: [
            [20, 100],
            [30, 90],
            [40, 86],
            [60, 84],
            [80, 80],
            [90, 75],
            [100, 73],
        ],
    },
];


/***/ }),

/***/ "./node_modules/@ctrl/tinycolor/dist/module/readability.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ctrl/tinycolor/dist/module/readability.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "readability": () => (/* binding */ readability),
/* harmony export */   "isReadable": () => (/* binding */ isReadable),
/* harmony export */   "mostReadable": () => (/* binding */ mostReadable)
/* harmony export */ });
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/@ctrl/tinycolor/dist/module/index.js");

// Readability Functions
// ---------------------
// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)
/**
 * AKA `contrast`
 *
 * Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)
 */
function readability(color1, color2) {
    var c1 = new _index__WEBPACK_IMPORTED_MODULE_0__.TinyColor(color1);
    var c2 = new _index__WEBPACK_IMPORTED_MODULE_0__.TinyColor(color2);
    return ((Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) /
        (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05));
}
/**
 * Ensure that foreground and background color combinations meet WCAG2 guidelines.
 * The third argument is an object.
 *      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
 *      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
 * If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.
 *
 * Example
 * ```ts
 * new TinyColor().isReadable('#000', '#111') => false
 * new TinyColor().isReadable('#000', '#111', { level: 'AA', size: 'large' }) => false
 * ```
 */
function isReadable(color1, color2, wcag2) {
    var _a, _b;
    if (wcag2 === void 0) { wcag2 = { level: 'AA', size: 'small' }; }
    var readabilityLevel = readability(color1, color2);
    switch (((_a = wcag2.level) !== null && _a !== void 0 ? _a : 'AA') + ((_b = wcag2.size) !== null && _b !== void 0 ? _b : 'small')) {
        case 'AAsmall':
        case 'AAAlarge':
            return readabilityLevel >= 4.5;
        case 'AAlarge':
            return readabilityLevel >= 3;
        case 'AAAsmall':
            return readabilityLevel >= 7;
        default:
            return false;
    }
}
/**
 * Given a base color and a list of possible foreground or background
 * colors for that base, returns the most readable color.
 * Optionally returns Black or White if the most readable color is unreadable.
 *
 * @param baseColor - the base color.
 * @param colorList - array of colors to pick the most readable one from.
 * @param args - and object with extra arguments
 *
 * Example
 * ```ts
 * new TinyColor().mostReadable('#123', ['#124", "#125'], { includeFallbackColors: false }).toHexString(); // "#112255"
 * new TinyColor().mostReadable('#123', ['#124", "#125'],{ includeFallbackColors: true }).toHexString();  // "#ffffff"
 * new TinyColor().mostReadable('#a8015a', ["#faf3f3"], { includeFallbackColors:true, level: 'AAA', size: 'large' }).toHexString(); // "#faf3f3"
 * new TinyColor().mostReadable('#a8015a', ["#faf3f3"], { includeFallbackColors:true, level: 'AAA', size: 'small' }).toHexString(); // "#ffffff"
 * ```
 */
function mostReadable(baseColor, colorList, args) {
    if (args === void 0) { args = { includeFallbackColors: false, level: 'AA', size: 'small' }; }
    var bestColor = null;
    var bestScore = 0;
    var includeFallbackColors = args.includeFallbackColors, level = args.level, size = args.size;
    for (var _i = 0, colorList_1 = colorList; _i < colorList_1.length; _i++) {
        var color = colorList_1[_i];
        var score = readability(baseColor, color);
        if (score > bestScore) {
            bestScore = score;
            bestColor = new _index__WEBPACK_IMPORTED_MODULE_0__.TinyColor(color);
        }
    }
    if (isReadable(baseColor, bestColor, { level: level, size: size }) || !includeFallbackColors) {
        return bestColor;
    }
    args.includeFallbackColors = false;
    return mostReadable(baseColor, ['#fff', '#000'], args);
}


/***/ }),

/***/ "./node_modules/@ctrl/tinycolor/dist/module/util.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ctrl/tinycolor/dist/module/util.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bound01": () => (/* binding */ bound01),
/* harmony export */   "clamp01": () => (/* binding */ clamp01),
/* harmony export */   "isOnePointZero": () => (/* binding */ isOnePointZero),
/* harmony export */   "isPercentage": () => (/* binding */ isPercentage),
/* harmony export */   "boundAlpha": () => (/* binding */ boundAlpha),
/* harmony export */   "convertToPercentage": () => (/* binding */ convertToPercentage),
/* harmony export */   "pad2": () => (/* binding */ pad2)
/* harmony export */ });
/**
 * Take input from [0, n] and return it as [0, 1]
 * @hidden
 */
function bound01(n, max) {
    if (isOnePointZero(n)) {
        n = '100%';
    }
    var isPercent = isPercentage(n);
    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));
    // Automatically convert percentage into number
    if (isPercent) {
        n = parseInt(String(n * max), 10) / 100;
    }
    // Handle floating point rounding errors
    if (Math.abs(n - max) < 0.000001) {
        return 1;
    }
    // Convert into [0, 1] range if it isn't already
    if (max === 360) {
        // If n is a hue given in degrees,
        // wrap around out-of-range values into [0, 360] range
        // then convert into [0, 1].
        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));
    }
    else {
        // If n not a hue given in degrees
        // Convert into [0, 1] range if it isn't already.
        n = (n % max) / parseFloat(String(max));
    }
    return n;
}
/**
 * Force a number between 0 and 1
 * @hidden
 */
function clamp01(val) {
    return Math.min(1, Math.max(0, val));
}
/**
 * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
 * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
 * @hidden
 */
function isOnePointZero(n) {
    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;
}
/**
 * Check to see if string passed in is a percentage
 * @hidden
 */
function isPercentage(n) {
    return typeof n === 'string' && n.indexOf('%') !== -1;
}
/**
 * Return a valid alpha value [0,1] with all invalid values being set to 1
 * @hidden
 */
function boundAlpha(a) {
    a = parseFloat(a);
    if (isNaN(a) || a < 0 || a > 1) {
        a = 1;
    }
    return a;
}
/**
 * Replace a decimal with it's percentage value
 * @hidden
 */
function convertToPercentage(n) {
    if (n <= 1) {
        return Number(n) * 100 + "%";
    }
    return n;
}
/**
 * Force a hex value to have 2 characters
 * @hidden
 */
function pad2(c) {
    return c.length === 1 ? '0' + c : String(c);
}


/***/ }),

/***/ "./node_modules/@reach/alert/dist/reach-alert.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@reach/alert/dist/reach-alert.esm.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "Alert": () => (/* binding */ Alert)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var _reach_visually_hidden__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @reach/visually-hidden */ "./node_modules/@reach/visually-hidden/dist/reach-visually-hidden.esm.js");
/* harmony import */ var _reach_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @reach/utils */ "./node_modules/@reach/utils/dist/reach-utils.esm.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);






function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/*
 * Singleton state is fine because you don't server render
 * an alert (SRs don't read them on first load anyway)
 */

var keys = {
  polite: -1,
  assertive: -1
};
var elements = {
  polite: {},
  assertive: {}
};
var liveRegions = {
  polite: null,
  assertive: null
};
var renderTimer; ////////////////////////////////////////////////////////////////////////////////

/**
 * Alert
 *
 * Screen-reader-friendly alert messages. In many apps developers add "alert"
 * messages when network events or other things happen. Users with assistive
 * technologies may not know about the message unless you develop for it.
 *
 * @see Docs https://reach.tech/alert
 */

var Alert = /*#__PURE__*/(0,_reach_utils__WEBPACK_IMPORTED_MODULE_3__.forwardRefWithAs)(function Alert(_ref, forwardedRef) {
  var _ref$as = _ref.as,
      Comp = _ref$as === void 0 ? "div" : _ref$as,
      children = _ref.children,
      _ref$type = _ref.type,
      regionType = _ref$type === void 0 ? "polite" : _ref$type,
      props = _objectWithoutPropertiesLoose(_ref, ["as", "children", "type"]);

  var ownRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var ref = (0,_reach_utils__WEBPACK_IMPORTED_MODULE_3__.useForkedRef)(forwardedRef, ownRef);
  var child = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Comp, _extends({}, props, {
      ref: ref,
      "data-reach-alert": true
    }), children);
  }, // eslint-disable-next-line react-hooks/exhaustive-deps
  [children, props]);
  useMirrorEffects(regionType, child, ownRef);
  return child;
});
/**
 * @see Docs https://reach.tech/alert#alert-props
 */

if (true) {
  Alert.displayName = "Alert";
  Alert.propTypes = {
    children: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),
    type: /*#__PURE__*/prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf(["assertive", "polite"])
  };
} ////////////////////////////////////////////////////////////////////////////////


function createMirror(type, doc) {
  var key = ++keys[type];

  var mount = function mount(element) {
    if (liveRegions[type]) {
      elements[type][key] = element;
      renderAlerts();
    } else {
      var node = doc.createElement("div");
      node.setAttribute("data-reach-live-" + type, "true");
      liveRegions[type] = node;
      doc.body.appendChild(liveRegions[type]);
      mount(element);
    }
  };

  var update = function update(element) {
    elements[type][key] = element;
    renderAlerts();
  };

  var unmount = function unmount() {
    delete elements[type][key];
    renderAlerts();
  };

  return {
    mount: mount,
    update: update,
    unmount: unmount
  };
}

function renderAlerts() {
  if (renderTimer != null) {
    window.clearTimeout(renderTimer);
  }

  renderTimer = window.setTimeout(function () {
    Object.keys(elements).forEach(function (elementType) {
      var regionType = elementType;
      var container = liveRegions[regionType];

      if (container) {
        (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.render)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_reach_visually_hidden__WEBPACK_IMPORTED_MODULE_2__.VisuallyHidden, {
          as: "div"
        }, /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          // The status role is a type of live region and a container whose
          // content is advisory information for the user that is not
          // important enough to justify an alert, and is often presented as
          // a status bar. When the role is added to an element, the browser
          // will send out an accessible status event to assistive
          // technology products which can then notify the user about it.
          // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_status_role
          role: regionType === "assertive" ? "alert" : "status",
          "aria-live": regionType
        }, Object.keys(elements[regionType]).map(function (key) {
          return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(elements[regionType][key], {
            key: key,
            ref: null
          });
        }))), liveRegions[regionType]);
      }
    });
  }, 500);
}

function useMirrorEffects(regionType, element, ref) {
  var prevType = (0,_reach_utils__WEBPACK_IMPORTED_MODULE_3__.usePrevious)(regionType);
  var mirror = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var mounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    var ownerDocument = (0,_reach_utils__WEBPACK_IMPORTED_MODULE_3__.getOwnerDocument)(ref.current);

    if (!mounted.current) {
      mounted.current = true;
      mirror.current = createMirror(regionType, ownerDocument);
      mirror.current.mount(element);
    } else if (prevType !== regionType) {
      mirror.current && mirror.current.unmount();
      mirror.current = createMirror(regionType, ownerDocument);
      mirror.current.mount(element);
    } else {
      mirror.current && mirror.current.update(element);
    }
  }, [element, regionType, prevType, ref]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    return function () {
      mirror.current && mirror.current.unmount();
    };
  }, []);
} ////////////////////////////////////////////////////////////////////////////////

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Alert);



/***/ }),

/***/ "./node_modules/@reach/utils/dist/reach-utils.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@reach/utils/dist/reach-utils.esm.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assignRef": () => (/* binding */ assignRef),
/* harmony export */   "boolOrBoolString": () => (/* binding */ boolOrBoolString),
/* harmony export */   "canUseDOM": () => (/* binding */ canUseDOM),
/* harmony export */   "checkStyles": () => (/* binding */ checkStyles),
/* harmony export */   "cloneValidElement": () => (/* binding */ cloneValidElement),
/* harmony export */   "createNamedContext": () => (/* binding */ createNamedContext),
/* harmony export */   "forwardRefWithAs": () => (/* binding */ forwardRefWithAs),
/* harmony export */   "getDocumentDimensions": () => (/* binding */ getDocumentDimensions),
/* harmony export */   "getElementComputedStyle": () => (/* binding */ getElementComputedStyle),
/* harmony export */   "getOwnerDocument": () => (/* binding */ getOwnerDocument),
/* harmony export */   "getOwnerWindow": () => (/* binding */ getOwnerWindow),
/* harmony export */   "getScrollPosition": () => (/* binding */ getScrollPosition),
/* harmony export */   "getScrollbarOffset": () => (/* binding */ getScrollbarOffset),
/* harmony export */   "isBoolean": () => (/* binding */ isBoolean),
/* harmony export */   "isFunction": () => (/* binding */ isFunction),
/* harmony export */   "isNumber": () => (/* binding */ isNumber),
/* harmony export */   "isRightClick": () => (/* binding */ isRightClick),
/* harmony export */   "isString": () => (/* binding */ isString),
/* harmony export */   "makeId": () => (/* binding */ makeId),
/* harmony export */   "memoWithAs": () => (/* binding */ memoWithAs),
/* harmony export */   "noop": () => (/* binding */ noop),
/* harmony export */   "ponyfillGlobal": () => (/* binding */ ponyfillGlobal),
/* harmony export */   "stateToAttributeString": () => (/* binding */ stateToAttributeString),
/* harmony export */   "useCallbackProp": () => (/* binding */ useCallbackProp),
/* harmony export */   "useCheckStyles": () => (/* binding */ useCheckStyles),
/* harmony export */   "useConstant": () => (/* binding */ useConstant),
/* harmony export */   "useControlledState": () => (/* binding */ useControlledState),
/* harmony export */   "useControlledSwitchWarning": () => (/* binding */ useControlledSwitchWarning),
/* harmony export */   "useEventCallback": () => (/* binding */ useEventCallback),
/* harmony export */   "useEventListener": () => (/* binding */ useEventListener),
/* harmony export */   "useFocusChange": () => (/* binding */ useFocusChange),
/* harmony export */   "useForceUpdate": () => (/* binding */ useForceUpdate),
/* harmony export */   "useForkedRef": () => (/* binding */ useForkedRef),
/* harmony export */   "useIsomorphicLayoutEffect": () => (/* binding */ useIsomorphicLayoutEffect),
/* harmony export */   "useLazyRef": () => (/* binding */ useLazyRef),
/* harmony export */   "usePrevious": () => (/* binding */ usePrevious),
/* harmony export */   "useStableCallback": () => (/* binding */ useStableCallback),
/* harmony export */   "useStateLogger": () => (/* binding */ useStateLogger),
/* harmony export */   "useUpdateEffect": () => (/* binding */ useUpdateEffect),
/* harmony export */   "warning": () => (/* binding */ warning),
/* harmony export */   "wrapEvent": () => (/* binding */ wrapEvent)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! warning */ "./node_modules/warning/warning.js");
/* harmony import */ var warning__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(warning__WEBPACK_IMPORTED_MODULE_1__);




/* eslint-disable no-restricted-globals, eqeqeq  */

/**
 * React currently throws a warning when using useLayoutEffect on the server.
 * To get around it, we can conditionally useEffect on the server (no-op) and
 * useLayoutEffect in the browser. We occasionally need useLayoutEffect to
 * ensure we don't get a render flash for certain operations, but we may also
 * need affected components to render on the server. One example is when setting
 * a component's descendants to retrieve their index values.
 *
 * Important to note that using this hook as an escape hatch will break the
 * eslint dependency warnings unless you rename the import to `useLayoutEffect`.
 * Use sparingly only when the effect won't effect the rendered HTML to avoid
 * any server/client mismatch.
 *
 * If a useLayoutEffect is needed and the result would create a mismatch, it's
 * likely that the component in question shouldn't be rendered on the server at
 * all, so a better approach would be to lazily render those in a parent
 * component after client-side hydration.
 *
 * TODO: We are calling useLayoutEffect in a couple of places that will likely
 * cause some issues for SSR users, whether the warning shows or not. Audit and
 * fix these.
 *
 * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85
 * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js
 *
 * @param effect
 * @param deps
 */
var useIsomorphicLayoutEffect = /*#__PURE__*/canUseDOM() ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;
var checkedPkgs = {};
/**
 * Copy of Facebook's warning package.
 *
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical paths.
 * Removing the logging code for production environments will keep the same
 * logic and follow the same code paths.
 *
 * @see https://github.com/BerkeleyTrue/warning/blob/master/warning.js
 */

var warning = (warning__WEBPACK_IMPORTED_MODULE_1___default());
/**
 * When in dev mode, checks that styles for a given @reach package are loaded.
 *
 * @param packageName Name of the package to check.
 * @example checkStyles("dialog") will check for styles for @reach/dialog
 */

var checkStyles = noop;

if (true) {
  // In CJS files, process.env.NODE_ENV is stripped from our build, but we need
  // it to prevent style checks from clogging up user logs while testing.
  // This is a workaround until we can tweak the build a bit to accommodate.
  var _ref = typeof process !== "undefined" ? process : {
    env: {
      NODE_ENV: "development"
    }
  },
      env = _ref.env;

  checkStyles = function checkStyles(packageName) {
    // only check once per package
    if (checkedPkgs[packageName]) return;
    checkedPkgs[packageName] = true;

    if (env.NODE_ENV !== "test" && parseInt(window.getComputedStyle(document.body).getPropertyValue("--reach-" + packageName), 10) !== 1) {
      console.warn("@reach/" + packageName + " styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\n\n    import \"@reach/" + packageName + "/styles.css\";\n\n  Otherwise you'll need to include them some other way:\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"node_modules/@reach/" + packageName + "/styles.css\" />\n\n  For more information visit https://ui.reach.tech/styling.\n  ");
    }
  };
}
/**
 * Ponyfill for the global object in some environments.
 *
 * @link https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
 */

var ponyfillGlobal = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self :
/*#__PURE__*/
// eslint-disable-next-line no-new-func
Function("return this")();
/**
 * Passes or assigns an arbitrary value to a ref function or object.
 *
 * @param ref
 * @param value
 */

function assignRef(ref, value) {
  if (ref == null) return;

  if (isFunction(ref)) {
    ref(value);
  } else {
    try {
      ref.current = value;
    } catch (error) {
      throw new Error("Cannot assign value \"" + value + "\" to ref \"" + ref + "\"");
    }
  }
}
/**
 * Checks true|"true" vs false|"false"
 *
 * @param value
 */

function boolOrBoolString(value) {
  return value === "true" ? true : isBoolean(value) ? value : false;
}
function canUseDOM() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
/**
 * Type-safe clone element
 *
 * @param element
 * @param props
 * @param children
 */

function cloneValidElement(element, props) {
  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    children[_key - 2] = arguments[_key];
  }

  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(element) ? react__WEBPACK_IMPORTED_MODULE_0__.cloneElement.apply(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2))), [element, props].concat(children)) : element;
}
function createNamedContext(name, defaultValue) {
  var Ctx = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(defaultValue);
  Ctx.displayName = name;
  return Ctx;
}
/**
 * This is a hack for sure. The thing is, getting a component to intelligently
 * infer props based on a component or JSX string passed into an `as` prop is
 * kind of a huge pain. Getting it to work and satisfy the constraints of
 * `forwardRef` seems dang near impossible. To avoid needing to do this awkward
 * type song-and-dance every time we want to forward a ref into a component
 * that accepts an `as` prop, we abstract all of that mess to this function for
 * the time time being.
 */

function forwardRefWithAs(render) {
  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(render);
}
function memoWithAs(Component, propsAreEqual) {
  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(Component, propsAreEqual);
}
/**
 * Get the size of the working document minus the scrollbar offset.
 *
 * @param element
 */

function getDocumentDimensions(element) {
  var _ownerDocument$docume, _ownerDocument$docume2;

  var ownerDocument = getOwnerDocument(element);
  var ownerWindow = ownerDocument.defaultView || window;

  if (!ownerDocument) {
    return {
      width: 0,
      height: 0
    };
  }

  return {
    width: (_ownerDocument$docume = ownerDocument.documentElement.clientWidth) != null ? _ownerDocument$docume : ownerWindow.innerWidth,
    height: (_ownerDocument$docume2 = ownerDocument.documentElement.clientHeight) != null ? _ownerDocument$docume2 : ownerWindow.innerHeight
  };
}
/**
 * Get the scoll position of the global window object relative to a given node.
 *
 * @param element
 */

function getScrollPosition(element) {
  var ownerDocument = getOwnerDocument(element);
  var ownerWindow = ownerDocument.defaultView || window;

  if (!ownerDocument) {
    return {
      scrollX: 0,
      scrollY: 0
    };
  }

  return {
    scrollX: ownerWindow.scrollX,
    scrollY: ownerWindow.scrollY
  };
}
/**
 * Get a computed style value by property.
 *
 * @param element
 * @param styleProp
 */

function getElementComputedStyle(element, styleProp) {
  var ownerDocument = getOwnerDocument(element);
  var ownerWindow = (ownerDocument == null ? void 0 : ownerDocument.defaultView) || window;

  if (ownerWindow) {
    return ownerWindow.getComputedStyle(element, null).getPropertyValue(styleProp);
  }

  return null;
}
/**
 * Get an element's owner document. Useful when components are used in iframes
 * or other environments like dev tools.
 *
 * @param element
 */

function getOwnerDocument(element) {
  return canUseDOM() ? element ? element.ownerDocument : document : null;
}
/**
 * TODO: Remove in 1.0
 */

function getOwnerWindow(element) {
  var ownerDocument = getOwnerDocument(element);
  return ownerDocument ? ownerDocument.defaultView || window : null;
}
/**
 * Get the scrollbar offset distance.
 *
 * TODO: Remove in 1.0 (we used this in public examples)
 */

function getScrollbarOffset() {
  try {
    if (window.innerWidth > document.documentElement.clientWidth) {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  } catch (err) {}

  return 0;
}
/**
 * Checks whether or not a value is a boolean.
 *
 * @param value
 */

function isBoolean(value) {
  return typeof value === "boolean";
}
/**
 * Checks whether or not a value is a function.
 *
 * @param value
 */

function isFunction(value) {
  return !!(value && {}.toString.call(value) == "[object Function]");
}
/**
 * Checks whether or not a value is a number.
 *
 * @param value
 */

function isNumber(value) {
  return typeof value === "number" && !isNaN(value);
}
/**
 * Detects right clicks
 *
 * @param nativeEvent
 */

function isRightClick(nativeEvent) {
  return "which" in nativeEvent ? nativeEvent.which === 3 : "button" in nativeEvent ? nativeEvent.button === 2 : false;
}
/**
 * Checks whether or not a value is a string.
 *
 * @param value
 */

function isString(value) {
  return typeof value === "string";
}
/**
 * Joins strings to format IDs for compound components.
 *
 * @param args
 */

function makeId() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  return args.filter(function (val) {
    return val != null;
  }).join("--");
}
/**
 * No-op function.
 */

function noop() {}
/**
 * Convert our state strings for HTML data attributes.
 * No need for a fancy kebab-caser here, we know what our state strings are!
 *
 * @param state
 */

function stateToAttributeString(state) {
  return String(state).replace(/([\s_]+)/g, "-").toLowerCase();
}
/**
 * Check if a component is controlled or uncontrolled and return the correct
 * state value and setter accordingly. If the component state is controlled by
 * the app, the setter is a noop.
 *
 * @param controlledValue
 * @param defaultValue
 */

function useControlledState(controlledValue, defaultValue) {
  var controlledRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(controlledValue != null);

  var _React$useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultValue),
      valueState = _React$useState[0],
      setValue = _React$useState[1];

  var set = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (n) {
    if (!controlledRef.current) {
      setValue(n);
    }
  }, []);
  return [controlledRef.current ? controlledValue : valueState, set];
}
/**
 * Logs a warning in dev mode when a component switches from controlled to
 * uncontrolled, or vice versa
 *
 * A single prop should typically be used to determine whether or not a
 * component is controlled or not.
 *
 * @param controlledValue
 * @param controlledPropName
 * @param componentName
 */

var useControlledSwitchWarning = noop;

if (true) {
  useControlledSwitchWarning = function useControlledSwitchWarning(controlledValue, controlledPropName, componentName) {
    var controlledRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(controlledValue != null);
    var nameCache = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({
      componentName: componentName,
      controlledPropName: controlledPropName
    });
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
      nameCache.current = {
        componentName: componentName,
        controlledPropName: controlledPropName
      };
    }, [componentName, controlledPropName]);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
      var wasControlled = controlledRef.current;
      var _nameCache$current = nameCache.current,
          componentName = _nameCache$current.componentName,
          controlledPropName = _nameCache$current.controlledPropName;
      var isControlled = controlledValue != null;

      if (wasControlled !== isControlled) {
        console.error("A component is changing an " + (wasControlled ? "" : "un") + "controlled `" + controlledPropName + "` state of " + componentName + " to be " + (wasControlled ? "un" : "") + "controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled " + componentName + " element for the lifetime of the component.\nMore info: https://fb.me/react-controlled-components");
      }
    }, [controlledValue]);
  };
}
var useCheckStyles = noop;

if (true) {
  useCheckStyles = function useCheckStyles(pkg) {
    var name = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(pkg);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
      return void (name.current = pkg);
    }, [pkg]);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
      return checkStyles(name.current);
    }, []);
  };
}
/**
 * React hook for creating a value exactly once.
 * @see https://github.com/Andarist/use-constant
 */

function useConstant(fn) {
  var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();

  if (!ref.current) {
    ref.current = {
      v: fn()
    };
  }

  return ref.current.v;
}
/**
 * @param callback
 */

function useEventCallback(callback) {
  var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);
  useIsomorphicLayoutEffect(function () {
    ref.current = callback;
  });
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {
    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    return ref.current.apply(ref, [event].concat(args));
  }, []);
}
function useLazyRef(fn) {
  var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({
    __internalSet: true
  });

  if (ref.current && ref.current.__internalSet === true) {
    ref.current = fn();
  }

  return ref;
}
/**
 * TODO: Remove in 1.0
 * @alias useStableCallback
 * @param callback
 */

var useCallbackProp = useStableCallback;
/**
 * Adds a DOM event listener
 *
 * @param eventName
 * @param listener
 * @param element
 */

function useEventListener(eventName, listener, element) {
  if (element === void 0) {
    element = window;
  }

  var savedHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(listener);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    savedHandler.current = listener;
  }, [listener]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    var isSupported = element && element.addEventListener;

    if (!isSupported) {
      if (true) {
        console.warn("Event listener not supported on the element provided");
      }

      return;
    }

    function eventListener(event) {
      savedHandler.current(event);
    }

    element.addEventListener(eventName, eventListener);
    return function () {
      element.removeEventListener(eventName, eventListener);
    };
  }, [eventName, element]);
}
/**
 * Detect when focus changes in our document.
 *
 * @param handleChange
 * @param when
 * @param ownerDocument
 */

function useFocusChange(handleChange, when, ownerDocument) {
  if (handleChange === void 0) {
    handleChange = console.log;
  }

  if (when === void 0) {
    when = "focus";
  }

  if (ownerDocument === void 0) {
    ownerDocument = document;
  }

  var lastActiveElement = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(ownerDocument.activeElement);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    lastActiveElement.current = ownerDocument.activeElement;

    function onChange(event) {
      if (lastActiveElement.current !== ownerDocument.activeElement) {
        handleChange(ownerDocument.activeElement, lastActiveElement.current, event);
        lastActiveElement.current = ownerDocument.activeElement;
      }
    }

    ownerDocument.addEventListener(when, onChange, true);
    return function () {
      ownerDocument.removeEventListener(when, onChange);
    };
  }, [when, handleChange, ownerDocument]);
}
/**
 * Forces a re-render, similar to `forceUpdate` in class components.
 */

function useForceUpdate() {
  var _React$useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Object.create(null)),
      dispatch = _React$useState2[1];

  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    dispatch(Object.create(null));
  }, []);
}
/**
 * Passes or assigns a value to multiple refs (typically a DOM node). Useful for
 * dealing with components that need an explicit ref for DOM calculations but
 * also forwards refs assigned by an app.
 *
 * @param refs Refs to fork
 */

function useForkedRef() {
  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    refs[_key4] = arguments[_key4];
  }

  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    if (refs.every(function (ref) {
      return ref == null;
    })) {
      return null;
    }

    return function (node) {
      refs.forEach(function (ref) {
        assignRef(ref, node);
      });
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [].concat(refs));
}
/**
 * Returns the previous value of a reference after a component update.
 *
 * @param value
 */

function usePrevious(value) {
  var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    ref.current = value;
  }, [value]);
  return ref.current;
}
/**
 * Converts a callback to a ref to avoid triggering re-renders when passed as a
 * prop and exposed as a stable function to avoid executing effects when
 * passed as a dependency.
 */

function useStableCallback(callback) {
  var callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    callbackRef.current = callback;
  }); // eslint-disable-next-line react-hooks/exhaustive-deps

  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
    callbackRef.current && callbackRef.current.apply(callbackRef, arguments);
  }, []);
}
/**
 * Call an effect after a component update, skipping the initial mount.
 *
 * @param effect Effect to call
 * @param deps Effect dependency list
 */

function useUpdateEffect(effect, deps) {
  var mounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    if (mounted.current) {
      effect();
    } else {
      mounted.current = true;
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, deps);
}
/**
 * Just a lil state logger
 *
 * @param state
 * @param DEBUG
 */

var useStateLogger = noop;

if (true) {
  useStateLogger = function useStateLogger(state, DEBUG) {
    if (DEBUG === void 0) {
      DEBUG = false;
    }

    var debugRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(DEBUG);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
      debugRef.current = DEBUG;
    }, [DEBUG]);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
      if (debugRef.current) {
        console.group("State Updated");
        console.log("%c" + state, "font-weight: normal; font-size: 120%; font-style: italic;");
        console.groupEnd();
      }
    }, [state]);
  };
}
/**
 * Wraps a lib-defined event handler and a user-defined event handler, returning
 * a single handler that allows a user to prevent lib-defined handlers from
 * firing.
 *
 * @param theirHandler User-supplied event handler
 * @param ourHandler Library-supplied event handler
 */

function wrapEvent(theirHandler, ourHandler) {
  return function (event) {
    theirHandler && theirHandler(event);

    if (!event.defaultPrevented) {
      return ourHandler(event);
    }
  };
} // Export types




/***/ }),

/***/ "./node_modules/@reach/visually-hidden/dist/reach-visually-hidden.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@reach/visually-hidden/dist/reach-visually-hidden.esm.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "VisuallyHidden": () => (/* binding */ VisuallyHidden)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);



function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/**
 * VisuallyHidden
 *
 * Provides text for screen readers that is visually hidden.
 * It is the logical opposite of the `aria-hidden` attribute.
 */

var VisuallyHidden = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function VisuallyHidden(_ref, ref) {
  var _ref$as = _ref.as,
      Comp = _ref$as === void 0 ? "span" : _ref$as,
      _ref$style = _ref.style,
      style = _ref$style === void 0 ? {} : _ref$style,
      props = _objectWithoutPropertiesLoose(_ref, ["as", "style"]);

  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Comp, _extends({
    ref: ref,
    style: _extends({
      border: 0,
      clip: "rect(0 0 0 0)",
      height: "1px",
      margin: "-1px",
      overflow: "hidden",
      padding: 0,
      position: "absolute",
      width: "1px",
      // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
      whiteSpace: "nowrap",
      wordWrap: "normal"
    }, style)
  }, props));
});
/**
 * @see Docs https://reach.tech/visually-hidden#visuallyhidden-props
 */

if (true) {
  VisuallyHidden.displayName = "VisuallyHidden";
  VisuallyHidden.propTypes = {
    as: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().any),
    children: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().node)
  };
} ////////////////////////////////////////////////////////////////////////////////

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (VisuallyHidden);



/***/ }),

/***/ "./node_modules/aria-hidden/dist/es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/aria-hidden/dist/es2015/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hideOthers": () => (/* binding */ hideOthers)
/* harmony export */ });
var getDefaultParent = function (originalTarget) {
    if (typeof document === 'undefined') {
        return null;
    }
    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
    return sampleTarget.ownerDocument.body;
};
var counterMap = new WeakMap();
var uncontrolledNodes = new WeakMap();
var markerMap = {};
var lockCount = 0;
var hideOthers = function (originalTarget, parentNode, markerName) {
    if (parentNode === void 0) { parentNode = getDefaultParent(originalTarget); }
    if (markerName === void 0) { markerName = "data-aria-hidden"; }
    var targets = Array.isArray(originalTarget) ? originalTarget : [originalTarget];
    if (!markerMap[markerName]) {
        markerMap[markerName] = new WeakMap();
    }
    var markerCounter = markerMap[markerName];
    var hiddenNodes = [];
    var elementsToKeep = new Set();
    var keep = (function (el) {
        if (!el || elementsToKeep.has(el)) {
            return;
        }
        elementsToKeep.add(el);
        keep(el.parentNode);
    });
    targets.forEach(keep);
    var deep = function (parent) {
        if (!parent || targets.indexOf(parent) >= 0) {
            return;
        }
        Array.prototype.forEach.call(parent.children, function (node) {
            if (elementsToKeep.has(node)) {
                deep(node);
            }
            else {
                var attr = node.getAttribute('aria-hidden');
                var alreadyHidden = attr !== null && attr !== 'false';
                var counterValue = (counterMap.get(node) || 0) + 1;
                var markerValue = (markerCounter.get(node) || 0) + 1;
                counterMap.set(node, counterValue);
                markerCounter.set(node, markerValue);
                hiddenNodes.push(node);
                if (counterValue === 1 && alreadyHidden) {
                    uncontrolledNodes.set(node, true);
                }
                if (markerValue === 1) {
                    node.setAttribute(markerName, 'true');
                }
                if (!alreadyHidden) {
                    node.setAttribute('aria-hidden', 'true');
                }
            }
        });
    };
    deep(parentNode);
    elementsToKeep.clear();
    lockCount++;
    return function () {
        hiddenNodes.forEach(function (node) {
            var counterValue = counterMap.get(node) - 1;
            var markerValue = markerCounter.get(node) - 1;
            counterMap.set(node, counterValue);
            markerCounter.set(node, markerValue);
            if (!counterValue) {
                if (!uncontrolledNodes.has(node)) {
                    node.removeAttribute('aria-hidden');
                }
                uncontrolledNodes.delete(node);
            }
            if (!markerValue) {
                node.removeAttribute(markerName);
            }
        });
        lockCount--;
        if (!lockCount) {
            counterMap = new WeakMap();
            counterMap = new WeakMap();
            uncontrolledNodes = new WeakMap();
            markerMap = {};
        }
    };
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/constants.js":
/*!**********************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/constants.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FOCUS_GROUP": () => (/* binding */ FOCUS_GROUP),
/* harmony export */   "FOCUS_DISABLED": () => (/* binding */ FOCUS_DISABLED),
/* harmony export */   "FOCUS_ALLOW": () => (/* binding */ FOCUS_ALLOW),
/* harmony export */   "FOCUS_AUTO": () => (/* binding */ FOCUS_AUTO)
/* harmony export */ });
var FOCUS_GROUP = 'data-focus-lock';
var FOCUS_DISABLED = 'data-focus-lock-disabled';
var FOCUS_ALLOW = 'data-no-focus-lock';
var FOCUS_AUTO = 'data-autofocus-inside';


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/focusInside.js":
/*!************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/focusInside.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "focusInside": () => (/* binding */ focusInside)
/* harmony export */ });
/* harmony import */ var _utils_all_affected__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/all-affected */ "./node_modules/focus-lock/dist/es2015/utils/all-affected.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/array */ "./node_modules/focus-lock/dist/es2015/utils/array.js");


var focusInFrame = function (frame) { return frame === document.activeElement; };
var focusInsideIframe = function (topNode) {
    return Boolean((0,_utils_array__WEBPACK_IMPORTED_MODULE_0__.toArray)(topNode.querySelectorAll('iframe')).some(function (node) { return focusInFrame(node); }));
};
var focusInside = function (topNode) {
    var activeElement = document && document.activeElement;
    if (!activeElement || (activeElement.dataset && activeElement.dataset.focusGuard)) {
        return false;
    }
    return (0,_utils_all_affected__WEBPACK_IMPORTED_MODULE_1__.getAllAffectedNodes)(topNode).reduce(function (result, node) { return result || node.contains(activeElement) || focusInsideIframe(node); }, false);
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/focusIsHidden.js":
/*!**************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/focusIsHidden.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "focusIsHidden": () => (/* binding */ focusIsHidden)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ "./node_modules/focus-lock/dist/es2015/constants.js");
/* harmony import */ var _utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/array */ "./node_modules/focus-lock/dist/es2015/utils/array.js");


var focusIsHidden = function () {
    return document &&
        (0,_utils_array__WEBPACK_IMPORTED_MODULE_0__.toArray)(document.querySelectorAll("[" + _constants__WEBPACK_IMPORTED_MODULE_1__.FOCUS_ALLOW + "]")).some(function (node) { return node.contains(document.activeElement); });
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/focusMerge.js":
/*!***********************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/focusMerge.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getFocusMerge": () => (/* binding */ getFocusMerge)
/* harmony export */ });
/* harmony import */ var _solver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./solver */ "./node_modules/focus-lock/dist/es2015/solver.js");
/* harmony import */ var _utils_all_affected__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/all-affected */ "./node_modules/focus-lock/dist/es2015/utils/all-affected.js");
/* harmony import */ var _utils_DOMutils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/DOMutils */ "./node_modules/focus-lock/dist/es2015/utils/DOMutils.js");
/* harmony import */ var _utils_firstFocus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/firstFocus */ "./node_modules/focus-lock/dist/es2015/utils/firstFocus.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/is */ "./node_modules/focus-lock/dist/es2015/utils/is.js");
/* harmony import */ var _utils_parenting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/parenting */ "./node_modules/focus-lock/dist/es2015/utils/parenting.js");






var findAutoFocused = function (autoFocusables) { return function (node) {
    return node.autofocus || (node.dataset && !!node.dataset.autofocus) || autoFocusables.indexOf(node) >= 0;
}; };
var reorderNodes = function (srcNodes, dstNodes) {
    var remap = new Map();
    dstNodes.forEach(function (entity) { return remap.set(entity.node, entity); });
    return srcNodes.map(function (node) { return remap.get(node); }).filter(_utils_is__WEBPACK_IMPORTED_MODULE_0__.isDefined);
};
var getFocusMerge = function (topNode, lastNode) {
    var activeElement = (document && document.activeElement);
    var entries = (0,_utils_all_affected__WEBPACK_IMPORTED_MODULE_1__.getAllAffectedNodes)(topNode).filter(_utils_is__WEBPACK_IMPORTED_MODULE_0__.isNotAGuard);
    var commonParent = (0,_utils_parenting__WEBPACK_IMPORTED_MODULE_2__.getTopCommonParent)(activeElement || topNode, topNode, entries);
    var visibilityCache = new Map();
    var anyFocusable = (0,_utils_DOMutils__WEBPACK_IMPORTED_MODULE_3__.getAllTabbableNodes)(entries, visibilityCache);
    var innerElements = (0,_utils_DOMutils__WEBPACK_IMPORTED_MODULE_3__.getTabbableNodes)(entries, visibilityCache).filter(function (_a) {
        var node = _a.node;
        return (0,_utils_is__WEBPACK_IMPORTED_MODULE_0__.isNotAGuard)(node);
    });
    if (!innerElements[0]) {
        innerElements = anyFocusable;
        if (!innerElements[0]) {
            return undefined;
        }
    }
    var outerNodes = (0,_utils_DOMutils__WEBPACK_IMPORTED_MODULE_3__.getAllTabbableNodes)([commonParent], visibilityCache).map(function (_a) {
        var node = _a.node;
        return node;
    });
    var orderedInnerElements = reorderNodes(outerNodes, innerElements);
    var innerNodes = orderedInnerElements.map(function (_a) {
        var node = _a.node;
        return node;
    });
    var newId = (0,_solver__WEBPACK_IMPORTED_MODULE_4__.newFocus)(innerNodes, outerNodes, activeElement, lastNode);
    if (newId === _solver__WEBPACK_IMPORTED_MODULE_4__.NEW_FOCUS) {
        var autoFocusable = anyFocusable
            .map(function (_a) {
            var node = _a.node;
            return node;
        })
            .filter(findAutoFocused((0,_utils_parenting__WEBPACK_IMPORTED_MODULE_2__.allParentAutofocusables)(entries, visibilityCache)));
        return {
            node: autoFocusable && autoFocusable.length ? (0,_utils_firstFocus__WEBPACK_IMPORTED_MODULE_5__.pickFirstFocus)(autoFocusable) : (0,_utils_firstFocus__WEBPACK_IMPORTED_MODULE_5__.pickFirstFocus)(innerNodes),
        };
    }
    if (newId === undefined) {
        return newId;
    }
    return orderedInnerElements[newId];
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/focusables.js":
/*!***********************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/focusables.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getFocusabledIn": () => (/* binding */ getFocusabledIn)
/* harmony export */ });
/* harmony import */ var _utils_all_affected__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/all-affected */ "./node_modules/focus-lock/dist/es2015/utils/all-affected.js");
/* harmony import */ var _utils_DOMutils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/DOMutils */ "./node_modules/focus-lock/dist/es2015/utils/DOMutils.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/is */ "./node_modules/focus-lock/dist/es2015/utils/is.js");
/* harmony import */ var _utils_parenting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/parenting */ "./node_modules/focus-lock/dist/es2015/utils/parenting.js");




var getFocusabledIn = function (topNode) {
    var entries = (0,_utils_all_affected__WEBPACK_IMPORTED_MODULE_0__.getAllAffectedNodes)(topNode).filter(_utils_is__WEBPACK_IMPORTED_MODULE_1__.isNotAGuard);
    var commonParent = (0,_utils_parenting__WEBPACK_IMPORTED_MODULE_2__.getTopCommonParent)(topNode, topNode, entries);
    var visibilityCache = new Map();
    var outerNodes = (0,_utils_DOMutils__WEBPACK_IMPORTED_MODULE_3__.getTabbableNodes)([commonParent], visibilityCache, true);
    var innerElements = (0,_utils_DOMutils__WEBPACK_IMPORTED_MODULE_3__.getTabbableNodes)(entries, visibilityCache)
        .filter(function (_a) {
        var node = _a.node;
        return (0,_utils_is__WEBPACK_IMPORTED_MODULE_1__.isNotAGuard)(node);
    })
        .map(function (_a) {
        var node = _a.node;
        return node;
    });
    return outerNodes.map(function (_a) {
        var node = _a.node, index = _a.index;
        return ({
            node: node,
            index: index,
            lockItem: innerElements.indexOf(node) >= 0,
            guard: (0,_utils_is__WEBPACK_IMPORTED_MODULE_1__.isGuard)(node),
        });
    });
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "tabHook": () => (/* reexport safe */ _tabHook__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "focusInside": () => (/* reexport safe */ _focusInside__WEBPACK_IMPORTED_MODULE_1__.focusInside),
/* harmony export */   "focusIsHidden": () => (/* reexport safe */ _focusIsHidden__WEBPACK_IMPORTED_MODULE_2__.focusIsHidden),
/* harmony export */   "focusMerge": () => (/* reexport safe */ _focusMerge__WEBPACK_IMPORTED_MODULE_3__.getFocusMerge),
/* harmony export */   "getFocusabledIn": () => (/* reexport safe */ _focusables__WEBPACK_IMPORTED_MODULE_4__.getFocusabledIn),
/* harmony export */   "constants": () => (/* reexport module object */ _constants__WEBPACK_IMPORTED_MODULE_5__),
/* harmony export */   "getAllAffectedNodes": () => (/* reexport safe */ _utils_all_affected__WEBPACK_IMPORTED_MODULE_6__.getAllAffectedNodes),
/* harmony export */   "focusNextElement": () => (/* reexport safe */ _sibling__WEBPACK_IMPORTED_MODULE_7__.focusNextElement),
/* harmony export */   "focusPrevElement": () => (/* reexport safe */ _sibling__WEBPACK_IMPORTED_MODULE_7__.focusPrevElement),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ "./node_modules/focus-lock/dist/es2015/constants.js");
/* harmony import */ var _focusables__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./focusables */ "./node_modules/focus-lock/dist/es2015/focusables.js");
/* harmony import */ var _focusInside__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./focusInside */ "./node_modules/focus-lock/dist/es2015/focusInside.js");
/* harmony import */ var _focusIsHidden__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusIsHidden */ "./node_modules/focus-lock/dist/es2015/focusIsHidden.js");
/* harmony import */ var _focusMerge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./focusMerge */ "./node_modules/focus-lock/dist/es2015/focusMerge.js");
/* harmony import */ var _setFocus__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./setFocus */ "./node_modules/focus-lock/dist/es2015/setFocus.js");
/* harmony import */ var _sibling__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sibling */ "./node_modules/focus-lock/dist/es2015/sibling.js");
/* harmony import */ var _tabHook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabHook */ "./node_modules/focus-lock/dist/es2015/tabHook.js");
/* harmony import */ var _utils_all_affected__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/all-affected */ "./node_modules/focus-lock/dist/es2015/utils/all-affected.js");










/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_setFocus__WEBPACK_IMPORTED_MODULE_8__.setFocus);


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/setFocus.js":
/*!*********************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/setFocus.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "focusOn": () => (/* binding */ focusOn),
/* harmony export */   "setFocus": () => (/* binding */ setFocus)
/* harmony export */ });
/* harmony import */ var _focusMerge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./focusMerge */ "./node_modules/focus-lock/dist/es2015/focusMerge.js");

var focusOn = function (target) {
    target.focus();
    if ('contentWindow' in target && target.contentWindow) {
        target.contentWindow.focus();
    }
};
var guardCount = 0;
var lockDisabled = false;
var setFocus = function (topNode, lastNode) {
    var focusable = (0,_focusMerge__WEBPACK_IMPORTED_MODULE_0__.getFocusMerge)(topNode, lastNode);
    if (lockDisabled) {
        return;
    }
    if (focusable) {
        if (guardCount > 2) {
            console.error('FocusLock: focus-fighting detected. Only one focus management system could be active. ' +
                'See https://github.com/theKashey/focus-lock/#focus-fighting');
            lockDisabled = true;
            setTimeout(function () {
                lockDisabled = false;
            }, 1);
            return;
        }
        guardCount++;
        focusOn(focusable.node);
        guardCount--;
    }
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/sibling.js":
/*!********************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/sibling.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "focusNextElement": () => (/* binding */ focusNextElement),
/* harmony export */   "focusPrevElement": () => (/* binding */ focusPrevElement)
/* harmony export */ });
/* harmony import */ var _utils_DOMutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/DOMutils */ "./node_modules/focus-lock/dist/es2015/utils/DOMutils.js");

var getRelativeFocusable = function (element, scope) {
    if (!element || !scope || !scope.contains(element)) {
        return {};
    }
    var focusables = (0,_utils_DOMutils__WEBPACK_IMPORTED_MODULE_0__.getTabbableNodes)([scope], new Map());
    var current = focusables.findIndex(function (_a) {
        var node = _a.node;
        return node === element;
    });
    if (current === -1) {
        return {};
    }
    return {
        prev: focusables[current - 1],
        next: focusables[current + 1],
        first: focusables[0],
        last: focusables[focusables.length - 1],
    };
};
var defaultOptions = function (options) {
    return Object.assign({
        scope: document.body,
        cycle: true,
    }, options);
};
var focusNextElement = function (baseElement, options) {
    if (options === void 0) { options = {}; }
    var _a = defaultOptions(options), scope = _a.scope, cycle = _a.cycle;
    var _b = getRelativeFocusable(baseElement, scope), next = _b.next, first = _b.first;
    var newTarget = next || (cycle && first);
    if (newTarget) {
        newTarget.node.focus(options.focusOptions);
    }
};
var focusPrevElement = function (baseElement, options) {
    if (options === void 0) { options = {}; }
    var _a = defaultOptions(options), scope = _a.scope, cycle = _a.cycle;
    var _b = getRelativeFocusable(baseElement, scope), prev = _b.prev, last = _b.last;
    var newTarget = prev || (cycle && last);
    if (newTarget) {
        newTarget.node.focus(options.focusOptions);
    }
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/solver.js":
/*!*******************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/solver.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NEW_FOCUS": () => (/* binding */ NEW_FOCUS),
/* harmony export */   "newFocus": () => (/* binding */ newFocus)
/* harmony export */ });
/* harmony import */ var _utils_correctFocus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/correctFocus */ "./node_modules/focus-lock/dist/es2015/utils/correctFocus.js");
/* harmony import */ var _utils_firstFocus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/firstFocus */ "./node_modules/focus-lock/dist/es2015/utils/firstFocus.js");
/* harmony import */ var _utils_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/is */ "./node_modules/focus-lock/dist/es2015/utils/is.js");



var NEW_FOCUS = 'NEW_FOCUS';
var newFocus = function (innerNodes, outerNodes, activeElement, lastNode) {
    var cnt = innerNodes.length;
    var firstFocus = innerNodes[0];
    var lastFocus = innerNodes[cnt - 1];
    var isOnGuard = (0,_utils_is__WEBPACK_IMPORTED_MODULE_0__.isGuard)(activeElement);
    if (innerNodes.indexOf(activeElement) >= 0) {
        return undefined;
    }
    var activeIndex = outerNodes.indexOf(activeElement);
    var lastIndex = lastNode ? outerNodes.indexOf(lastNode) : activeIndex;
    var lastNodeInside = lastNode ? innerNodes.indexOf(lastNode) : -1;
    var indexDiff = activeIndex - lastIndex;
    var firstNodeIndex = outerNodes.indexOf(firstFocus);
    var lastNodeIndex = outerNodes.indexOf(lastFocus);
    var correctedNodes = (0,_utils_correctFocus__WEBPACK_IMPORTED_MODULE_1__.correctNodes)(outerNodes);
    var correctedIndexDiff = correctedNodes.indexOf(activeElement) - (lastNode ? correctedNodes.indexOf(lastNode) : activeIndex);
    var returnFirstNode = (0,_utils_firstFocus__WEBPACK_IMPORTED_MODULE_2__.pickFocusable)(innerNodes, 0);
    var returnLastNode = (0,_utils_firstFocus__WEBPACK_IMPORTED_MODULE_2__.pickFocusable)(innerNodes, cnt - 1);
    if (activeIndex === -1 || lastNodeInside === -1) {
        return NEW_FOCUS;
    }
    if (!indexDiff && lastNodeInside >= 0) {
        return lastNodeInside;
    }
    if (activeIndex <= firstNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {
        return returnLastNode;
    }
    if (activeIndex >= lastNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {
        return returnFirstNode;
    }
    if (indexDiff && Math.abs(correctedIndexDiff) > 1) {
        return lastNodeInside;
    }
    if (activeIndex <= firstNodeIndex) {
        return returnLastNode;
    }
    if (activeIndex > lastNodeIndex) {
        return returnFirstNode;
    }
    if (indexDiff) {
        if (Math.abs(indexDiff) > 1) {
            return lastNodeInside;
        }
        return (cnt + lastNodeInside + indexDiff) % cnt;
    }
    return undefined;
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/tabHook.js":
/*!********************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/tabHook.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    attach: function () { },
    detach: function () { },
});


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/utils/DOMutils.js":
/*!***************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/utils/DOMutils.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "filterFocusable": () => (/* binding */ filterFocusable),
/* harmony export */   "getTabbableNodes": () => (/* binding */ getTabbableNodes),
/* harmony export */   "getAllTabbableNodes": () => (/* binding */ getAllTabbableNodes),
/* harmony export */   "parentAutofocusables": () => (/* binding */ parentAutofocusables)
/* harmony export */ });
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/focus-lock/dist/es2015/utils/array.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is */ "./node_modules/focus-lock/dist/es2015/utils/is.js");
/* harmony import */ var _tabOrder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tabOrder */ "./node_modules/focus-lock/dist/es2015/utils/tabOrder.js");
/* harmony import */ var _tabUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tabUtils */ "./node_modules/focus-lock/dist/es2015/utils/tabUtils.js");




var filterFocusable = function (nodes, visibilityCache) {
    return (0,_array__WEBPACK_IMPORTED_MODULE_0__.toArray)(nodes)
        .filter(function (node) { return (0,_is__WEBPACK_IMPORTED_MODULE_1__.isVisibleCached)(visibilityCache, node); })
        .filter(function (node) { return (0,_is__WEBPACK_IMPORTED_MODULE_1__.notHiddenInput)(node); });
};
var getTabbableNodes = function (topNodes, visibilityCache, withGuards) {
    return (0,_tabOrder__WEBPACK_IMPORTED_MODULE_2__.orderByTabIndex)(filterFocusable((0,_tabUtils__WEBPACK_IMPORTED_MODULE_3__.getFocusables)(topNodes, withGuards), visibilityCache), true, withGuards);
};
var getAllTabbableNodes = function (topNodes, visibilityCache) {
    return (0,_tabOrder__WEBPACK_IMPORTED_MODULE_2__.orderByTabIndex)(filterFocusable((0,_tabUtils__WEBPACK_IMPORTED_MODULE_3__.getFocusables)(topNodes), visibilityCache), false);
};
var parentAutofocusables = function (topNode, visibilityCache) {
    return filterFocusable((0,_tabUtils__WEBPACK_IMPORTED_MODULE_3__.getParentAutofocusables)(topNode), visibilityCache);
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/utils/all-affected.js":
/*!*******************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/utils/all-affected.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getAllAffectedNodes": () => (/* binding */ getAllAffectedNodes)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ "./node_modules/focus-lock/dist/es2015/constants.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/focus-lock/dist/es2015/utils/array.js");


var filterNested = function (nodes) {
    var contained = new Set();
    var l = nodes.length;
    for (var i = 0; i < l; i += 1) {
        for (var j = i + 1; j < l; j += 1) {
            var position = nodes[i].compareDocumentPosition(nodes[j]);
            if ((position & Node.DOCUMENT_POSITION_CONTAINED_BY) > 0) {
                contained.add(j);
            }
            if ((position & Node.DOCUMENT_POSITION_CONTAINS) > 0) {
                contained.add(i);
            }
        }
    }
    return nodes.filter(function (_, index) { return !contained.has(index); });
};
var getTopParent = function (node) {
    return node.parentNode ? getTopParent(node.parentNode) : node;
};
var getAllAffectedNodes = function (node) {
    var nodes = (0,_array__WEBPACK_IMPORTED_MODULE_0__.asArray)(node);
    return nodes.filter(Boolean).reduce(function (acc, currentNode) {
        var group = currentNode.getAttribute(_constants__WEBPACK_IMPORTED_MODULE_1__.FOCUS_GROUP);
        acc.push.apply(acc, (group
            ? filterNested((0,_array__WEBPACK_IMPORTED_MODULE_0__.toArray)(getTopParent(currentNode).querySelectorAll("[" + _constants__WEBPACK_IMPORTED_MODULE_1__.FOCUS_GROUP + "=\"" + group + "\"]:not([" + _constants__WEBPACK_IMPORTED_MODULE_1__.FOCUS_DISABLED + "=\"disabled\"])")))
            : [currentNode]));
        return acc;
    }, []);
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/utils/array.js":
/*!************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/utils/array.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toArray": () => (/* binding */ toArray),
/* harmony export */   "asArray": () => (/* binding */ asArray)
/* harmony export */ });
var toArray = function (a) {
    var ret = Array(a.length);
    for (var i = 0; i < a.length; ++i) {
        ret[i] = a[i];
    }
    return ret;
};
var asArray = function (a) { return (Array.isArray(a) ? a : [a]); };


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/utils/correctFocus.js":
/*!*******************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/utils/correctFocus.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "correctNode": () => (/* binding */ correctNode),
/* harmony export */   "correctNodes": () => (/* binding */ correctNodes)
/* harmony export */ });
var isRadio = function (node) { return node.tagName === 'INPUT' && node.type === 'radio'; };
var findSelectedRadio = function (node, nodes) {
    return nodes
        .filter(isRadio)
        .filter(function (el) { return el.name === node.name; })
        .filter(function (el) { return el.checked; })[0] || node;
};
var correctNode = function (node, nodes) {
    if (isRadio(node) && node.name) {
        return findSelectedRadio(node, nodes);
    }
    return node;
};
var correctNodes = function (nodes) {
    var resultSet = new Set();
    nodes.forEach(function (node) { return resultSet.add(correctNode(node, nodes)); });
    return nodes.filter(function (node) { return resultSet.has(node); });
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/utils/firstFocus.js":
/*!*****************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/utils/firstFocus.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pickFirstFocus": () => (/* binding */ pickFirstFocus),
/* harmony export */   "pickFocusable": () => (/* binding */ pickFocusable)
/* harmony export */ });
/* harmony import */ var _correctFocus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./correctFocus */ "./node_modules/focus-lock/dist/es2015/utils/correctFocus.js");

var pickFirstFocus = function (nodes) {
    if (nodes[0] && nodes.length > 1) {
        return (0,_correctFocus__WEBPACK_IMPORTED_MODULE_0__.correctNode)(nodes[0], nodes);
    }
    return nodes[0];
};
var pickFocusable = function (nodes, index) {
    if (nodes.length > 1) {
        return nodes.indexOf((0,_correctFocus__WEBPACK_IMPORTED_MODULE_0__.correctNode)(nodes[index], nodes));
    }
    return index;
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/utils/is.js":
/*!*********************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/utils/is.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isVisibleCached": () => (/* binding */ isVisibleCached),
/* harmony export */   "notHiddenInput": () => (/* binding */ notHiddenInput),
/* harmony export */   "isGuard": () => (/* binding */ isGuard),
/* harmony export */   "isNotAGuard": () => (/* binding */ isNotAGuard),
/* harmony export */   "isDefined": () => (/* binding */ isDefined)
/* harmony export */ });
var isElementHidden = function (node) {
    if (node.nodeType !== Node.ELEMENT_NODE) {
        return false;
    }
    var computedStyle = window.getComputedStyle(node, null);
    if (!computedStyle || !computedStyle.getPropertyValue) {
        return false;
    }
    return (computedStyle.getPropertyValue('display') === 'none' || computedStyle.getPropertyValue('visibility') === 'hidden');
};
var isVisibleUncached = function (node, checkParent) {
    return !node ||
        node === document ||
        (node && node.nodeType === Node.DOCUMENT_NODE) ||
        (!isElementHidden(node) &&
            checkParent(node.parentNode && node.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                ? node.parentNode.host
                : node.parentNode));
};
var isVisibleCached = function (visibilityCache, node) {
    var cached = visibilityCache.get(node);
    if (cached !== undefined) {
        return cached;
    }
    var result = isVisibleUncached(node, isVisibleCached.bind(undefined, visibilityCache));
    visibilityCache.set(node, result);
    return result;
};
var notHiddenInput = function (node) {
    return !((node.tagName === 'INPUT' || node.tagName === 'BUTTON') && (node.type === 'hidden' || node.disabled));
};
var isGuard = function (node) { return Boolean(node && node.dataset && node.dataset.focusGuard); };
var isNotAGuard = function (node) { return !isGuard(node); };
var isDefined = function (x) { return Boolean(x); };


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/utils/parenting.js":
/*!****************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/utils/parenting.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getCommonParent": () => (/* binding */ getCommonParent),
/* harmony export */   "getTopCommonParent": () => (/* binding */ getTopCommonParent),
/* harmony export */   "allParentAutofocusables": () => (/* binding */ allParentAutofocusables)
/* harmony export */ });
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/focus-lock/dist/es2015/utils/array.js");
/* harmony import */ var _DOMutils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DOMutils */ "./node_modules/focus-lock/dist/es2015/utils/DOMutils.js");


var getParents = function (node, parents) {
    if (parents === void 0) { parents = []; }
    parents.push(node);
    if (node.parentNode) {
        getParents(node.parentNode, parents);
    }
    return parents;
};
var getCommonParent = function (nodeA, nodeB) {
    var parentsA = getParents(nodeA);
    var parentsB = getParents(nodeB);
    for (var i = 0; i < parentsA.length; i += 1) {
        var currentParent = parentsA[i];
        if (parentsB.indexOf(currentParent) >= 0) {
            return currentParent;
        }
    }
    return false;
};
var getTopCommonParent = function (baseActiveElement, leftEntry, rightEntries) {
    var activeElements = (0,_array__WEBPACK_IMPORTED_MODULE_0__.asArray)(baseActiveElement);
    var leftEntries = (0,_array__WEBPACK_IMPORTED_MODULE_0__.asArray)(leftEntry);
    var activeElement = activeElements[0];
    var topCommon = false;
    leftEntries.filter(Boolean).forEach(function (entry) {
        topCommon = getCommonParent(topCommon || entry, entry) || topCommon;
        rightEntries.filter(Boolean).forEach(function (subEntry) {
            var common = getCommonParent(activeElement, subEntry);
            if (common) {
                if (!topCommon || common.contains(topCommon)) {
                    topCommon = common;
                }
                else {
                    topCommon = getCommonParent(common, topCommon);
                }
            }
        });
    });
    return topCommon;
};
var allParentAutofocusables = function (entries, visibilityCache) {
    return entries.reduce(function (acc, node) { return acc.concat((0,_DOMutils__WEBPACK_IMPORTED_MODULE_1__.parentAutofocusables)(node, visibilityCache)); }, []);
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/utils/tabOrder.js":
/*!***************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/utils/tabOrder.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "tabSort": () => (/* binding */ tabSort),
/* harmony export */   "orderByTabIndex": () => (/* binding */ orderByTabIndex)
/* harmony export */ });
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/focus-lock/dist/es2015/utils/array.js");

var tabSort = function (a, b) {
    var tabDiff = a.tabIndex - b.tabIndex;
    var indexDiff = a.index - b.index;
    if (tabDiff) {
        if (!a.tabIndex) {
            return 1;
        }
        if (!b.tabIndex) {
            return -1;
        }
    }
    return tabDiff || indexDiff;
};
var orderByTabIndex = function (nodes, filterNegative, keepGuards) {
    return (0,_array__WEBPACK_IMPORTED_MODULE_0__.toArray)(nodes)
        .map(function (node, index) { return ({
        node: node,
        index: index,
        tabIndex: keepGuards && node.tabIndex === -1 ? ((node.dataset || {}).focusGuard ? 0 : -1) : node.tabIndex,
    }); })
        .filter(function (data) { return !filterNegative || data.tabIndex >= 0; })
        .sort(tabSort);
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/utils/tabUtils.js":
/*!***************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/utils/tabUtils.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getFocusables": () => (/* binding */ getFocusables),
/* harmony export */   "getParentAutofocusables": () => (/* binding */ getParentAutofocusables)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ "./node_modules/focus-lock/dist/es2015/constants.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/focus-lock/dist/es2015/utils/array.js");
/* harmony import */ var _tabbables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabbables */ "./node_modules/focus-lock/dist/es2015/utils/tabbables.js");



var queryTabbables = _tabbables__WEBPACK_IMPORTED_MODULE_0__.tabbables.join(',');
var queryGuardTabbables = queryTabbables + ", [data-focus-guard]";
var getFocusables = function (parents, withGuards) {
    return parents.reduce(function (acc, parent) {
        return acc.concat((0,_array__WEBPACK_IMPORTED_MODULE_1__.toArray)(parent.querySelectorAll(withGuards ? queryGuardTabbables : queryTabbables)), parent.parentNode
            ? (0,_array__WEBPACK_IMPORTED_MODULE_1__.toArray)(parent.parentNode.querySelectorAll(queryTabbables)).filter(function (node) { return node === parent; })
            : []);
    }, []);
};
var getParentAutofocusables = function (parent) {
    var parentFocus = parent.querySelectorAll("[" + _constants__WEBPACK_IMPORTED_MODULE_2__.FOCUS_AUTO + "]");
    return (0,_array__WEBPACK_IMPORTED_MODULE_1__.toArray)(parentFocus)
        .map(function (node) { return getFocusables([node]); })
        .reduce(function (acc, nodes) { return acc.concat(nodes); }, []);
};


/***/ }),

/***/ "./node_modules/focus-lock/dist/es2015/utils/tabbables.js":
/*!****************************************************************!*\
  !*** ./node_modules/focus-lock/dist/es2015/utils/tabbables.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "tabbables": () => (/* binding */ tabbables)
/* harmony export */ });
var tabbables = [
    'button:enabled',
    'select:enabled',
    'textarea:enabled',
    'input:enabled',
    'a[href]',
    'area[href]',
    'summary',
    'iframe',
    'object',
    'embed',
    'audio[controls]',
    'video[controls]',
    '[tabindex]',
    '[contenteditable]',
    '[autofocus]',
];


/***/ }),

/***/ "./node_modules/get-nonce/dist/es2015/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/get-nonce/dist/es2015/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setNonce": () => (/* binding */ setNonce),
/* harmony export */   "getNonce": () => (/* binding */ getNonce)
/* harmony export */ });
var currentNonce;
var setNonce = function (nonce) {
    currentNonce = nonce;
};
var getNonce = function () {
    if (currentNonce) {
        return currentNonce;
    }
    if (true) {
        return __webpack_require__.nc;
    }
    return undefined;
};


/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = __webpack_require__(/*! ./lib/has */ "./node_modules/prop-types/lib/has.js");

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) { /**/ }
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +
              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var has = __webpack_require__(/*! ./lib/has */ "./node_modules/prop-types/lib/has.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bigint: createPrimitiveTypeChecker('bigint'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message, data) {
    this.message = message;
    this.data = data && typeof data === 'object' ? data: {};
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError(
          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),
          {expectedType: expectedType}
        );
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      var expectedTypes = [];
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
        if (checkerResult == null) {
          return null;
        }
        if (checkerResult.data.hasOwnProperty('expectedType')) {
          expectedTypes.push(checkerResult.data.expectedType);
        }
      }
      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function invalidValidatorError(componentName, location, propFullName, key, type) {
    return new PropTypeError(
      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +
      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'
    );
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (has(shapeTypes, key) && typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/prop-types/lib/has.js":
/*!********************************************!*\
  !*** ./node_modules/prop-types/lib/has.js ***!
  \********************************************/
/***/ ((module) => {

module.exports = Function.call.bind(Object.prototype.hasOwnProperty);


/***/ }),

/***/ "./node_modules/react-clientside-effect/lib/index.es.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-clientside-effect/lib/index.es.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");




function withSideEffect(reducePropsToState, handleStateChangeOnClient) {
  if (true) {
    if (typeof reducePropsToState !== 'function') {
      throw new Error('Expected reducePropsToState to be a function.');
    }

    if (typeof handleStateChangeOnClient !== 'function') {
      throw new Error('Expected handleStateChangeOnClient to be a function.');
    }
  }

  function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
  }

  return function wrap(WrappedComponent) {
    if (true) {
      if (typeof WrappedComponent !== 'function') {
        throw new Error('Expected WrappedComponent to be a React component.');
      }
    }

    var mountedInstances = [];
    var state;

    function emitChange() {
      state = reducePropsToState(mountedInstances.map(function (instance) {
        return instance.props;
      }));
      handleStateChangeOnClient(state);
    }

    var SideEffect = /*#__PURE__*/function (_PureComponent) {
      (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(SideEffect, _PureComponent);

      function SideEffect() {
        return _PureComponent.apply(this, arguments) || this;
      }

      // Try to use displayName of wrapped component
      SideEffect.peek = function peek() {
        return state;
      };

      var _proto = SideEffect.prototype;

      _proto.componentDidMount = function componentDidMount() {
        mountedInstances.push(this);
        emitChange();
      };

      _proto.componentDidUpdate = function componentDidUpdate() {
        emitChange();
      };

      _proto.componentWillUnmount = function componentWillUnmount() {
        var index = mountedInstances.indexOf(this);
        mountedInstances.splice(index, 1);
        emitChange();
      };

      _proto.render = function render() {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(WrappedComponent, this.props);
      };

      return SideEffect;
    }(react__WEBPACK_IMPORTED_MODULE_2__.PureComponent);

    (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__["default"])(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");

    return SideEffect;
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (withSideEffect);


/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/AutoFocusInside.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/AutoFocusInside.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var focus_lock_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! focus-lock/constants */ "./node_modules/focus-lock/dist/es2015/constants.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "./node_modules/react-focus-lock/dist/es2015/util.js");






var AutoFocusInside = function AutoFocusInside(_ref) {
  var disabled = _ref.disabled,
      children = _ref.children,
      className = _ref.className;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, (0,_util__WEBPACK_IMPORTED_MODULE_2__.inlineProp)(focus_lock_constants__WEBPACK_IMPORTED_MODULE_3__.FOCUS_AUTO, !disabled), {
    className: className
  }), children);
};

AutoFocusInside.propTypes =  true ? {
  children: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().node.isRequired),
  disabled: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),
  className: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string)
} : 0;
AutoFocusInside.defaultProps = {
  disabled: false,
  className: undefined
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AutoFocusInside);

/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/Combination.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/Combination.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _Lock__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Lock */ "./node_modules/react-focus-lock/dist/es2015/Lock.js");
/* harmony import */ var _Trap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Trap */ "./node_modules/react-focus-lock/dist/es2015/Trap.js");





/* that would be a BREAKING CHANGE!
// delaying sidecar execution till the first usage
const RequireSideCar = (props) => {
  // eslint-disable-next-line global-require
  const SideCar = require('./Trap').default;
  return <SideCar {...props} />;
};
*/

var FocusLockCombination = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(function FocusLockUICombination(props, ref) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Lock__WEBPACK_IMPORTED_MODULE_3__["default"], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
    sideCar: _Trap__WEBPACK_IMPORTED_MODULE_4__["default"],
    ref: ref
  }, props));
});

var _ref = _Lock__WEBPACK_IMPORTED_MODULE_3__["default"].propTypes || {},
    sideCar = _ref.sideCar,
    propTypes = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref, ["sideCar"]);

FocusLockCombination.propTypes =  true ? propTypes : 0;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FocusLockCombination);

/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/FocusGuard.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/FocusGuard.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hiddenGuard": () => (/* binding */ hiddenGuard),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);


var hiddenGuard = {
  width: '1px',
  height: '0px',
  padding: 0,
  overflow: 'hidden',
  position: 'fixed',
  top: '1px',
  left: '1px'
};

var InFocusGuard = function InFocusGuard(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    key: "guard-first",
    "data-focus-guard": true,
    "data-focus-auto-guard": true,
    style: hiddenGuard
  }), children, children && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    key: "guard-last",
    "data-focus-guard": true,
    "data-focus-auto-guard": true,
    style: hiddenGuard
  }));
};

InFocusGuard.propTypes =  true ? {
  children: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().node)
} : 0;
InFocusGuard.defaultProps = {
  children: null
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InFocusGuard);

/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/FreeFocusInside.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/FreeFocusInside.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var focus_lock_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! focus-lock/constants */ "./node_modules/focus-lock/dist/es2015/constants.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "./node_modules/react-focus-lock/dist/es2015/util.js");






var FreeFocusInside = function FreeFocusInside(_ref) {
  var children = _ref.children,
      className = _ref.className;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, (0,_util__WEBPACK_IMPORTED_MODULE_2__.inlineProp)(focus_lock_constants__WEBPACK_IMPORTED_MODULE_3__.FOCUS_ALLOW, true), {
    className: className
  }), children);
};

FreeFocusInside.propTypes =  true ? {
  children: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().node.isRequired),
  className: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string)
} : 0;
FreeFocusInside.defaultProps = {
  className: undefined
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FreeFocusInside);

/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/Lock.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/Lock.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var focus_lock_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! focus-lock/constants */ "./node_modules/focus-lock/dist/es2015/constants.js");
/* harmony import */ var use_callback_ref__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! use-callback-ref */ "./node_modules/use-callback-ref/dist/es2015/useMergeRef.js");
/* harmony import */ var _FocusGuard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FocusGuard */ "./node_modules/react-focus-lock/dist/es2015/FocusGuard.js");
/* harmony import */ var _medium__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./medium */ "./node_modules/react-focus-lock/dist/es2015/medium.js");







var emptyArray = [];
var FocusLock = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function FocusLockUI(props, parentRef) {
  var _extends2;

  var _React$useState = react__WEBPACK_IMPORTED_MODULE_1__.useState(),
      realObserved = _React$useState[0],
      setObserved = _React$useState[1];

  var observed = react__WEBPACK_IMPORTED_MODULE_1__.useRef();
  var isActive = react__WEBPACK_IMPORTED_MODULE_1__.useRef(false);
  var originalFocusedElement = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);
  var children = props.children,
      disabled = props.disabled,
      noFocusGuards = props.noFocusGuards,
      persistentFocus = props.persistentFocus,
      crossFrame = props.crossFrame,
      autoFocus = props.autoFocus,
      allowTextSelection = props.allowTextSelection,
      group = props.group,
      className = props.className,
      whiteList = props.whiteList,
      _props$shards = props.shards,
      shards = _props$shards === void 0 ? emptyArray : _props$shards,
      _props$as = props.as,
      Container = _props$as === void 0 ? 'div' : _props$as,
      _props$lockProps = props.lockProps,
      containerProps = _props$lockProps === void 0 ? {} : _props$lockProps,
      SideCar = props.sideCar,
      shouldReturnFocus = props.returnFocus,
      onActivationCallback = props.onActivation,
      onDeactivationCallback = props.onDeactivation;

  var _React$useState2 = react__WEBPACK_IMPORTED_MODULE_1__.useState({}),
      id = _React$useState2[0]; // SIDE EFFECT CALLBACKS


  var onActivation = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(function () {
    originalFocusedElement.current = originalFocusedElement.current || document && document.activeElement;

    if (observed.current && onActivationCallback) {
      onActivationCallback(observed.current);
    }

    isActive.current = true;
  }, [onActivationCallback]);
  var onDeactivation = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(function () {
    isActive.current = false;

    if (onDeactivationCallback) {
      onDeactivationCallback(observed.current);
    }
  }, [onDeactivationCallback]);
  var returnFocus = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(function (allowDefer) {
    var current = originalFocusedElement.current;

    if (Boolean(shouldReturnFocus) && current && current.focus) {
      var focusOptions = typeof shouldReturnFocus === 'object' ? shouldReturnFocus : undefined;
      originalFocusedElement.current = null;

      if (allowDefer) {
        // React might return focus after update
        // it's safer to defer the action
        Promise.resolve().then(function () {
          return current.focus(focusOptions);
        });
      } else {
        current.focus(focusOptions);
      }
    }
  }, [shouldReturnFocus]); // MEDIUM CALLBACKS

  var onFocus = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(function (event) {
    if (isActive.current) {
      _medium__WEBPACK_IMPORTED_MODULE_2__.mediumFocus.useMedium(event);
    }
  }, []);
  var onBlur = _medium__WEBPACK_IMPORTED_MODULE_2__.mediumBlur.useMedium; // REF PROPAGATION
  // not using real refs due to race conditions

  var setObserveNode = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(function (newObserved) {
    if (observed.current !== newObserved) {
      observed.current = newObserved;
      setObserved(newObserved);
    }
  }, []);

  if (true) {
    if (typeof allowTextSelection !== 'undefined') {
      // eslint-disable-next-line no-console
      console.warn('React-Focus-Lock: allowTextSelection is deprecated and enabled by default');
    }

    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(function () {
      if (!observed.current) {
        // eslint-disable-next-line no-console
        console.error('FocusLock: could not obtain ref to internal node');
      }
    }, []);
  }

  var lockProps = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((_extends2 = {}, _extends2[focus_lock_constants__WEBPACK_IMPORTED_MODULE_3__.FOCUS_DISABLED] = disabled && 'disabled', _extends2[focus_lock_constants__WEBPACK_IMPORTED_MODULE_3__.FOCUS_GROUP] = group, _extends2), containerProps);

  var hasLeadingGuards = noFocusGuards !== true;
  var hasTailingGuards = hasLeadingGuards && noFocusGuards !== 'tail';
  var mergedRef = (0,use_callback_ref__WEBPACK_IMPORTED_MODULE_4__.useMergeRefs)([parentRef, setObserveNode]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, hasLeadingGuards && [/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
    key: "guard-first",
    "data-focus-guard": true,
    tabIndex: disabled ? -1 : 0,
    style: _FocusGuard__WEBPACK_IMPORTED_MODULE_5__.hiddenGuard
  }),
  /*#__PURE__*/
  // nearest focus guard
  react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
    key: "guard-nearest",
    "data-focus-guard": true,
    tabIndex: disabled ? -1 : 1,
    style: _FocusGuard__WEBPACK_IMPORTED_MODULE_5__.hiddenGuard
  }) // first tabbed element guard
  ], !disabled && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(SideCar, {
    id: id,
    sideCar: _medium__WEBPACK_IMPORTED_MODULE_2__.mediumSidecar,
    observed: realObserved,
    disabled: disabled,
    persistentFocus: persistentFocus,
    crossFrame: crossFrame,
    autoFocus: autoFocus,
    whiteList: whiteList,
    shards: shards,
    onActivation: onActivation,
    onDeactivation: onDeactivation,
    returnFocus: returnFocus
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(Container, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
    ref: mergedRef
  }, lockProps, {
    className: className,
    onBlur: onBlur,
    onFocus: onFocus
  }), children), hasTailingGuards && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
    "data-focus-guard": true,
    tabIndex: disabled ? -1 : 0,
    style: _FocusGuard__WEBPACK_IMPORTED_MODULE_5__.hiddenGuard
  }));
});
FocusLock.propTypes =  true ? {
  children: prop_types__WEBPACK_IMPORTED_MODULE_6__.node,
  disabled: prop_types__WEBPACK_IMPORTED_MODULE_6__.bool,
  returnFocus: (0,prop_types__WEBPACK_IMPORTED_MODULE_6__.oneOfType)([prop_types__WEBPACK_IMPORTED_MODULE_6__.bool, prop_types__WEBPACK_IMPORTED_MODULE_6__.object]),
  noFocusGuards: prop_types__WEBPACK_IMPORTED_MODULE_6__.bool,
  allowTextSelection: prop_types__WEBPACK_IMPORTED_MODULE_6__.bool,
  autoFocus: prop_types__WEBPACK_IMPORTED_MODULE_6__.bool,
  persistentFocus: prop_types__WEBPACK_IMPORTED_MODULE_6__.bool,
  crossFrame: prop_types__WEBPACK_IMPORTED_MODULE_6__.bool,
  group: prop_types__WEBPACK_IMPORTED_MODULE_6__.string,
  className: prop_types__WEBPACK_IMPORTED_MODULE_6__.string,
  whiteList: prop_types__WEBPACK_IMPORTED_MODULE_6__.func,
  shards: (0,prop_types__WEBPACK_IMPORTED_MODULE_6__.arrayOf)(prop_types__WEBPACK_IMPORTED_MODULE_6__.any),
  as: (0,prop_types__WEBPACK_IMPORTED_MODULE_6__.oneOfType)([prop_types__WEBPACK_IMPORTED_MODULE_6__.string, prop_types__WEBPACK_IMPORTED_MODULE_6__.func, prop_types__WEBPACK_IMPORTED_MODULE_6__.object]),
  lockProps: prop_types__WEBPACK_IMPORTED_MODULE_6__.object,
  onActivation: prop_types__WEBPACK_IMPORTED_MODULE_6__.func,
  onDeactivation: prop_types__WEBPACK_IMPORTED_MODULE_6__.func,
  sideCar: prop_types__WEBPACK_IMPORTED_MODULE_6__.any.isRequired
} : 0;
FocusLock.defaultProps = {
  children: undefined,
  disabled: false,
  returnFocus: false,
  noFocusGuards: false,
  autoFocus: true,
  persistentFocus: false,
  crossFrame: true,
  allowTextSelection: undefined,
  group: undefined,
  className: undefined,
  whiteList: undefined,
  shards: undefined,
  as: 'div',
  lockProps: {},
  onActivation: undefined,
  onDeactivation: undefined
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FocusLock);

/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/MoveFocusInside.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/MoveFocusInside.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useFocusInside": () => (/* binding */ useFocusInside),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var focus_lock_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! focus-lock/constants */ "./node_modules/focus-lock/dist/es2015/constants.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ "./node_modules/react-focus-lock/dist/es2015/util.js");
/* harmony import */ var _medium__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./medium */ "./node_modules/react-focus-lock/dist/es2015/medium.js");






var useFocusInside = function useFocusInside(observedRef) {
  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(function () {
    var enabled = true;
    _medium__WEBPACK_IMPORTED_MODULE_2__.mediumEffect.useMedium(function (car) {
      var observed = observedRef && observedRef.current;

      if (enabled && observed) {
        if (!car.focusInside(observed)) {
          car.moveFocusInside(observed, null);
        }
      }
    });
    return function () {
      enabled = false;
    };
  }, [observedRef]);
};

function MoveFocusInside(_ref) {
  var isDisabled = _ref.disabled,
      className = _ref.className,
      children = _ref.children;
  var ref = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);
  useFocusInside(isDisabled ? undefined : ref);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, (0,_util__WEBPACK_IMPORTED_MODULE_3__.inlineProp)(focus_lock_constants__WEBPACK_IMPORTED_MODULE_4__.FOCUS_AUTO, !isDisabled), {
    ref: ref,
    className: className
  }), children);
}

MoveFocusInside.propTypes =  true ? {
  children: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().node.isRequired),
  disabled: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool),
  className: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string)
} : 0;
MoveFocusInside.defaultProps = {
  disabled: false,
  className: undefined
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MoveFocusInside);

/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/Trap.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/Trap.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var react_clientside_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-clientside-effect */ "./node_modules/react-clientside-effect/lib/index.es.js");
/* harmony import */ var focus_lock__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! focus-lock */ "./node_modules/focus-lock/dist/es2015/focusIsHidden.js");
/* harmony import */ var focus_lock__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! focus-lock */ "./node_modules/focus-lock/dist/es2015/focusInside.js");
/* harmony import */ var focus_lock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! focus-lock */ "./node_modules/focus-lock/dist/es2015/index.js");
/* harmony import */ var focus_lock__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! focus-lock */ "./node_modules/focus-lock/dist/es2015/focusables.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util */ "./node_modules/react-focus-lock/dist/es2015/util.js");
/* harmony import */ var _medium__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./medium */ "./node_modules/react-focus-lock/dist/es2015/medium.js");







var focusOnBody = function focusOnBody() {
  return document && document.activeElement === document.body;
};

var isFreeFocus = function isFreeFocus() {
  return focusOnBody() || (0,focus_lock__WEBPACK_IMPORTED_MODULE_2__.focusIsHidden)();
};

var lastActiveTrap = null;
var lastActiveFocus = null;
var lastPortaledElement = null;
var focusWasOutsideWindow = false;

var defaultWhitelist = function defaultWhitelist() {
  return true;
};

var focusWhitelisted = function focusWhitelisted(activeElement) {
  return (lastActiveTrap.whiteList || defaultWhitelist)(activeElement);
};

var recordPortal = function recordPortal(observerNode, portaledElement) {
  lastPortaledElement = {
    observerNode: observerNode,
    portaledElement: portaledElement
  };
};

var focusIsPortaledPair = function focusIsPortaledPair(element) {
  return lastPortaledElement && lastPortaledElement.portaledElement === element;
};

function autoGuard(startIndex, end, step, allNodes) {
  var lastGuard = null;
  var i = startIndex;

  do {
    var item = allNodes[i];

    if (item.guard) {
      if (item.node.dataset.focusAutoGuard) {
        lastGuard = item;
      }
    } else if (item.lockItem) {
      if (i !== startIndex) {
        // we will tab to the next element
        return;
      }

      lastGuard = null;
    } else {
      break;
    }
  } while ((i += step) !== end);

  if (lastGuard) {
    lastGuard.node.tabIndex = 0;
  }
}

var extractRef = function extractRef(ref) {
  return ref && 'current' in ref ? ref.current : ref;
};

var focusWasOutside = function focusWasOutside(crossFrameOption) {
  if (crossFrameOption) {
    // with cross frame return true for any value
    return Boolean(focusWasOutsideWindow);
  } // in other case return only of focus went a while aho


  return focusWasOutsideWindow === 'meanwhile';
};

var activateTrap = function activateTrap() {
  var result = false;

  if (lastActiveTrap) {
    var _lastActiveTrap = lastActiveTrap,
        observed = _lastActiveTrap.observed,
        persistentFocus = _lastActiveTrap.persistentFocus,
        autoFocus = _lastActiveTrap.autoFocus,
        shards = _lastActiveTrap.shards,
        crossFrame = _lastActiveTrap.crossFrame;
    var workingNode = observed || lastPortaledElement && lastPortaledElement.portaledElement;
    var activeElement = document && document.activeElement;

    if (workingNode) {
      var workingArea = [workingNode].concat(shards.map(extractRef).filter(Boolean));

      if (!activeElement || focusWhitelisted(activeElement)) {
        if (persistentFocus || focusWasOutside(crossFrame) || !isFreeFocus() || !lastActiveFocus && autoFocus) {
          if (workingNode && !((0,focus_lock__WEBPACK_IMPORTED_MODULE_3__.focusInside)(workingArea) || focusIsPortaledPair(activeElement, workingNode))) {
            if (document && !lastActiveFocus && activeElement && !autoFocus) {
              // Check if blur() exists, which is missing on certain elements on IE
              if (activeElement.blur) {
                activeElement.blur();
              }

              document.body.focus();
            } else {
              result = (0,focus_lock__WEBPACK_IMPORTED_MODULE_4__["default"])(workingArea, lastActiveFocus);
              lastPortaledElement = {};
            }
          }

          focusWasOutsideWindow = false;
          lastActiveFocus = document && document.activeElement;
        }
      }

      if (document) {
        var newActiveElement = document && document.activeElement;
        var allNodes = (0,focus_lock__WEBPACK_IMPORTED_MODULE_5__.getFocusabledIn)(workingArea);
        var focusedIndex = allNodes.map(function (_ref) {
          var node = _ref.node;
          return node;
        }).indexOf(newActiveElement);

        if (focusedIndex > -1) {
          // remove old focus
          allNodes.filter(function (_ref2) {
            var guard = _ref2.guard,
                node = _ref2.node;
            return guard && node.dataset.focusAutoGuard;
          }).forEach(function (_ref3) {
            var node = _ref3.node;
            return node.removeAttribute('tabIndex');
          });
          autoGuard(focusedIndex, allNodes.length, +1, allNodes);
          autoGuard(focusedIndex, -1, -1, allNodes);
        }
      }
    }
  }

  return result;
};

var onTrap = function onTrap(event) {
  if (activateTrap() && event) {
    // prevent scroll jump
    event.stopPropagation();
    event.preventDefault();
  }
};

var onBlur = function onBlur() {
  return (0,_util__WEBPACK_IMPORTED_MODULE_6__.deferAction)(activateTrap);
};

var onFocus = function onFocus(event) {
  // detect portal
  var source = event.target;
  var currentNode = event.currentTarget;

  if (!currentNode.contains(source)) {
    recordPortal(currentNode, source);
  }
};

var FocusWatcher = function FocusWatcher() {
  return null;
};

var FocusTrap = function FocusTrap(_ref4) {
  var children = _ref4.children;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    onBlur: onBlur,
    onFocus: onFocus
  }, children);
};

FocusTrap.propTypes =  true ? {
  children: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().node.isRequired)
} : 0;

var onWindowBlur = function onWindowBlur() {
  focusWasOutsideWindow = 'just'; // using setTimeout to set  this variable after React/sidecar reaction

  setTimeout(function () {
    focusWasOutsideWindow = 'meanwhile';
  }, 0);
};

var attachHandler = function attachHandler() {
  document.addEventListener('focusin', onTrap, true);
  document.addEventListener('focusout', onBlur);
  window.addEventListener('blur', onWindowBlur);
};

var detachHandler = function detachHandler() {
  document.removeEventListener('focusin', onTrap, true);
  document.removeEventListener('focusout', onBlur);
  window.removeEventListener('blur', onWindowBlur);
};

function reducePropsToState(propsList) {
  return propsList.filter(function (_ref5) {
    var disabled = _ref5.disabled;
    return !disabled;
  });
}

function handleStateChangeOnClient(traps) {
  var trap = traps.slice(-1)[0];

  if (trap && !lastActiveTrap) {
    attachHandler();
  }

  var lastTrap = lastActiveTrap;
  var sameTrap = lastTrap && trap && trap.id === lastTrap.id;
  lastActiveTrap = trap;

  if (lastTrap && !sameTrap) {
    lastTrap.onDeactivation(); // return focus only of last trap was removed

    if (!traps.filter(function (_ref6) {
      var id = _ref6.id;
      return id === lastTrap.id;
    }).length) {
      // allow defer is no other trap is awaiting restore
      lastTrap.returnFocus(!trap);
    }
  }

  if (trap) {
    lastActiveFocus = null;

    if (!sameTrap || lastTrap.observed !== trap.observed) {
      trap.onActivation();
    }

    activateTrap(true);
    (0,_util__WEBPACK_IMPORTED_MODULE_6__.deferAction)(activateTrap);
  } else {
    detachHandler();
    lastActiveFocus = null;
  }
} // bind medium


_medium__WEBPACK_IMPORTED_MODULE_8__.mediumFocus.assignSyncMedium(onFocus);
_medium__WEBPACK_IMPORTED_MODULE_8__.mediumBlur.assignMedium(onBlur);
_medium__WEBPACK_IMPORTED_MODULE_8__.mediumEffect.assignMedium(function (cb) {
  return cb({
    moveFocusInside: focus_lock__WEBPACK_IMPORTED_MODULE_4__["default"],
    focusInside: focus_lock__WEBPACK_IMPORTED_MODULE_3__.focusInside
  });
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_clientside_effect__WEBPACK_IMPORTED_MODULE_1__["default"])(reducePropsToState, handleStateChangeOnClient)(FocusWatcher));

/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/UI.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/UI.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutoFocusInside": () => (/* reexport safe */ _AutoFocusInside__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "MoveFocusInside": () => (/* reexport safe */ _MoveFocusInside__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "FreeFocusInside": () => (/* reexport safe */ _FreeFocusInside__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "InFocusGuard": () => (/* reexport safe */ _FocusGuard__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "FocusLockUI": () => (/* reexport safe */ _Lock__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   "useFocusInside": () => (/* reexport safe */ _MoveFocusInside__WEBPACK_IMPORTED_MODULE_1__.useFocusInside),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Lock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Lock */ "./node_modules/react-focus-lock/dist/es2015/Lock.js");
/* harmony import */ var _AutoFocusInside__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AutoFocusInside */ "./node_modules/react-focus-lock/dist/es2015/AutoFocusInside.js");
/* harmony import */ var _MoveFocusInside__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MoveFocusInside */ "./node_modules/react-focus-lock/dist/es2015/MoveFocusInside.js");
/* harmony import */ var _FreeFocusInside__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FreeFocusInside */ "./node_modules/react-focus-lock/dist/es2015/FreeFocusInside.js");
/* harmony import */ var _FocusGuard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FocusGuard */ "./node_modules/react-focus-lock/dist/es2015/FocusGuard.js");






/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_Lock__WEBPACK_IMPORTED_MODULE_4__["default"]);

/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/index.js":
/*!************************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutoFocusInside": () => (/* reexport safe */ _UI__WEBPACK_IMPORTED_MODULE_0__.AutoFocusInside),
/* harmony export */   "FocusLockUI": () => (/* reexport safe */ _UI__WEBPACK_IMPORTED_MODULE_0__.FocusLockUI),
/* harmony export */   "FreeFocusInside": () => (/* reexport safe */ _UI__WEBPACK_IMPORTED_MODULE_0__.FreeFocusInside),
/* harmony export */   "InFocusGuard": () => (/* reexport safe */ _UI__WEBPACK_IMPORTED_MODULE_0__.InFocusGuard),
/* harmony export */   "MoveFocusInside": () => (/* reexport safe */ _UI__WEBPACK_IMPORTED_MODULE_0__.MoveFocusInside),
/* harmony export */   "useFocusInside": () => (/* reexport safe */ _UI__WEBPACK_IMPORTED_MODULE_0__.useFocusInside),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Combination__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Combination */ "./node_modules/react-focus-lock/dist/es2015/Combination.js");
/* harmony import */ var _UI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UI */ "./node_modules/react-focus-lock/dist/es2015/UI.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_Combination__WEBPACK_IMPORTED_MODULE_1__["default"]);

/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/medium.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/medium.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mediumFocus": () => (/* binding */ mediumFocus),
/* harmony export */   "mediumBlur": () => (/* binding */ mediumBlur),
/* harmony export */   "mediumEffect": () => (/* binding */ mediumEffect),
/* harmony export */   "mediumSidecar": () => (/* binding */ mediumSidecar)
/* harmony export */ });
/* harmony import */ var use_sidecar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-sidecar */ "./node_modules/use-sidecar/dist/es2015/medium.js");

var mediumFocus = (0,use_sidecar__WEBPACK_IMPORTED_MODULE_0__.createMedium)({}, function (_ref) {
  var target = _ref.target,
      currentTarget = _ref.currentTarget;
  return {
    target: target,
    currentTarget: currentTarget
  };
});
var mediumBlur = (0,use_sidecar__WEBPACK_IMPORTED_MODULE_0__.createMedium)();
var mediumEffect = (0,use_sidecar__WEBPACK_IMPORTED_MODULE_0__.createMedium)();
var mediumSidecar = (0,use_sidecar__WEBPACK_IMPORTED_MODULE_0__.createSidecarMedium)({
  async: true
});

/***/ }),

/***/ "./node_modules/react-focus-lock/dist/es2015/util.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-focus-lock/dist/es2015/util.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deferAction": () => (/* binding */ deferAction),
/* harmony export */   "inlineProp": () => (/* binding */ inlineProp)
/* harmony export */ });
function deferAction(action) {
  // Hidding setImmediate from Webpack to avoid inserting polyfill
  var _window = window,
      setImmediate = _window.setImmediate;

  if (typeof setImmediate !== 'undefined') {
    setImmediate(action);
  } else {
    setTimeout(action, 1);
  }
}
var inlineProp = function inlineProp(name, value) {
  var obj = {};
  obj[name] = value;
  return obj;
};

/***/ }),

/***/ "./node_modules/react-remove-scroll-bar/dist/es2015/component.js":
/*!***********************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/component.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RemoveScrollBar": () => (/* binding */ RemoveScrollBar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_style_singleton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-style-singleton */ "./node_modules/react-style-singleton/dist/es2015/index.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./node_modules/react-remove-scroll-bar/dist/es2015/utils.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ "./node_modules/react-remove-scroll-bar/dist/es2015/constants.js");




var Style = (0,react_style_singleton__WEBPACK_IMPORTED_MODULE_1__.styleSingleton)();
var getStyles = function (_a, allowRelative, gapMode, important) {
    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
    if (gapMode === void 0) { gapMode = 'margin'; }
    return "\n  ." + _constants__WEBPACK_IMPORTED_MODULE_3__.noScrollbarsClassName + " {\n   overflow: hidden " + important + ";\n   padding-right: " + gap + "px " + important + ";\n  }\n  body {\n    overflow: hidden " + important + ";\n    " + [
        allowRelative && "position: relative " + important + ";",
        gapMode === 'margin' && "\n    padding-left: " + left + "px;\n    padding-top: " + top + "px;\n    padding-right: " + right + "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: " + gap + "px " + important + ";\n    ",
        gapMode === 'padding' && "padding-right: " + gap + "px " + important + ";",
    ].filter(Boolean).join('') + "\n  }\n  \n  ." + _constants__WEBPACK_IMPORTED_MODULE_3__.zeroRightClassName + " {\n    right: " + gap + "px " + important + ";\n  }\n  \n  ." + _constants__WEBPACK_IMPORTED_MODULE_3__.fullWidthClassName + " {\n    margin-right: " + gap + "px " + important + ";\n  }\n  \n  ." + _constants__WEBPACK_IMPORTED_MODULE_3__.zeroRightClassName + " ." + _constants__WEBPACK_IMPORTED_MODULE_3__.zeroRightClassName + " {\n    right: 0 " + important + ";\n  }\n  \n  ." + _constants__WEBPACK_IMPORTED_MODULE_3__.fullWidthClassName + " ." + _constants__WEBPACK_IMPORTED_MODULE_3__.fullWidthClassName + " {\n    margin-right: 0 " + important + ";\n  }\n  \n  body {\n    " + _constants__WEBPACK_IMPORTED_MODULE_3__.removedBarSizeVariable + ": " + gap + "px;\n  }\n";
};
var RemoveScrollBar = function (props) {
    var _a = react__WEBPACK_IMPORTED_MODULE_0__.useState((0,_utils__WEBPACK_IMPORTED_MODULE_2__.getGapWidth)(props.gapMode)), gap = _a[0], setGap = _a[1];
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
        setGap((0,_utils__WEBPACK_IMPORTED_MODULE_2__.getGapWidth)(props.gapMode));
    }, [props.gapMode]);
    var noRelative = props.noRelative, noImportant = props.noImportant, _b = props.gapMode, gapMode = _b === void 0 ? 'margin' : _b;
    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : '') });
};


/***/ }),

/***/ "./node_modules/react-remove-scroll-bar/dist/es2015/constants.js":
/*!***********************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/constants.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "zeroRightClassName": () => (/* binding */ zeroRightClassName),
/* harmony export */   "fullWidthClassName": () => (/* binding */ fullWidthClassName),
/* harmony export */   "noScrollbarsClassName": () => (/* binding */ noScrollbarsClassName),
/* harmony export */   "removedBarSizeVariable": () => (/* binding */ removedBarSizeVariable)
/* harmony export */ });
var zeroRightClassName = 'right-scroll-bar-position';
var fullWidthClassName = 'width-before-scroll-bar';
var noScrollbarsClassName = 'with-scroll-bars-hidden';
var removedBarSizeVariable = '--removed-body-scroll-bar-size';


/***/ }),

/***/ "./node_modules/react-remove-scroll-bar/dist/es2015/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RemoveScrollBar": () => (/* reexport safe */ _component__WEBPACK_IMPORTED_MODULE_0__.RemoveScrollBar),
/* harmony export */   "zeroRightClassName": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_2__.zeroRightClassName),
/* harmony export */   "fullWidthClassName": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_2__.fullWidthClassName),
/* harmony export */   "noScrollbarsClassName": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_2__.noScrollbarsClassName),
/* harmony export */   "removedBarSizeVariable": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_2__.removedBarSizeVariable),
/* harmony export */   "getGapWidth": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_1__.getGapWidth)
/* harmony export */ });
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ "./node_modules/react-remove-scroll-bar/dist/es2015/component.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./node_modules/react-remove-scroll-bar/dist/es2015/utils.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ "./node_modules/react-remove-scroll-bar/dist/es2015/constants.js");






/***/ }),

/***/ "./node_modules/react-remove-scroll-bar/dist/es2015/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "zeroGap": () => (/* binding */ zeroGap),
/* harmony export */   "getGapWidth": () => (/* binding */ getGapWidth)
/* harmony export */ });
var zeroGap = {
    left: 0,
    top: 0,
    right: 0,
    gap: 0,
};
var parse = function (x) { return parseInt(x || '', 10) || 0; };
var getOffset = function (gapMode) {
    var cs = window.getComputedStyle(document.body);
    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];
    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];
    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];
    return [
        parse(left),
        parse(top),
        parse(right),
    ];
};
var getGapWidth = function (gapMode) {
    if (gapMode === void 0) { gapMode = 'margin'; }
    if (typeof window === 'undefined') {
        return zeroGap;
    }
    var offsets = getOffset(gapMode);
    var documentWidth = document.documentElement.clientWidth;
    var windowWidth = window.innerWidth;
    return {
        left: offsets[0],
        top: offsets[1],
        right: offsets[2],
        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0]),
    };
};


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/Combination.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/Combination.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/react-remove-scroll/node_modules/tslib/tslib.es6.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _UI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UI */ "./node_modules/react-remove-scroll/dist/es2015/UI.js");
/* harmony import */ var _sidecar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sidecar */ "./node_modules/react-remove-scroll/dist/es2015/sidecar.js");




var ReactRemoveScroll = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) { return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_UI__WEBPACK_IMPORTED_MODULE_2__.RemoveScroll, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign({}, props, { ref: ref, sideCar: _sidecar__WEBPACK_IMPORTED_MODULE_1__["default"] }))); });
ReactRemoveScroll.classNames = _UI__WEBPACK_IMPORTED_MODULE_2__.RemoveScroll.classNames;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ReactRemoveScroll);


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/SideEffect.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/SideEffect.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getTouchXY": () => (/* binding */ getTouchXY),
/* harmony export */   "getDeltaXY": () => (/* binding */ getDeltaXY),
/* harmony export */   "RemoveScrollSideCar": () => (/* binding */ RemoveScrollSideCar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_remove_scroll_bar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-remove-scroll-bar */ "./node_modules/react-remove-scroll-bar/dist/es2015/index.js");
/* harmony import */ var react_style_singleton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-style-singleton */ "./node_modules/react-style-singleton/dist/es2015/index.js");
/* harmony import */ var _handleScroll__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./handleScroll */ "./node_modules/react-remove-scroll/dist/es2015/handleScroll.js");
/* harmony import */ var _aggresiveCapture__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./aggresiveCapture */ "./node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js");





var getTouchXY = function (event) {
    return 'changedTouches' in event
        ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY]
        : [0, 0];
};
var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };
var extractRef = function (ref) {
    return ref && 'current' in ref ? ref.current : ref;
};
var deltaCompare = function (x, y) {
    return x[0] === y[0] && x[1] === y[1];
};
var generateStyle = function (id) { return "\n  .block-interactivity-" + id + " {pointer-events: none;}\n  .allow-interactivity-" + id + " {pointer-events: all;}\n"; };
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
    var shouldPreventQueue = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);
    var touchStartRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef([0, 0]);
    var activeAxis = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    var id = react__WEBPACK_IMPORTED_MODULE_0__.useState(idCounter++)[0];
    var Style = react__WEBPACK_IMPORTED_MODULE_0__.useState(function () { return (0,react_style_singleton__WEBPACK_IMPORTED_MODULE_2__.styleSingleton)(); })[0];
    var lastProps = react__WEBPACK_IMPORTED_MODULE_0__.useRef(props);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
        lastProps.current = props;
    }, [props]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
        if (props.inert) {
            document.body.classList.add("block-interactivity-" + id);
            var allow_1 = [
                props.lockRef.current
            ].concat((props.shards || []).map(extractRef)).filter(Boolean);
            allow_1.forEach(function (el) { return el.classList.add("allow-interactivity-" + id); });
            return function () {
                document.body.classList.remove("block-interactivity-" + id);
                allow_1.forEach(function (el) {
                    return el.classList.remove("allow-interactivity-" + id);
                });
            };
        }
        return;
    }, [props.inert, props.lockRef.current, props.shards]);
    var shouldCancelEvent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event, parent) {
        if ('touches' in event && event.touches.length === 2) {
            return !lastProps.current.allowPinchZoom;
        }
        var touch = getTouchXY(event);
        var touchStart = touchStartRef.current;
        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];
        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];
        var currentAxis;
        var target = event.target;
        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';
        var canBeScrolledInMainDirection = (0,_handleScroll__WEBPACK_IMPORTED_MODULE_3__.locationCouldBeScrolled)(moveDirection, target);
        if (!canBeScrolledInMainDirection) {
            return true;
        }
        if (canBeScrolledInMainDirection) {
            currentAxis = moveDirection;
        }
        else {
            currentAxis = moveDirection === 'v' ? 'h' : 'v';
            canBeScrolledInMainDirection = (0,_handleScroll__WEBPACK_IMPORTED_MODULE_3__.locationCouldBeScrolled)(moveDirection, target);
            // other axis might be not scrollable
        }
        if (!canBeScrolledInMainDirection) {
            return false;
        }
        if (!activeAxis.current &&
            'changedTouches' in event &&
            (deltaX || deltaY)) {
            activeAxis.current = currentAxis;
        }
        if (!currentAxis) {
            return true;
        }
        var cancelingAxis = activeAxis.current || currentAxis;
        return (0,_handleScroll__WEBPACK_IMPORTED_MODULE_3__.handleScroll)(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);
    }, []);
    var shouldPrevent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (_event) {
        var event = _event;
        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {
            // not the last active
            return;
        }
        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);
        var sourceEvent = shouldPreventQueue.current.filter(function (e) {
            return e.name === event.type &&
                e.target === event.target &&
                deltaCompare(e.delta, delta);
        })[0];
        // self event, and should be canceled
        if (sourceEvent && sourceEvent.should) {
            event.preventDefault();
            return;
        }
        // outside or shard event
        if (!sourceEvent) {
            var shardNodes = (lastProps.current.shards || [])
                .map(extractRef)
                .filter(Boolean)
                .filter(function (node) { return node.contains(event.target); });
            var shouldStop = shardNodes.length > 0
                ? shouldCancelEvent(event, shardNodes[0])
                : !lastProps.current.noIsolation;
            if (shouldStop) {
                event.preventDefault();
            }
        }
    }, []);
    var shouldCancel = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (name, delta, target, should) {
        var event = { name: name, delta: delta, target: target, should: should };
        shouldPreventQueue.current.push(event);
        setTimeout(function () {
            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });
        }, 1);
    }, []);
    var scrollTouchStart = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
        touchStartRef.current = getTouchXY(event);
        activeAxis.current = undefined;
    }, []);
    var scrollWheel = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
    }, []);
    var scrollTouchMove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {
        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
    }, []);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
        lockStack.push(Style);
        props.setCallbacks({
            onScrollCapture: scrollWheel,
            onWheelCapture: scrollWheel,
            onTouchMoveCapture: scrollTouchMove
        });
        document.addEventListener('wheel', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_4__.nonPassive);
        document.addEventListener('touchmove', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_4__.nonPassive);
        document.addEventListener('touchstart', scrollTouchStart, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_4__.nonPassive);
        return function () {
            lockStack = lockStack.filter(function (inst) { return inst !== Style; });
            document.removeEventListener('wheel', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_4__.nonPassive);
            document.removeEventListener('touchmove', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_4__.nonPassive);
            document.removeEventListener('touchstart', scrollTouchStart, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_4__.nonPassive);
        };
    }, []);
    var removeScrollBar = props.removeScrollBar, inert = props.inert;
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
        inert ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(Style, { styles: generateStyle(id) }) : null,
        removeScrollBar ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_remove_scroll_bar__WEBPACK_IMPORTED_MODULE_1__.RemoveScrollBar, { gapMode: "margin" }) : null));
}


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/UI.js":
/*!************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/UI.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RemoveScroll": () => (/* binding */ RemoveScroll)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/react-remove-scroll/node_modules/tslib/tslib.es6.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_remove_scroll_bar_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-remove-scroll-bar/constants */ "./node_modules/react-remove-scroll-bar/dist/es2015/constants.js");
/* harmony import */ var _medium__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./medium */ "./node_modules/react-remove-scroll/dist/es2015/medium.js");
/* harmony import */ var use_callback_ref__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-callback-ref */ "./node_modules/use-callback-ref/dist/es2015/useMergeRef.js");





var nothing = function () {
    return;
};
/**
 * Removes scrollbar from the page and contain the scroll within the Lock
 */
var RemoveScroll = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, parentRef) {
    var ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
    var _a = react__WEBPACK_IMPORTED_MODULE_0__.useState({
        onScrollCapture: nothing,
        onWheelCapture: nothing,
        onTouchMoveCapture: nothing
    }), callbacks = _a[0], setCallbacks = _a[1];
    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, rest = tslib__WEBPACK_IMPORTED_MODULE_2__.__rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]);
    var SideCar = sideCar;
    var containerRef = (0,use_callback_ref__WEBPACK_IMPORTED_MODULE_3__.useMergeRefs)([
        ref,
        parentRef
    ]);
    var containerProps = tslib__WEBPACK_IMPORTED_MODULE_2__.__assign({}, rest, callbacks);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
        enabled && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(SideCar, { sideCar: _medium__WEBPACK_IMPORTED_MODULE_4__.effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref })),
        forwardProps ? (react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children), tslib__WEBPACK_IMPORTED_MODULE_2__.__assign({}, containerProps, { ref: containerRef }))) : (react__WEBPACK_IMPORTED_MODULE_0__.createElement(Container, tslib__WEBPACK_IMPORTED_MODULE_2__.__assign({}, containerProps, { className: className, ref: containerRef }), children))));
});
RemoveScroll.defaultProps = {
    enabled: true,
    removeScrollBar: true,
    inert: false
};
RemoveScroll.classNames = {
    fullWidth: react_remove_scroll_bar_constants__WEBPACK_IMPORTED_MODULE_1__.fullWidthClassName,
    zeroRight: react_remove_scroll_bar_constants__WEBPACK_IMPORTED_MODULE_1__.zeroRightClassName
};



/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js":
/*!**************************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "nonPassive": () => (/* binding */ nonPassive)
/* harmony export */ });
var passiveSupported = false;
if (typeof window !== 'undefined') {
    try {
        var options = Object.defineProperty({}, 'passive', {
            get: function () {
                passiveSupported = true;
                return true;
            }
        });
        window.addEventListener('test', options, options);
        window.removeEventListener('test', options, options);
    }
    catch (err) {
        passiveSupported = false;
    }
}
var nonPassive = passiveSupported ? { passive: false } : false;


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/handleScroll.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/handleScroll.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "locationCouldBeScrolled": () => (/* binding */ locationCouldBeScrolled),
/* harmony export */   "handleScroll": () => (/* binding */ handleScroll)
/* harmony export */ });
var elementCouldBeVScrolled = function (node) {
    var styles = window.getComputedStyle(node);
    return (styles.overflowY !== 'hidden' && // not-not-scrollable
        !(styles.overflowY === styles.overflowX && styles.overflowY === 'visible') // scrollable
    );
};
var elementCouldBeHScrolled = function (node) {
    var styles = window.getComputedStyle(node);
    return (styles.overflowX !== 'hidden' && // not-not-scrollable
        !(styles.overflowY === styles.overflowX && styles.overflowX === 'visible') // scrollable
    );
};
var locationCouldBeScrolled = function (axis, node) {
    var current = node;
    do {
        var isScrollable = elementCouldBeScrolled(axis, current);
        if (isScrollable) {
            var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];
            if (s > d) {
                return true;
            }
        }
        current = current.parentNode;
    } while (current && current !== document.body);
    return false;
};
var getVScrollVariables = function (_a) {
    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
    return [scrollTop, scrollHeight, clientHeight];
};
var getHScrollVariables = function (_a) {
    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
    return [scrollLeft, scrollWidth, clientWidth];
};
var elementCouldBeScrolled = function (axis, node) {
    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function (axis, node) {
    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);
};
var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {
    var delta = sourceDelta;
    // find scrollable target
    var target = event.target;
    var targetInLock = endTarget.contains(target);
    var shouldCancelScroll = false;
    var isDeltaPositive = delta > 0;
    var availableScroll = 0;
    var availableScrollTop = 0;
    do {
        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
        var elementScroll = scroll_1 - capacity - position;
        if (position || elementScroll) {
            if (elementCouldBeScrolled(axis, target)) {
                availableScroll += elementScroll;
                availableScrollTop += position;
            }
        }
        target = target.parentNode;
    } while (
    // portaled content
    (!targetInLock && target !== document.body) ||
        // self content
        (targetInLock && (endTarget.contains(target) || endTarget === target)));
    if (isDeltaPositive &&
        ((noOverscroll && availableScroll === 0) ||
            (!noOverscroll && delta > availableScroll))) {
        shouldCancelScroll = true;
    }
    else if (!isDeltaPositive &&
        ((noOverscroll && availableScrollTop === 0) ||
            (!noOverscroll && -delta > availableScrollTop))) {
        shouldCancelScroll = true;
    }
    return shouldCancelScroll;
};


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/medium.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/medium.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "effectCar": () => (/* binding */ effectCar)
/* harmony export */ });
/* harmony import */ var use_sidecar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-sidecar */ "./node_modules/use-sidecar/dist/es2015/medium.js");

var effectCar = (0,use_sidecar__WEBPACK_IMPORTED_MODULE_0__.createSidecarMedium)();


/***/ }),

/***/ "./node_modules/react-remove-scroll/dist/es2015/sidecar.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/sidecar.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var use_sidecar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-sidecar */ "./node_modules/use-sidecar/dist/es2015/exports.js");
/* harmony import */ var _SideEffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SideEffect */ "./node_modules/react-remove-scroll/dist/es2015/SideEffect.js");
/* harmony import */ var _medium__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./medium */ "./node_modules/react-remove-scroll/dist/es2015/medium.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,use_sidecar__WEBPACK_IMPORTED_MODULE_0__.exportSidecar)(_medium__WEBPACK_IMPORTED_MODULE_1__.effectCar, _SideEffect__WEBPACK_IMPORTED_MODULE_2__.RemoveScrollSideCar));


/***/ }),

/***/ "./node_modules/react-remove-scroll/node_modules/tslib/tslib.es6.js":
/*!**************************************************************************!*\
  !*** ./node_modules/react-remove-scroll/node_modules/tslib/tslib.es6.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./node_modules/react-style-singleton/dist/es2015/component.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/component.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "styleSingleton": () => (/* binding */ styleSingleton)
/* harmony export */ });
/* harmony import */ var _hook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hook */ "./node_modules/react-style-singleton/dist/es2015/hook.js");

var styleSingleton = function () {
    var useStyle = (0,_hook__WEBPACK_IMPORTED_MODULE_0__.styleHookSingleton)();
    var Sheet = function (_a) {
        var styles = _a.styles;
        useStyle(styles);
        return null;
    };
    return Sheet;
};


/***/ }),

/***/ "./node_modules/react-style-singleton/dist/es2015/hook.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/hook.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "styleHookSingleton": () => (/* binding */ styleHookSingleton)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _singleton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./singleton */ "./node_modules/react-style-singleton/dist/es2015/singleton.js");


var styleHookSingleton = function () {
    var sheet = (0,_singleton__WEBPACK_IMPORTED_MODULE_1__.stylesheetSingleton)();
    return function (styles) {
        react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
            sheet.add(styles);
            return function () {
                sheet.remove();
            };
        }, []);
    };
};


/***/ }),

/***/ "./node_modules/react-style-singleton/dist/es2015/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "styleSingleton": () => (/* reexport safe */ _component__WEBPACK_IMPORTED_MODULE_0__.styleSingleton),
/* harmony export */   "stylesheetSingleton": () => (/* reexport safe */ _singleton__WEBPACK_IMPORTED_MODULE_1__.stylesheetSingleton),
/* harmony export */   "styleHookSingleton": () => (/* reexport safe */ _hook__WEBPACK_IMPORTED_MODULE_2__.styleHookSingleton)
/* harmony export */ });
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ "./node_modules/react-style-singleton/dist/es2015/component.js");
/* harmony import */ var _singleton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./singleton */ "./node_modules/react-style-singleton/dist/es2015/singleton.js");
/* harmony import */ var _hook__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hook */ "./node_modules/react-style-singleton/dist/es2015/hook.js");





/***/ }),

/***/ "./node_modules/react-style-singleton/dist/es2015/singleton.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/singleton.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stylesheetSingleton": () => (/* binding */ stylesheetSingleton)
/* harmony export */ });
/* harmony import */ var get_nonce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-nonce */ "./node_modules/get-nonce/dist/es2015/index.js");

function makeStyleTag() {
    if (!document)
        return null;
    var tag = document.createElement('style');
    tag.type = 'text/css';
    var nonce = (0,get_nonce__WEBPACK_IMPORTED_MODULE_0__.getNonce)();
    if (nonce) {
        tag.setAttribute('nonce', nonce);
    }
    return tag;
}
function injectStyles(tag, css) {
    if (tag.styleSheet) {
        tag.styleSheet.cssText = css;
    }
    else {
        tag.appendChild(document.createTextNode(css));
    }
}
function insertStyleTag(tag) {
    var head = document.head || document.getElementsByTagName('head')[0];
    head.appendChild(tag);
}
var stylesheetSingleton = function () {
    var counter = 0;
    var stylesheet = null;
    return {
        add: function (style) {
            if (counter == 0) {
                if (stylesheet = makeStyleTag()) {
                    injectStyles(stylesheet, style);
                    insertStyleTag(stylesheet);
                }
            }
            counter++;
        },
        remove: function () {
            counter--;
            if (!counter && stylesheet) {
                stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
                stylesheet = null;
            }
        }
    };
};


/***/ }),

/***/ "./src/presentation/components/wrapper/index.tsx":
/*!*******************************************************!*\
  !*** ./src/presentation/components/wrapper/index.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ "./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js");
/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/react */ "./node_modules/@chakra-ui/layout/dist/chakra-ui-layout.esm.js");
/* harmony import */ var _presentation_styles_global_styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/presentation/styles/global-styles */ "./src/presentation/styles/global-styles.ts");
/* harmony import */ var _presentation_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/presentation/components */ "./src/presentation/components/index.ts");
/* harmony import */ var react_icons_md__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-icons/md */ "./node_modules/react-icons/md/index.esm.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/index.js");






const Wrapper = ({ children }) => {
    const navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_3__.useNavigate)();
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.ChakraProvider, { theme: _presentation_styles_global_styles__WEBPACK_IMPORTED_MODULE_1__.theme },
        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Grid, { gridTemplateColumns: "28rem 1fr", gridTemplateRows: "8rem 1fr", h: "100vh", w: "100vw" },
            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_presentation_components__WEBPACK_IMPORTED_MODULE_2__.Header, null),
            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_presentation_components__WEBPACK_IMPORTED_MODULE_2__.Sidebar, null),
            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Box, { gridColumn: "2/-1", gridRow: "2/-1" },
                react__WEBPACK_IMPORTED_MODULE_0__.createElement(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Box, { onClick: () => navigate() },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_icons_md__WEBPACK_IMPORTED_MODULE_6__.MdChevronLeft, null)),
                children))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Wrapper);


/***/ }),

/***/ "./src/presentation/styles/global-styles.ts":
/*!**************************************************!*\
  !*** ./src/presentation/styles/global-styles.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "globalStyles": () => (/* binding */ globalStyles),
/* harmony export */   "theme": () => (/* binding */ theme)
/* harmony export */ });
/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chakra-ui/react */ "./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js");

const globalStyles = {
    '*, *::after, *::before': {
        margin: 0,
        padding: 0,
        boxSizing: 'border-box'
    },
    html: {
        fontSize: '62.5%',
        '@media screen and (max-width: 75.5em)': {
            fontSize: '56.25%'
        },
        '@media screen and (max-width: 56.25em)': {
            fontSize: '50%'
        }
    },
    'body, button, input': {
        fontFamily: 'Roboto, Arial, Helvetica, sans-serif'
    }
};
const theme = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.extendTheme)({
    styles: {
        global: globalStyles
    }
});


/***/ }),

/***/ "./node_modules/use-callback-ref/dist/es2015/assignRef.js":
/*!****************************************************************!*\
  !*** ./node_modules/use-callback-ref/dist/es2015/assignRef.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assignRef": () => (/* binding */ assignRef)
/* harmony export */ });
/**
 * Assigns a value for a given ref, no matter of the ref format
 * @param {RefObject} ref - a callback function or ref object
 * @param value - a new value
 *
 * @see https://github.com/theKashey/use-callback-ref#assignref
 * @example
 * const refObject = useRef();
 * const refFn = (ref) => {....}
 *
 * assignRef(refObject, "refValue");
 * assignRef(refFn, "refValue");
 */
function assignRef(ref, value) {
    if (typeof ref === 'function') {
        ref(value);
    }
    else if (ref) {
        ref.current = value;
    }
    return ref;
}


/***/ }),

/***/ "./node_modules/use-callback-ref/dist/es2015/useMergeRef.js":
/*!******************************************************************!*\
  !*** ./node_modules/use-callback-ref/dist/es2015/useMergeRef.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useMergeRefs": () => (/* binding */ useMergeRefs)
/* harmony export */ });
/* harmony import */ var _useRef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useRef */ "./node_modules/use-callback-ref/dist/es2015/useRef.js");
/* harmony import */ var _assignRef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assignRef */ "./node_modules/use-callback-ref/dist/es2015/assignRef.js");


/**
 * Merges two or more refs together providing a single interface to set their value
 * @param {RefObject|Ref} refs
 * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}
 *
 * @see {@link mergeRefs} a version without buit-in memoization
 * @see https://github.com/theKashey/use-callback-ref#usemergerefs
 * @example
 * const Component = React.forwardRef((props, ref) => {
 *   const ownRef = useRef();
 *   const domRef = useMergeRefs([ref, ownRef]); // 👈 merge together
 *   return <div ref={domRef}>...</div>
 * }
 */
function useMergeRefs(refs, defaultValue) {
    return (0,_useRef__WEBPACK_IMPORTED_MODULE_0__.useCallbackRef)(defaultValue, function (newValue) {
        return refs.forEach(function (ref) { return (0,_assignRef__WEBPACK_IMPORTED_MODULE_1__.assignRef)(ref, newValue); });
    });
}


/***/ }),

/***/ "./node_modules/use-callback-ref/dist/es2015/useRef.js":
/*!*************************************************************!*\
  !*** ./node_modules/use-callback-ref/dist/es2015/useRef.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useCallbackRef": () => (/* binding */ useCallbackRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");

/**
 * creates a MutableRef with ref change callback
 * @param initialValue - initial ref value
 * @param {Function} callback - a callback to run when value changes
 *
 * @example
 * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);
 * ref.current = 1;
 * // prints 0 -> 1
 *
 * @see https://reactjs.org/docs/hooks-reference.html#useref
 * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref
 * @returns {MutableRefObject}
 */
function useCallbackRef(initialValue, callback) {
    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function () { return ({
        // value
        value: initialValue,
        // last callback
        callback: callback,
        // "memoized" public interface
        facade: {
            get current() {
                return ref.value;
            },
            set current(value) {
                var last = ref.value;
                if (last !== value) {
                    ref.value = value;
                    ref.callback(value, last);
                }
            }
        }
    }); })[0];
    // update callback
    ref.callback = callback;
    return ref.facade;
}


/***/ }),

/***/ "./node_modules/use-sidecar/dist/es2015/exports.js":
/*!*********************************************************!*\
  !*** ./node_modules/use-sidecar/dist/es2015/exports.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "exportSidecar": () => (/* binding */ exportSidecar)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/use-sidecar/node_modules/tslib/tslib.es6.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");


var SideCar = function (_a) {
    var sideCar = _a.sideCar, rest = tslib__WEBPACK_IMPORTED_MODULE_1__.__rest(_a, ["sideCar"]);
    if (!sideCar) {
        throw new Error('Sidecar: please provide `sideCar` property to import the right car');
    }
    var Target = sideCar.read();
    if (!Target) {
        throw new Error('Sidecar medium not found');
    }
    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Target, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
    medium.useMedium(exported);
    return SideCar;
}


/***/ }),

/***/ "./node_modules/use-sidecar/dist/es2015/medium.js":
/*!********************************************************!*\
  !*** ./node_modules/use-sidecar/dist/es2015/medium.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMedium": () => (/* binding */ createMedium),
/* harmony export */   "createSidecarMedium": () => (/* binding */ createSidecarMedium)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/use-sidecar/node_modules/tslib/tslib.es6.js");

function ItoI(a) {
    return a;
}
function innerCreateMedium(defaults, middleware) {
    if (middleware === void 0) { middleware = ItoI; }
    var buffer = [];
    var assigned = false;
    var medium = {
        read: function () {
            if (assigned) {
                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');
            }
            if (buffer.length) {
                return buffer[buffer.length - 1];
            }
            return defaults;
        },
        useMedium: function (data) {
            var item = middleware(data, assigned);
            buffer.push(item);
            return function () {
                buffer = buffer.filter(function (x) { return x !== item; });
            };
        },
        assignSyncMedium: function (cb) {
            assigned = true;
            while (buffer.length) {
                var cbs = buffer;
                buffer = [];
                cbs.forEach(cb);
            }
            buffer = {
                push: function (x) { return cb(x); },
                filter: function () { return buffer; },
            };
        },
        assignMedium: function (cb) {
            assigned = true;
            var pendingQueue = [];
            if (buffer.length) {
                var cbs = buffer;
                buffer = [];
                cbs.forEach(cb);
                pendingQueue = buffer;
            }
            var executeQueue = function () {
                var cbs = pendingQueue;
                pendingQueue = [];
                cbs.forEach(cb);
            };
            var cycle = function () { return Promise.resolve().then(executeQueue); };
            cycle();
            buffer = {
                push: function (x) {
                    pendingQueue.push(x);
                    cycle();
                },
                filter: function (filter) {
                    pendingQueue = pendingQueue.filter(filter);
                    return buffer;
                },
            };
        },
    };
    return medium;
}
function createMedium(defaults, middleware) {
    if (middleware === void 0) { middleware = ItoI; }
    return innerCreateMedium(defaults, middleware);
}
function createSidecarMedium(options) {
    if (options === void 0) { options = {}; }
    var medium = innerCreateMedium(null);
    medium.options = tslib__WEBPACK_IMPORTED_MODULE_0__.__assign({ async: true, ssr: false }, options);
    return medium;
}


/***/ }),

/***/ "./node_modules/use-sidecar/node_modules/tslib/tslib.es6.js":
/*!******************************************************************!*\
  !*** ./node_modules/use-sidecar/node_modules/tslib/tslib.es6.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./node_modules/warning/warning.js":
/*!*****************************************!*\
  !*** ./node_modules/warning/warning.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = "development" !== 'production';

var warning = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  }

  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;


/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _defineProperty)
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _inheritsLoose)
/* harmony export */ });
/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(subClass, superClass);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _objectWithoutPropertiesLoose)
/* harmony export */ });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _setPrototypeOf)
/* harmony export */ });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/create fake namespace object */
/******/ (() => {
/******/ 	var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 	var leafPrototypes;
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 16: return value when it's Promise-like
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = this(value);
/******/ 		if(mode & 8) return value;
/******/ 		if(typeof value === 'object' && value) {
/******/ 			if((mode & 4) && value.__esModule) return value;
/******/ 			if((mode & 16) && typeof value.then === 'function') return value;
/******/ 		}
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		var def = {};
/******/ 		leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 		for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 			Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 		}
/******/ 		def['default'] = () => (value);
/******/ 		__webpack_require__.d(ns, def);
/******/ 		return ns;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("a6528355a49bc93447e1")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,